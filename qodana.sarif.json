{
  "$schema": "https://raw.githubusercontent.com/schemastore/schemastore/master/src/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "GO",
          "fullName": "Qodana",
          "version": "241.15989.157",
          "rules": [],
          "taxa": [
            {
              "id": "JavaScript 和 TypeScript",
              "name": "JavaScript 和 TypeScript"
            },
            {
              "id": "JavaScript 和 TypeScript/控制流问题",
              "name": "控制流问题",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "EditorConfig",
              "name": "EditorConfig"
            },
            {
              "id": "Go",
              "name": "Go"
            },
            {
              "id": "Go/可能的 bug",
              "name": "可能的 bug",
              "relationships": [
                {
                  "target": {
                    "id": "Go",
                    "index": 3,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Go/声明冗余",
              "name": "声明冗余",
              "relationships": [
                {
                  "target": {
                    "id": "Go",
                    "index": 3,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Shell 脚本",
              "name": "Shell 脚本"
            },
            {
              "id": "JavaScript 和 TypeScript/单元测试",
              "name": "单元测试",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Makefile",
              "name": "Makefile"
            },
            {
              "id": "JSON 和 JSON5",
              "name": "JSON 和 JSON5"
            },
            {
              "id": "MongoJS",
              "name": "MongoJS"
            },
            {
              "id": "Go/数据流分析(实验性)",
              "name": "数据流分析(实验性)",
              "relationships": [
                {
                  "target": {
                    "id": "Go",
                    "index": 3,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/代码样式问题",
              "name": "代码样式问题",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/常规",
              "name": "常规",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "MySQL",
              "name": "MySQL"
            },
            {
              "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
              "name": "可能不合需要的代码结构",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/Flow 类型检查器",
              "name": "Flow 类型检查器",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Markdown",
              "name": "Markdown"
            },
            {
              "id": "JavaScript 和 TypeScript/可能的 bug",
              "name": "可能的 bug",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "HTTP 客户端",
              "name": "HTTP 客户端"
            },
            {
              "id": "HTML",
              "name": "HTML"
            },
            {
              "id": "JavaScript 和 TypeScript/未使用的符号",
              "name": "未使用的符号",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/数据流",
              "name": "数据流",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/按位运算问题",
              "name": "按位运算问题",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/ES2015 迁移协助",
              "name": "ES2015 迁移协助",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "常规",
              "name": "常规"
            },
            {
              "id": "HTML/可访问性",
              "name": "可访问性",
              "relationships": [
                {
                  "target": {
                    "id": "HTML",
                    "index": 20,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/React",
              "name": "React",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/TypeScript",
              "name": "TypeScript",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/有效性问题",
              "name": "有效性问题",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Docker-compose",
              "name": "Docker-compose"
            },
            {
              "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
              "name": "可能引起混淆的代码结构",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "CSS",
              "name": "CSS"
            },
            {
              "id": "CSS/无效元素",
              "name": "无效元素",
              "relationships": [
                {
                  "target": {
                    "id": "CSS",
                    "index": 32,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "SQL",
              "name": "SQL"
            },
            {
              "id": "Dockerfile",
              "name": "Dockerfile"
            },
            {
              "id": "JavaScript 和 TypeScript/Try 语句问题",
              "name": "Try 语句问题",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/函数指标",
              "name": "函数指标",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "结构搜索",
              "name": "结构搜索"
            },
            {
              "id": "Go/代码样式问题",
              "name": "代码样式问题",
              "relationships": [
                {
                  "target": {
                    "id": "Go",
                    "index": 3,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "YAML",
              "name": "YAML"
            },
            {
              "id": "XML",
              "name": "XML"
            },
            {
              "id": "JavaScript 和 TypeScript/赋值问题",
              "name": "赋值问题",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "OpenAPI 规范",
              "name": "OpenAPI 规范"
            },
            {
              "id": "CSS/代码样式问题",
              "name": "代码样式问题",
              "relationships": [
                {
                  "target": {
                    "id": "CSS",
                    "index": 32,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Go/安全性",
              "name": "安全性",
              "relationships": [
                {
                  "target": {
                    "id": "Go",
                    "index": 3,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "正则表达式",
              "name": "正则表达式"
            },
            {
              "id": "Go/常规",
              "name": "常规",
              "relationships": [
                {
                  "target": {
                    "id": "Go",
                    "index": 3,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/Node.js",
              "name": "Node.js",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Go Template",
              "name": "Go Template"
            },
            {
              "id": "Go Template/常规",
              "name": "常规",
              "relationships": [
                {
                  "target": {
                    "id": "Go Template",
                    "index": 49,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/Import 和依赖项",
              "name": "Import 和依赖项",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "RELAX NG",
              "name": "RELAX NG"
            },
            {
              "id": "代码覆盖率",
              "name": "代码覆盖率"
            },
            {
              "id": "CSS/可能的 bug",
              "name": "可能的 bug",
              "relationships": [
                {
                  "target": {
                    "id": "CSS",
                    "index": 32,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/命名约定",
              "name": "命名约定",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/switch 语句问题",
              "name": "switch 语句问题",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/DOM 问题",
              "name": "DOM 问题",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/Async 代码和 promise",
              "name": "Async 代码和 promise",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Go/控制流问题",
              "name": "控制流问题",
              "relationships": [
                {
                  "target": {
                    "id": "Go",
                    "index": 3,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaScript 和 TypeScript/代码质量工具",
              "name": "代码质量工具",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript 和 TypeScript",
                    "index": 0,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "校对",
              "name": "校对"
            },
            {
              "id": "GitHub 操作",
              "name": "GitHub 操作"
            },
            {
              "id": "Go modules",
              "name": "Go modules"
            },
            {
              "id": "Go modules/声明冗余",
              "name": "声明冗余",
              "relationships": [
                {
                  "target": {
                    "id": "Go modules",
                    "index": 63,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "安全性",
              "name": "安全性"
            },
            {
              "id": "CSS/代码质量工具",
              "name": "代码质量工具",
              "relationships": [
                {
                  "target": {
                    "id": "CSS",
                    "index": 32,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "PostgreSQL",
              "name": "PostgreSQL"
            },
            {
              "id": "Go modules/依赖项问题(go list -m -u)",
              "name": "依赖项问题(go list -m -u)",
              "relationships": [
                {
                  "target": {
                    "id": "Go modules",
                    "index": 63,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "SQL Server",
              "name": "SQL Server"
            },
            {
              "id": "Go modules/常规",
              "name": "常规",
              "relationships": [
                {
                  "target": {
                    "id": "Go modules",
                    "index": 63,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Qodana",
              "name": "Qodana"
            },
            {
              "id": "不适当的 gRPC 请求架构",
              "name": "不适当的 gRPC 请求架构"
            },
            {
              "id": "协议缓冲区",
              "name": "协议缓冲区"
            },
            {
              "id": "JavaScript and TypeScript",
              "name": "JavaScript and TypeScript"
            },
            {
              "id": "JavaScript and TypeScript/安全性",
              "name": "安全性",
              "relationships": [
                {
                  "target": {
                    "id": "JavaScript and TypeScript",
                    "index": 74,
                    "toolComponent": {
                      "name": "GO"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Oracle",
              "name": "Oracle"
            },
            {
              "id": "国际化",
              "name": "国际化"
            },
            {
              "id": "File Watcher",
              "name": "File Watcher"
            },
            {
              "id": "版本控制",
              "name": "版本控制"
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        },
        "extensions": [
          {
            "name": "JavaScript",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "ConstantConditionalExpressionJS",
                "shortDescription": {
                  "text": "常量条件表达式"
                },
                "fullDescription": {
                  "text": "报告格式为 'true? 的条件表达式 result1: result2' 或 'false? result1: result2。 建议简化该表达式。'",
                  "markdown": "报告格式为 `true? 的条件表达式 result1: result2` 或 `false? result1: result2``。\n建议简化该表达式。\n`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSTestFailedLine",
                "shortDescription": {
                  "text": "在测试代码中高亮显示失败的行"
                },
                "fullDescription": {
                  "text": "报告失败的方法调用或测试中的断言。",
                  "markdown": "报告失败的方法调用或测试中的断言。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSTestFailedLine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/单元测试",
                      "index": 7,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonBlockStatementBodyJS",
                "shortDescription": {
                  "text": "没有大括号的语句体"
                },
                "fullDescription": {
                  "text": "报告其语句体不是块语句的 'if'、'while'、'for' 或 'with' 语句。 在语句体中使用代码块通常对下游维护更安全。",
                  "markdown": "报告其语句体不是块语句的 `if`、`while`、`for` 或 `with` 语句。 在语句体中使用代码块通常对下游维护更安全。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonBlockStatementBodyJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfStatementWithTooManyBranchesJS",
                "shortDescription": {
                  "text": "'if' 语句的分支过多"
                },
                "fullDescription": {
                  "text": "报告分支过多的 'if' 语句。 此类语句可能令人困惑，并且通常表明设计抽象级别不足。 使用下面的字段可指定预期的最大分支数。",
                  "markdown": "报告分支过多的 `if` 语句。 此类语句可能令人困惑，并且通常表明设计抽象级别不足。\n\n\n使用下面的字段可指定预期的最大分支数。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IfStatementWithTooManyBranchesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSValidateJSDoc",
                "shortDescription": {
                  "text": "JSDoc 中的语法错误和未解析的引用"
                },
                "fullDescription": {
                  "text": "报告文档注释中的语法差异。",
                  "markdown": "报告文档注释中的语法差异。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSValidateJSDoc",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BreakStatementJS",
                "shortDescription": {
                  "text": "'break' 语句"
                },
                "fullDescription": {
                  "text": "报告 'break' 语句。 忽略结束 case 块的 'break' 语句。",
                  "markdown": "报告 `break` 语句。 忽略结束 case 块的 `break` 语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BreakStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FlowJSConfig",
                "shortDescription": {
                  "text": "缺少 .flowconfig"
                },
                "fullDescription": {
                  "text": "报告在项目中没有关联的 '.flowconfig' 文件且带有 '@flow' 标志的 JavaScript 文件。",
                  "markdown": "报告在项目中没有关联的 `.flowconfig` 文件且带有 `@flow` 标志的 JavaScript 文件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FlowJSConfig",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Flow 类型检查器",
                      "index": 16,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPotentiallyInvalidUsageOfClassThis",
                "shortDescription": {
                  "text": "从闭包对类中 'this' 的引用可能无效"
                },
                "fullDescription": {
                  "text": "报告试图通过不是 lambda 的嵌套函数中的 'this.' 限定符，来引用 ECMAScript 类成员的情况。 不是 lambda 的嵌套函数中的 'this' 是函数自身的 'this'，与外部类无关。",
                  "markdown": "报告试图通过不是 lambda 的嵌套函数中的 `this.` 限定符，来引用 ECMAScript 类成员的情况。  \n不是 lambda 的嵌套函数中的 `this` 是函数自身的 ` this`，与外部类无关。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPotentiallyInvalidUsageOfClassThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DebuggerStatementJS",
                "shortDescription": {
                  "text": "'debugger' 语句"
                },
                "fullDescription": {
                  "text": "报告用于与 Javascript 调试器交互的 'debugger' 语句。 此类语句不应出现在生产代码中。",
                  "markdown": "报告用于与 Javascript 调试器交互的 `debugger` 语句。 此类语句不应出现在生产代码中。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DebuggerStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnusedAssignment",
                "shortDescription": {
                  "text": "未使用的赋值"
                },
                "fullDescription": {
                  "text": "报告赋值后从未使用其值的变量。 建议移除未使用的变量以缩短代码并避免冗余分配。 将报告以下情况： 变量赋值后从未读取。 在下次读取变量前，变量的值总是被另一个赋值覆盖。 变量的初始值设定项冗余（出于上述原因之一）。",
                  "markdown": "报告赋值后从未使用其值的变量。  \n建议移除未使用的变量以缩短代码并避免冗余分配。\n\n将报告以下情况：\n\n* 变量赋值后从未读取。\n* 在下次读取变量前，变量的值总是被另一个赋值覆盖。\n* 变量的初始值设定项冗余（出于上述原因之一）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnusedAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/未使用的符号",
                      "index": 21,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FlowJSError",
                "shortDescription": {
                  "text": "Flow 类型检查器"
                },
                "fullDescription": {
                  "text": "报告 Flow 中的错误。",
                  "markdown": "报告 [Flow](https://flowtype.org/) 中的错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "FlowJSError",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Flow 类型检查器",
                      "index": 16,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReuseOfLocalVariableJS",
                "shortDescription": {
                  "text": "局部变量的重用"
                },
                "fullDescription": {
                  "text": "报告重用局部变量并使用无关 初始变量用法的新值覆盖其值的情况。 以这种方式重用局部变量可能会造成混淆， 因为局部变量的预期语义可能随每种用法而变化。 如果代码更改导致预期被覆盖的值任然存在，那么也可能导致错误。 优良的作法是保持变量生命周期尽可能短，而不要为了简洁重用局部变量。",
                  "markdown": "报告重用局部变量并使用无关 初始变量用法的新值覆盖其值的情况。 以这种方式重用局部变量可能会造成混淆， 因为局部变量的预期语义可能随每种用法而变化。 如果代码更改导致预期被覆盖的值任然存在，那么也可能导致错误。 优良的作法是保持变量生命周期尽可能短，而不要为了简洁重用局部变量。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReuseOfLocalVariableJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/数据流",
                      "index": 22,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ShiftOutOfRangeJS",
                "shortDescription": {
                  "text": "通过可能错误的常量进行移位运算"
                },
                "fullDescription": {
                  "text": "报告此类情况下的移位运算，即第二个操作数是合理范围外的常量，例如 '0..31' 范围外的整数移位运算，移位的值为负值或过大的值。",
                  "markdown": "报告此类情况下的移位运算，即第二个操作数是合理范围外的常量，例如 `0..31` 范围外的整数移位运算，移位的值为负值或过大的值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ShiftOutOfRangeJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/按位运算问题",
                      "index": 23,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryContinueJS",
                "shortDescription": {
                  "text": "不必要的 'continue' 语句"
                },
                "fullDescription": {
                  "text": "报告循环末尾不必要的 'continue' 语句。 建议移除这些语句。",
                  "markdown": "报告循环末尾不必要的 ` continue` 语句。 建议移除这些语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryContinueJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSClosureCompilerSyntax",
                "shortDescription": {
                  "text": "JSDoc 标记不正确的用法"
                },
                "fullDescription": {
                  "text": "报告 Google Closure Compiler 注解隐含的警告，包括 '@abstract'、'@interface' 和 '@implement' 标记的正确使用情况。",
                  "markdown": "报告 *Google Closure Compiler* 注解隐含的警告，包括 `@abstract`、`@interface` 和 `@implement` 标记的正确使用情况。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSClosureCompilerSyntax",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertLetToConst",
                "shortDescription": {
                  "text": "已使用 'let' 而不是 'const'"
                },
                "fullDescription": {
                  "text": "报告可以设为 'const' 的 'let' 声明。",
                  "markdown": "报告可以设为 `const` 的 `let` 声明。  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertLetToConst",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/ES2015 迁移协助",
                      "index": 24,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSXDomNesting",
                "shortDescription": {
                  "text": "无效的 DOM 元素嵌套"
                },
                "fullDescription": {
                  "text": "检测 JSX 文件中未根据 DOM 规范正确嵌套的 HTML 元素。 React 会对不正确嵌套的元素报告运行时警告。",
                  "markdown": "检测 JSX 文件中未根据 DOM 规范正确嵌套的 HTML 元素。 React 会对不正确嵌套的元素报告运行时警告。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSXDomNesting",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/React",
                      "index": 27,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptValidateTypes",
                "shortDescription": {
                  "text": "类型不匹配"
                },
                "fullDescription": {
                  "text": "报告类型不正确的形参、返回值或赋值表达式。",
                  "markdown": "报告类型不正确的形参、返回值或赋值表达式。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptValidateTypes",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BadExpressionStatementJS",
                "shortDescription": {
                  "text": "非赋值或调用的表达式语句"
                },
                "fullDescription": {
                  "text": "报告既非赋值也非调用的表达式语句。 此类语句通常表明有错误。",
                  "markdown": "报告既非赋值也非调用的表达式语句。 此类语句通常表明有错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "BadExpressionStatementJS",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/有效性问题",
                      "index": 29,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConfusingFloatingPointLiteralJS",
                "shortDescription": {
                  "text": "浮点文字会引起混淆"
                },
                "fullDescription": {
                  "text": "报告任何没有小数点的浮点数或小数点前的任何数字 或小数点后的任何数字。 此类文字可能令人困惑，并且违反多种编码标准。",
                  "markdown": "报告任何没有小数点的浮点数或小数点前的任何数字 或小数点后的任何数字。 此类文字可能令人困惑，并且违反多种编码标准。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConfusingFloatingPointLiteralJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BreakStatementWithLabelJS",
                "shortDescription": {
                  "text": "带标签的 'break' 语句"
                },
                "fullDescription": {
                  "text": "报告 'break' 标签语句。",
                  "markdown": "报告 `break` 标签语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BreakStatementWithLabelJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ContinueOrBreakFromFinallyBlockJS",
                "shortDescription": {
                  "text": "'continue' 或 'break' 位于 'finally' 块内"
                },
                "fullDescription": {
                  "text": "报告 'finally' 块中的 'break' 或 'continue' 语句。 此类语句非常令人困惑，可能隐藏异常，并导致调试复杂化。",
                  "markdown": "报告 `finally` 块中的 `break` 或 `continue` 语句。 此类语句非常令人困惑，可能隐藏异常，并导致调试复杂化。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ContinueOrBreakFromFinallyBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Try 语句问题",
                      "index": 36,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StatementsPerFunctionJS",
                "shortDescription": {
                  "text": "函数过长"
                },
                "fullDescription": {
                  "text": "报告过长的函数。 函数长度通过函数中非空语句的数量来计算。 太长的函数容易出错，而且难以测试。 使用下面的字段可指定函数中的可接受最大语句数量。",
                  "markdown": "报告过长的函数。 函数长度通过函数中非空语句的数量来计算。 太长的函数容易出错，而且难以测试。\n\n\n使用下面的字段可指定函数中的可接受最大语句数量。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionTooLongJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/函数指标",
                      "index": 37,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLocalVariableJS",
                "shortDescription": {
                  "text": "冗余局部变量"
                },
                "fullDescription": {
                  "text": "报告不会让函数更易于理解的不必要局部变量： 立刻返回的局部变量 立刻赋值给另一个变量并且不再使用的局部变量 总是与另一个局部变量或形参的值相同的局部变量。 使用下面的复选框以使该检查忽略立刻返回或抛出的变量。 为清晰起见和易于调试，某些编码样式建议使用此类变量。",
                  "markdown": "报告不会让函数更易于理解的不必要局部变量：\n\n* 立刻返回的局部变量\n* 立刻赋值给另一个变量并且不再使用的局部变量\n* 总是与另一个局部变量或形参的值相同的局部变量。\n\n\n使用下面的复选框以使该检查忽略立刻返回或抛出的变量。 为清晰起见和易于调试，某些编码样式建议使用此类变量。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLocalVariableJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/数据流",
                      "index": 22,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSMethodCanBeStatic",
                "shortDescription": {
                  "text": "方法可以为 'static'"
                },
                "fullDescription": {
                  "text": "报告可以安全地设为 'static' 的类方法。 如果某个方法未引用其类的任何非 static 方法和非 static 字段，并且未在子类中被重写， 则该方法可以为 'static' 方法。 使用下面的第一个复选框只检查 'private' 方法。",
                  "markdown": "报告可以安全地设为 `static` 的类方法。 如果某个方法未引用其类的任何非 static 方法和非 static 字段，并且未在子类中被重写， 则该方法可以为 `static` 方法。\n\n\n使用下面的第一个复选框只检查 `private` 方法。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSMethodCanBeStatic",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSDeclarationsAtScopeStart",
                "shortDescription": {
                  "text": "'var' 未在函数开头声明"
                },
                "fullDescription": {
                  "text": "检查使用 var 声明的局部变量的声明是否位于函数范围的顶部。 默认情况下，在执行代码时，变量声明总是被隐形地移动（“提升”）到它所包含的范围的顶部。 因此，在范围顶部声明有助于在代码中表现出这种行为。",
                  "markdown": "检查使用 **var** 声明的局部变量的声明是否位于函数范围的顶部。   \n\n默认情况下，在执行代码时，变量声明总是被隐形地移动（\"提升\"）到它所包含的范围的顶部。 因此，在范围顶部声明有助于在代码中表现出这种行为。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSDeclarationsAtScopeStart",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ContinueStatementWithLabelJS",
                "shortDescription": {
                  "text": "带标签的 'continue' 语句"
                },
                "fullDescription": {
                  "text": "添加 'continue' 标签语句。",
                  "markdown": "添加 `continue` 标签语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ContinueStatementWithLabelJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptMissingConfigOption",
                "shortDescription": {
                  "text": "缺少 tsconfig.json 选项 "
                },
                "fullDescription": {
                  "text": "报告 'tsconfig.json' 中需要显式选项的用法。 例如，要在 '.tsx' 文件中使用 JSX，'tsconfig.json' 必须包含 '\"jsx\"' 属性。",
                  "markdown": "报告 `tsconfig.json` 中需要显式选项的用法。 例如，要在 `.tsx` 文件中使用 JSX，`tsconfig.json` 必须包含 `\"jsx\"` 属性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptMissingConfigOption",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSObjectNullOrUndefined",
                "shortDescription": {
                  "text": "对象为 'null' 或 'undefined'"
                },
                "fullDescription": {
                  "text": "报告对 'undefined' 或 'null' 对象调用方法、访问属性或调用函数所导致的错误。",
                  "markdown": "报告对 `undefined` 或 `null` 对象调用方法、访问属性或调用函数所导致的错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSObjectNullOrUndefined",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSXUnresolvedComponent",
                "shortDescription": {
                  "text": "未解析的 JSX 组件"
                },
                "fullDescription": {
                  "text": "报告对 JSX 组件的未解析引用。 如果引用的组件在此项目或其依赖项中定义，则建议添加缺少的 import 语句，或创建采用此名称的新组件。 新组件的模板可以在“编辑器 | 文件和代码模板”中修改。",
                  "markdown": "报告对 JSX 组件的未解析引用。 如果引用的组件在此项目或其依赖项中定义，则建议添加缺少的 import 语句，或创建采用此名称的新组件。\n\n新组件的模板可以在\"编辑器 \\| 文件和代码模板\"中修改。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSXUnresolvedComponent",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ShorthandObjectProperty",
                "shortDescription": {
                  "text": "属性可被替换为速记形式"
                },
                "fullDescription": {
                  "text": "报告可以转换为 ES6 速记样式的对象属性，并提供快速修复来执行此操作。 示例： 'var obj = {foo:foo}' 应用快速修复后，代码如下所示： 'var obj = {foo}'",
                  "markdown": "报告可以转换为 ES6 速记样式的对象属性，并提供快速修复来执行此操作。\n\n示例：\n\n\n    var obj = {foo:foo}\n\n应用快速修复后，代码如下所示：\n\n\n    var obj = {foo}\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ShorthandObjectProperty",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLabelOnBreakStatementJS",
                "shortDescription": {
                  "text": "'break' 语句上的标签不必要"
                },
                "fullDescription": {
                  "text": "报告可以在不更改控制流的情况下移除其标签的 'break' 标签语句。",
                  "markdown": "报告可以在不更改控制流的情况下移除其标签的 `break` 标签语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLabelOnBreakStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ContinueStatementJS",
                "shortDescription": {
                  "text": "'continue' 语句"
                },
                "fullDescription": {
                  "text": "报告 'continue' 语句。",
                  "markdown": "报告 `continue` 语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ContinueStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToForLoopParameterJS",
                "shortDescription": {
                  "text": "赋值给 'for' 循环形参"
                },
                "fullDescription": {
                  "text": "报告对声明为 'for' 循环形参的变量的赋值。 虽然偶尔是有意为之，但此结构可能格外令人困惑，并且通常是由错误所致。",
                  "markdown": "报告对声明为 ` for` 循环形参的变量的赋值。 虽然偶尔是有意为之，但此结构可能格外令人困惑，并且通常是由错误所致。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToForLoopParameterJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/赋值问题",
                      "index": 42,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPotentiallyInvalidConstructorUsage",
                "shortDescription": {
                  "text": "可能无效的构造函数用法"
                },
                "fullDescription": {
                  "text": "报告可能无效的构造函数的用法，例如：'new' 后面不是构造函数的函数，使用 构造函数的原型或调用构造函数但没有使用 'new' 。 假定构造函数的名称采用大写（可选）或有显式的 JSDoc '@constructor' 标记。",
                  "markdown": "报告可能无效的构造函数的用法，例如：`new` 后面不是构造函数的函数，使用 构造函数的原型或调用构造函数但没有使用 `new` 。 假定构造函数的名称采用大写（可选）或有显式的 JSDoc `@constructor` 标记。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPotentiallyInvalidConstructorUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessArithmeticExpressionJS",
                "shortDescription": {
                  "text": "无意义的算术表达式"
                },
                "fullDescription": {
                  "text": "报告包括加零或减零、乘零或一、除一和零移位的算术表达式。 此类表达式可能是由于没有完全完成自动化重构而造成。",
                  "markdown": "报告包括加零或减零、乘零或一、除一和零移位的算术表达式。 此类表达式可能是由于没有完全完成自动化重构而造成。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessArithmeticExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NodeCoreCodingAssistance",
                "shortDescription": {
                  "text": "未解析的 Node.js API"
                },
                "fullDescription": {
                  "text": "建议为 Node.js 配置编码辅助，例如 'require' 和/或核心模块（'path'、'http'、'fs' 等）。 有关完整列表，请参阅 https://nodejs.org/api/。",
                  "markdown": "建议为 Node.js 配置编码辅助，例如 `require` 和/或核心模块（'path'、'http'、'fs' 等）。\n\n\n有关完整列表，请参阅 <https://nodejs.org/api/>。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NodeCoreCodingAssistance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Node.js",
                      "index": 48,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUndeclaredVariable",
                "shortDescription": {
                  "text": "隐式声明的全局 JavaScript 变量"
                },
                "fullDescription": {
                  "text": "报告全局变量的隐式声明。 示例： 'var aaa = 1; // 优良\n  bbb = 2; // 不良，如果未在某处用 'var' 声明 bbb'",
                  "markdown": "报告全局变量的隐式声明。\n\n示例：\n\n\n      var aaa = 1; // 优良\n      bbb = 2; // 不良，如果未在某处用 'var' 声明 bbb\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSUndeclaredVariable",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DivideByZeroJS",
                "shortDescription": {
                  "text": "除以零"
                },
                "fullDescription": {
                  "text": "报告除以 0 或对 0 取余。",
                  "markdown": "报告除以 0 或对 0 取余。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DivideByZeroJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPrimitiveTypeWrapperUsage",
                "shortDescription": {
                  "text": "使用了基元类型对象包装器"
                },
                "fullDescription": {
                  "text": "报告基元类型包装器使用不当或基元类型属性被修改的情况，因为在后一种情况下，所赋之值将丢失。",
                  "markdown": "报告基元类型包装器使用不当或基元类型属性被修改的情况，因为在后一种情况下，所赋之值将丢失。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPrimitiveTypeWrapperUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptSmartCast",
                "shortDescription": {
                  "text": "范围缩小的类型"
                },
                "fullDescription": {
                  "text": "报告通过类型防护缩小变量类型范围时的变量用法。 请注意，严重性级别不影响此检查。",
                  "markdown": "报告通过类型防护缩小变量类型范围时的变量用法。 请注意，严重性级别不影响此检查。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptSmartCast",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertIndexedForToForOf",
                "shortDescription": {
                  "text": "已使用索引的 'for' 而不是 'for..of'"
                },
                "fullDescription": {
                  "text": "报告对数组使用的 'for' 索引循环。 建议将其替换为 'for..of' 循环。 'for..of' 循环 (在 ECMAScript 6 中引入) 对 'iterable' 对象进行迭代。",
                  "markdown": "报告对数组使用的 [for](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for) 索引循环。 建议将其替换为 [for..of](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of) 循环。   \n`for..of` 循环 (在 ECMAScript 6 中引入) 对 `iterable` 对象进行迭代。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertIndexedForToForOf",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/ES2015 迁移协助",
                      "index": 24,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSLastCommaInArrayLiteral",
                "shortDescription": {
                  "text": "数组文字中的最后一个逗号多余"
                },
                "fullDescription": {
                  "text": "报告数组文字中尾随逗号的用法。 只有将 JavaScript 语言版本设置为 ECMAScript 5.1 时才报告该警告。 尽管此规范允许在数组中使用尾随逗号，但在使用尾随逗号时，某些浏览器可能会抛出错误。 您可以在代码样式 | JavaScript 或 TypeScript | 标点符号中配置尾随逗号的格式设置选项。",
                  "markdown": "报告数组文字中尾随逗号的用法。\n\n只有将 JavaScript 语言版本设置为 ECMAScript 5.1 时才报告该警告。\n\n尽管此规范允许在数组中使用尾随逗号，但在使用尾随逗号时，某些浏览器可能会抛出错误。\n\n您可以在**代码样式** \\| **JavaScript** 或 **TypeScript** \\| **标点符号**中配置尾随逗号的格式设置选项。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSLastCommaInArrayLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionalExpressionJS",
                "shortDescription": {
                  "text": "条件表达式"
                },
                "fullDescription": {
                  "text": "报告三元条件表达式。 有些编码标准禁止此类表达式， 而是支持显式的 'if' 语句。",
                  "markdown": "报告三元条件表达式。 有些编码标准禁止此类表达式， 而是支持显式的 `if` 语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertVarToLetConst",
                "shortDescription": {
                  "text": "已使用 'var' 而不是 'let' 或 'const'"
                },
                "fullDescription": {
                  "text": "报告使用 'var' 而不是 'let' 或 'const' 的声明。 'let' 和 'const' 的作用范围都为块，行为更为严格。 建议将所有 'var' 声明替换为 'let' 或 'const' 声明，具体取决于特定值的语义。 为避免引用错误，可将声明移至函数顶部，或放在变量的第一个用法前。 选择'通过‘全部修复’操作保守地转换变量'选项，以防止使用“全部修复”操作时在这些复杂情况下出现任何更改。",
                  "markdown": "报告使用 `var` 而不是 `let` 或 `const` 的声明。  \n`let` 和 `const` 的作用范围都为块，行为更为严格。   \n\n建议将所有 `var` 声明替换为 `let` 或 `const` 声明，具体取决于特定值的语义。 为避免引用错误，可将声明移至函数顶部，或放在变量的第一个用法前。   \n选择'通过'全部修复'操作保守地转换变量'选项，以防止使用\"全部修复\"操作时在这些复杂情况下出现任何更改。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertVarToLetConst",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/ES2015 迁移协助",
                      "index": 24,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessBooleanExpressionJS",
                "shortDescription": {
                  "text": "无意义的语句或布尔表达式"
                },
                "fullDescription": {
                  "text": "报告无意义或复杂的没有意义的布尔表达式或语句。 示例： 'let a = !(false && x);\n  let b = false || x;' 应用快速修复后，结果如下所示： 'let a = true;\n  let b = x;'",
                  "markdown": "报告无意义或复杂的没有意义的布尔表达式或语句。\n\n示例：\n\n\n      let a = !(false && x);\n      let b = false || x;\n\n应用快速修复后，结果如下所示：\n\n\n      let a = true;\n      let b = x;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessBooleanExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSReferencingMutableVariableFromClosure",
                "shortDescription": {
                  "text": "从闭包中引用可变变量"
                },
                "fullDescription": {
                  "text": "报告函数中对外部可变变量的访问。 示例： 'for (var i = 1; i <= 3; i++) {\n    setTimeout(function() {\n        console.log(i); // 不良\n    }, 0);\n  }'",
                  "markdown": "报告函数中对外部可变变量的访问。\n\n示例：\n\n\n      for (var i = 1; i <= 3; i++) {\n        setTimeout(function() {\n            console.log(i); // 不良\n        }, 0);\n      }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSReferencingMutableVariableFromClosure",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DynamicallyGeneratedCodeJS",
                "shortDescription": {
                  "text": "执行动态生成的代码"
                },
                "fullDescription": {
                  "text": "报告 'eval()'、'setTimeout()' 或 'setInterval()' 函数的调用或 'Function' 对象的分配。 这些函数用于执行通常动态生成的 任意 JavaScript 文本字符串。 这可能非常令人困惑，并且可能存在安全风险。 忽略静态地向这些方法提供回调函数而不生成代码的情况。",
                  "markdown": "报告 `eval()`、`setTimeout()` 或 `setInterval()` 函数的调用或 `Function` 对象的分配。 这些函数用于执行通常动态生成的 任意 JavaScript 文本字符串。 这可能非常令人困惑，并且可能存在安全风险。   \n\n忽略静态地向这些方法提供回调函数而不生成代码的情况。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DynamicallyGeneratedCodeJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegatedConditionalExpressionJS",
                "shortDescription": {
                  "text": "否定条件表达式"
                },
                "fullDescription": {
                  "text": "报告条件被否定的条件表达式。 建议翻转条件表达式中分支的顺序以增加语句的清晰度。 示例：'!condition ? 2 : 1'",
                  "markdown": "报告条件被否定的条件表达式。 建议翻转条件表达式中分支的顺序以增加语句的清晰度。 示例：`!condition ? 2 : 1`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NegatedConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUrlImportUsage",
                "shortDescription": {
                  "text": "使用了 URL 导入"
                },
                "fullDescription": {
                  "text": "检查 JavaScript 语言中使用过的 URL import。 建议下载指定的远程 URL 的模块。 此类关联使 IDE 可以提供正确的代码补全和导航。 只有 JavaScript 语言中的 ECMAScript 模块支持 import 说明符中的 URL。",
                  "markdown": "检查 JavaScript 语言中使用过的 URL import。 建议下载指定的远程 URL 的模块。 此类关联使 IDE 可以提供正确的代码补全和导航。   \n\n只有 JavaScript 语言中的 ECMAScript 模块支持 import 说明符中的 URL。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSUrlImportUsage",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Import 和依赖项",
                      "index": 51,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLabelOnContinueStatementJS",
                "shortDescription": {
                  "text": "'continue' 语句上的不必要标签"
                },
                "fullDescription": {
                  "text": "报告可以在不更改控制流的情况下移除其标签的 'continue' 标签语句。",
                  "markdown": "报告可以在不更改控制流的情况下移除其标签的 `continue` 标签语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLabelOnContinueStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ChainedEqualityJS",
                "shortDescription": {
                  "text": "链式相等"
                },
                "fullDescription": {
                  "text": "报告链式相等比较（即 'a==b==c'）。 此类比较令人困惑。",
                  "markdown": "报告链式相等比较（即 `a==b==c`）。 此类比较令人困惑。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ChainedEqualityComparisonsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SillyAssignmentJS",
                "shortDescription": {
                  "text": "变量被赋值给自己"
                },
                "fullDescription": {
                  "text": "报告 'x = x' 形式的赋值。",
                  "markdown": "报告 `x = x` 形式的赋值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SillyAssignmentJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/赋值问题",
                      "index": 42,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPotentiallyInvalidTargetOfIndexedPropertyAccess",
                "shortDescription": {
                  "text": "索引的属性访问的目标可能不正确"
                },
                "fullDescription": {
                  "text": "报告可能无效的索引属性访问，例如 'Array[1]'。",
                  "markdown": "报告可能无效的索引属性访问，例如 `Array[1]`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPotentiallyInvalidTargetOfIndexedPropertyAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSAccessibilityCheck",
                "shortDescription": {
                  "text": "已引用无法访问的 @private 和 @protected 成员"
                },
                "fullDescription": {
                  "text": "报告对使用 '@private' 或 '@protected' 标记进行标记，但不符合这些标记所隐含的可见性规则的 JavaScript 成员的引用。",
                  "markdown": "报告对使用 `@private` 或 `@protected` 标记进行标记，但不符合这些标记所隐含的可见性规则的 JavaScript 成员的引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSAccessibilityCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertRequireIntoImport",
                "shortDescription": {
                  "text": "使用了 'require()' 而不是 'import'"
                },
                "fullDescription": {
                  "text": "报告 'require()' 语句。 建议使用 'import' 语句将其转换为 'require()' 调用。 启用“使用‘全部修复’操作转换内部范围中的 require()”， 在使用“全部修复”操作时转换嵌套函数和语句内部的所有 'require()' 调用。 请注意，将内部范围中的 'require()' 语句转换为 'import' 语句 可能会导致代码语义更改。 Import 语句是 static 模块依赖项，它们获得了提升， 这表明它们被移至当前模块的顶部。 'require()' 调用动态加载模块。 它们可以有条件地执行，其范围由使用它们的表达式来定义。 清除“使用‘全部修复’操作转换内部范围中的 require()”复选框，以防止在使用“全部修复”操作时对这些复杂情况进行任何更改。",
                  "markdown": "报告 `require()` 语句。 建议使用 `import` 语句将其转换为 `require()` 调用。   \n\n启用\"使用'全部修复'操作转换内部范围中的 require()\"， 在使用\"全部修复\"操作时转换嵌套函数和语句内部的所有 `require()` 调用。   \n\n请注意，将内部范围中的 `require()` 语句转换为 `import` 语句 可能会导致代码语义更改。 Import 语句是 static 模块依赖项，它们获得了提升， 这表明它们被移至当前模块的顶部。 `require()` 调用动态加载模块。 它们可以有条件地执行，其范围由使用它们的表达式来定义。   \n清除\"使用'全部修复'操作转换内部范围中的 require()\"复选框，以防止在使用\"全部修复\"操作时对这些复杂情况进行任何更改。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertRequireIntoImport",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/ES2015 迁移协助",
                      "index": 24,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionWithMultipleLoopsJS",
                "shortDescription": {
                  "text": "函数具有多个循环"
                },
                "fullDescription": {
                  "text": "报告具有多个循环语句的函数。",
                  "markdown": "报告具有多个循环语句的函数。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionWithMultipleLoopsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/函数指标",
                      "index": 37,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LabeledStatementJS",
                "shortDescription": {
                  "text": "标记语句"
                },
                "fullDescription": {
                  "text": "报告标签语句。",
                  "markdown": "报告标签语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LabeledStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NpmUsedModulesInstalled",
                "shortDescription": {
                  "text": "缺少模块依赖关系"
                },
                "fullDescription": {
                  "text": "报告未安装或未在 package.json 依赖项中列出的 'require()' 调用或 'import' 语句中的模块。 建议安装此模块和/或将其包含到 package.json 中。 对于 'require()' 调用，仅在Node.js Core JavaScript 库范围内的文件中起作用。",
                  "markdown": "报告未安装或未在 package.json 依赖项中列出的 `require()` 调用或 `import` 语句中的模块。\n\n建议安装此模块和/或将其包含到 package.json 中。\n\n对于 `require()` 调用，仅在*Node.js Core* JavaScript 库范围内的文件中起作用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "NpmUsedModulesInstalled",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Import 和依赖项",
                      "index": 51,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedCatchParameterJS",
                "shortDescription": {
                  "text": "未使用的 'catch' 形参"
                },
                "fullDescription": {
                  "text": "报告未在相应的块中使用的 'catch' 形参。 将忽略名称为 'ignore' 或 'ignored' 的 'catch' 形参。 使用下面的复选框对包含注释的 'catch' 块禁用此检查。",
                  "markdown": "报告未在相应的块中使用的 `catch` 形参。 将忽略名称为 `ignore` 或 `ignored` 的 `catch` 形参。\n\n\n使用下面的复选框对包含注释的\n`catch` 块禁用此检查。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedCatchParameterJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Try 语句问题",
                      "index": 36,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WithStatementJS",
                "shortDescription": {
                  "text": "'with' 语句"
                },
                "fullDescription": {
                  "text": "报告 'with' 语句。 此类语句会导致可能令人困惑的隐式绑定，并且在设置新变量时可能会表现出奇怪的行为。",
                  "markdown": "报告 `with` 语句。 此类语句会导致可能令人困惑的隐式绑定，并且在设置新变量时可能会表现出奇怪的行为。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WithStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptCheckImport",
                "shortDescription": {
                  "text": "未解析的已导入名称"
                },
                "fullDescription": {
                  "text": "报告 TypeScript 代码的 'import' 声明中未解析的名称或绑定。",
                  "markdown": "报告 TypeScript 代码的 `import` 声明中未解析的名称或绑定。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptCheckImport",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSConstantReassignment",
                "shortDescription": {
                  "text": "尝试分配给常量或只读变量"
                },
                "fullDescription": {
                  "text": "报告将值重新赋给常量或只读变量的情况。",
                  "markdown": "报告将值重新赋给常量或只读变量的情况。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSConstantReassignment",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/有效性问题",
                      "index": 29,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MagicNumberJS",
                "shortDescription": {
                  "text": "幻数"
                },
                "fullDescription": {
                  "text": "报告使用数值文字但未通过常量声明来命名的“幻数”。 幻数可能导致生成意图不明确的代码，如果一个代码位置中的幻数被更改，但在另一个代码位置未被更改，则可能导致错误。 数字 0、1、2、3、4、5、6、7、8、9、10、100、1000、 0.0 和 1.0 将被忽略。",
                  "markdown": "报告使用数值文字但未通过常量声明来命名的\"幻数\"。 幻数可能导致生成意图不明确的代码，如果一个代码位置中的幻数被更改，但在另一个代码位置未被更改，则可能导致错误。 数字 0、1、2、3、4、5、6、7、8、9、10、100、1000、 0.0 和 1.0 将被忽略。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MagicNumberJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionNamingConventionJS",
                "shortDescription": {
                  "text": "函数命名约定"
                },
                "fullDescription": {
                  "text": "报告名称太短、太长或不符合 指定正则表达式模式的函数。 使用下面提供的字段来指定函数名称的最小长度、 最大长度以及正则表达式。 对正则表达式使用标准的 'java.util.regex' 格式。",
                  "markdown": "报告名称太短、太长或不符合 指定正则表达式模式的函数。\n\n\n使用下面提供的字段来指定函数名称的最小长度、\n最大长度以及正则表达式。 对正则表达式使用标准的 `java.util.regex` 格式。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionNamingConventionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/命名约定",
                      "index": 55,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSXSyntaxUsed",
                "shortDescription": {
                  "text": "已使用 JSX 语法"
                },
                "fullDescription": {
                  "text": "报告 JavaScript 代码中 JSX 标记的用法。",
                  "markdown": "报告 JavaScript 代码中 JSX 标记的用法。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSXSyntaxUsed",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSJoinVariableDeclarationAndAssignment",
                "shortDescription": {
                  "text": "变量声明可与变量的第一个赋值合并"
                },
                "fullDescription": {
                  "text": "报告在没有初始值设定项的情况下声明并且在代码或单个嵌套范围中使用多得多的变量。 建议将此变量移到更靠近其用法的位置，并将其与初始值设定项表达式联接起来。",
                  "markdown": "报告在没有初始值设定项的情况下声明并且在代码或单个嵌套范围中使用多得多的变量。 建议将此变量移到更靠近其用法的位置，并将其与初始值设定项表达式联接起来。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSJoinVariableDeclarationAndAssignment",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSRedundantSwitchStatement",
                "shortDescription": {
                  "text": "'switch' 语句冗余，可以替换"
                },
                "fullDescription": {
                  "text": "报告语句体为空或仅有一个 'case' 分支或仅有一个 'default' 分支的 'switch' 语句。",
                  "markdown": "报告语句体为空或仅有一个 `case` 分支或仅有一个 `default` 分支的 `switch` 语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSRedundantSwitchStatement",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptLibrary",
                "shortDescription": {
                  "text": "缺少全局库"
                },
                "fullDescription": {
                  "text": "报告符号必须具备但未在 'tsconfig.json' 中的 'lib' 编译器选项下列出的 TypeScript 库文件。",
                  "markdown": "报告符号必须具备但未在 `tsconfig.json` 中的 `lib` 编译器选项下列出的 TypeScript 库文件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptLibrary",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptMissingAugmentationImport",
                "shortDescription": {
                  "text": "缺少扩大导入"
                },
                "fullDescription": {
                  "text": "报告没有显式 import 的 增强模块的用法。",
                  "markdown": "报告没有显式 import 的 [增强模块](https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation)的用法。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptMissingAugmentationImport",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnusedGlobalSymbols",
                "shortDescription": {
                  "text": "未使用的全局符号"
                },
                "fullDescription": {
                  "text": "报告未使用的可以全局访问的 public 函数、变量、类或属性。",
                  "markdown": "报告未使用的可以全局访问的 public 函数、变量、类或属性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnusedGlobalSymbols",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/未使用的符号",
                      "index": 21,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertModuleExportToExport",
                "shortDescription": {
                  "text": "使用了 'module.exports' 而不是 'export'"
                },
                "fullDescription": {
                  "text": "报告 'module.export' 语句。 建议将其替换为 'export' 或 'export default' 语句。 请注意，用于将 'module.export' 转换为 'export' 的快速修复不适用于函数或语句内部的 'module.export'，因为 'export' 语句只能位于模块顶层。",
                  "markdown": "报告 `module.export` 语句。 建议将其替换为 `export` 或 `export default` 语句。   \n\n请注意，用于将 `module.export` 转换为 `export` 的快速修复不适用于函数或语句内部的 `module.export`，因为 `export` 语句只能位于模块顶层。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertModuleExportToExport",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/ES2015 迁移协助",
                      "index": 24,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DocumentWriteJS",
                "shortDescription": {
                  "text": "调用 'document.write()'"
                },
                "fullDescription": {
                  "text": "报告对 'document.write()' 或 'document.writeln()' 的方法调用。 在采用显式 DOM 调用（例如 'getElementByID()' 和 'createElement()'）时, 此类调用的大多数用法执行效果更好。 此外，'write()' 和 'writeln()' 调用不适用于 XML DOM，包括用于 XHTML 的 DOM（如果以 XML 格式查看）。 这会导致难以指出错误。",
                  "markdown": "报告对 `document.write()` 或 `document.writeln()` 的方法调用。 在采用显式 DOM 调用（例如 `getElementByID()` 和 `createElement()`）时, 此类调用的大多数用法执行效果更好。 此外，`write()` 和 `writeln()` 调用不适用于 XML DOM，包括用于 XHTML 的 DOM（如果以 XML 格式查看）。 这会导致难以指出错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DocumentWriteJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/DOM 问题",
                      "index": 57,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BlockStatementJS",
                "shortDescription": {
                  "text": "不必要的块语句"
                },
                "fullDescription": {
                  "text": "报告不用作 'if' 、'for' 、'while' 、'do' 、 'with' 或 'try' 语句体，也不用作函数声明体的块语句。 从 ECMAScript 6 开始，JavaScript 块为 'let' 和 'const' 变量引入了新的范围， 但独立的块语句在与 'var' 变量一起使用时仍然会引起混淆，并导致难以捉摸的错误。",
                  "markdown": "报告不用作 `if` 、`for` 、`while` 、`do` 、 `with` 或 `try` 语句体，也不用作函数声明体的块语句。 从 ECMAScript 6 开始，JavaScript 块为 `let` 和 `const` 变量引入了新的范围， 但独立的块语句在与 `var` 变量一起使用时仍然会引起混淆，并导致难以捉摸的错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BlockStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnonymousFunctionJS",
                "shortDescription": {
                  "text": "匿名函数"
                },
                "fullDescription": {
                  "text": "报告匿名函数。 函数表达式的显式名称可能有助于调试。 如果 ECMAScript 6 标准中指定了 'name' 属性，则忽略没有名称的函数表达式。 例如，不会报告 'var bar = function() {};'。",
                  "markdown": "报告匿名函数。 函数表达式的显式名称可能有助于调试。 如果 ECMAScript 6 标准中指定了 `name` 属性，则忽略没有名称的函数表达式。 例如，不会报告 `var bar = function() {};`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AnonymousFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectAllocationIgnoredJS",
                "shortDescription": {
                  "text": "对象分配的结果已忽略"
                },
                "fullDescription": {
                  "text": "报告所分配对象的结果被忽略的对象分配，例如 'new Error();' 作为不带任何赋值的语句。 此类分配表达式可以指示奇怪的对象初始化策略。",
                  "markdown": "报告所分配对象的结果被忽略的对象分配，例如 `new Error();` 作为不带任何赋值的语句。 此类分配表达式可以指示奇怪的对象初始化策略。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ObjectAllocationIgnored",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InfiniteRecursionJS",
                "shortDescription": {
                  "text": "无限递归"
                },
                "fullDescription": {
                  "text": "报告肯定会无限递归或 抛出异常的函数。 此类函数可能无法正常返回。",
                  "markdown": "报告肯定会无限递归或 抛出异常的函数。 此类函数可能无法正常返回。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InfiniteRecursionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSTypeOfValues",
                "shortDescription": {
                  "text": "包含非标准值的 'typeof' 比较"
                },
                "fullDescription": {
                  "text": "报告 'typeof' 表达式与不是以下标准类型之一的文字字符串的比较：'undefined'、'object'、'boolean'、'number'、'string'、'function' 或 'symbol'。 此类比较始终返回 'false'。",
                  "markdown": "报告 `typeof` 表达式与不是以下标准类型之一的文字字符串的比较：`undefined`、`object`、`boolean`、`number`、`string`、`function` 或 `symbol`。 此类比较始终返回 `false`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSTypeOfValues",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedConditionalExpressionJS",
                "shortDescription": {
                  "text": "嵌套条件表达式"
                },
                "fullDescription": {
                  "text": "报告另一个三元条件中的三元条件表达式。 此类嵌套条件可能极其令人困惑，最好替换为更显式的条件逻辑。",
                  "markdown": "报告另一个三元条件中的三元条件表达式。 此类嵌套条件可能极其令人困惑，最好替换为更显式的条件逻辑。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncompatibleMaskJS",
                "shortDescription": {
                  "text": "不兼容的按位掩码运算"
                },
                "fullDescription": {
                  "text": "报告确定评估为 'true' 或 'false' 的按位掩码表达式。 表达式的形式为 '(var & constant1) == constant2' 或 '(var | constant1) == constant2'，其中 'constant1' 和 'constant2' 是不兼容的位掩码常量。 示例： '// 不兼容的掩码：由于掩码中的最后一个字节为零，\n// 0x1200 是可能的，但 0x1234 不可能\nif ((mask & 0xFF00) == 0x1234) {...}'",
                  "markdown": "报告确定评估为 `true` 或 `false` 的按位掩码表达式。 表达式的形式为 `(var & constant1) == constant2` 或 `(var | constant1) == constant2`，其中 `constant1` 和 `constant2` 是不兼容的位掩码常量。\n\n示例：\n\n\n    // 不兼容的掩码：由于掩码中的最后一个字节为零，\n    // 0x1200 是可能的，但 0x1234 不可能\n    if ((mask & 0xFF00) == 0x1234) {...}\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IncompatibleBitwiseMaskOperation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/按位运算问题",
                      "index": 23,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6PossiblyAsyncFunction",
                "shortDescription": {
                  "text": "非异步函数中的 'await'"
                },
                "fullDescription": {
                  "text": "报告可能想要异步但其实缺少 'async' 修饰符的函数中的 'await' 用法。 虽然 'await' 可以用作标识符，但很可能是打算将其用作运算符， 因此应将包含函数设为 'async' 。",
                  "markdown": "报告可能想要异步但其实缺少 `async` 修饰符的函数中的 `await` 用法。 虽然 `await` 可以用作标识符，但很可能是打算将其用作运算符， 因此应将包含函数设为 `async` 。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6PossiblyAsyncFunction",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Async 代码和 promise",
                      "index": 58,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TextLabelInSwitchStatementJS",
                "shortDescription": {
                  "text": "'switch' 语句中的文本标签"
                },
                "fullDescription": {
                  "text": "报告 'switch' 语句内部的标签语句， 这通常是由于拼写错误所致。 示例： 'switch(x)\n    {\n        case 1:\n        case2:   //拼写错误！\n        case 3:\n            break;\n    }'",
                  "markdown": "报告 `switch` 语句内部的标签语句， 这通常是由于拼写错误所致。\n\n示例：\n\n\n        switch(x)\n        {\n            case 1:\n            case2:   //拼写错误！\n            case 3:\n                break;\n        }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TextLabelInSwitchStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyCatchBlockJS",
                "shortDescription": {
                  "text": "空 'catch' 块"
                },
                "fullDescription": {
                  "text": "报告空的 'catch' 块。 这表明错误未加处理就被直接忽略。 'catch' 块中的任何注释都会禁止该检查。",
                  "markdown": "报告空的 `catch` 块。 这表明错误未加处理就被直接忽略。   \n\n`catch` 块中的任何注释都会禁止该检查。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyCatchBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Try 语句问题",
                      "index": 36,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSHint",
                "shortDescription": {
                  "text": "JSHint"
                },
                "fullDescription": {
                  "text": "报告 JSHint linter 检测到的问题。",
                  "markdown": "报告 [JSHint](https://jshint.com/) linter 检测到的问题。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSHint",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码质量工具",
                      "index": 60,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FlowJSFlagCommentPlacement",
                "shortDescription": {
                  "text": "位置错误的 @flow 标记"
                },
                "fullDescription": {
                  "text": "报告不位于文件顶部的 '@flow' 标志注释。",
                  "markdown": "报告不位于文件顶部的 `@flow` 标志注释。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FlowJSFlagCommentPlacement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Flow 类型检查器",
                      "index": 16,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Eslint",
                "shortDescription": {
                  "text": "ESLint"
                },
                "fullDescription": {
                  "text": "报告 ESLint linter 检测到的差异。 高亮显示基于 ESLint 配置文件中为每条规则指定的规则严重性。 清除“使用配置文件中的规则严重性”复选框，对所有 ESLint 规则使用该项检查中配置的严重性。",
                  "markdown": "报告 [ESLint](https://eslint.org) linter 检测到的差异。   \n\n高亮显示基于 [ESLint 配置文件](https://eslint.org/docs/user-guide/configuring)中为每条规则指定的规则严重性。   \n\n清除\"使用配置文件中的规则严重性\"复选框，对所有 ESLint 规则使用该项检查中配置的严重性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Eslint",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码质量工具",
                      "index": 60,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSDuplicatedDeclaration",
                "shortDescription": {
                  "text": "重复声明"
                },
                "fullDescription": {
                  "text": "报告一个范围中的多个声明。",
                  "markdown": "报告一个范围中的多个声明。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSDuplicatedDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSEqualityComparisonWithCoercion.TS",
                "shortDescription": {
                  "text": "相等运算符可能导致类型强制"
                },
                "fullDescription": {
                  "text": "报告可能导致意外类型强制的相等运算符的用法。 建议将 '==' 或 '!=' 相等运算符替换为类型安全的 '===' 或 '!==' 运算符。 根据所选的选项，将报告下面的一种情况： '==' 和 '!=' 运算符的所有用法。 除了与 null 比较之外的所有用法。 某些代码样式允许使用 'x == null' 替代 'x === null || x === undefined'。 仅可疑的表达式，例如：'==' 或 '!=' 与 '0'、''''、 'null'、'true'、 'false' 或 'undefined' 比较。",
                  "markdown": "报告可能导致意外类型强制的相等运算符的用法。 建议将 `==` 或 `!=` 相等运算符替换为类型安全的 `===` 或 `!==` 运算符。\n\n根据所选的选项，将报告下面的一种情况：\n\n* `==` 和 `!=` 运算符的所有用法。\n* 除了与 null 比较之外的所有用法。 某些代码样式允许使用 `x == null` 替代 `x === null || x === undefined`。\n* 仅可疑的表达式，例如：`==` 或 `!=` 与 `0`、`''`、 `null`、`true`、 `false` 或 `undefined` 比较。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualityComparisonWithCoercionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSOctalInteger",
                "shortDescription": {
                  "text": "八进制整数"
                },
                "fullDescription": {
                  "text": "报告已弃用的前缀为 '0' 而不是 '0o' 的八进制整数文字。 现代 ECMAScript 代码中不允许使用此类文字，在 strict 模式下使用它们会导致错误。 要针对 ES5 和 ES3 语言级别强制执行此检查，请选中下面的“对 ES5 代码中过时的八进制文字发出警告”复选框。",
                  "markdown": "报告已弃用的前缀为 `0` 而不是 `0o` 的八进制整数文字。  \n现代 ECMAScript 代码中不允许使用此类文字，在 strict 模式下使用它们会导致错误。  \n要针对 ES5 和 ES3 语言级别强制执行此检查，请选中下面的\"对 ES5 代码中过时的八进制文字发出警告\"复选框。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSOctalInteger",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/有效性问题",
                      "index": 29,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExceptionCaughtLocallyJS",
                "shortDescription": {
                  "text": "将异常用于本地控制流"
                },
                "fullDescription": {
                  "text": "报告异常始终可以通过包含 'try' 语句捕获的 'throw' 语句。 使用 'throw' 语句作为 'goto' 来更改局部控制流令人困惑。",
                  "markdown": "报告异常始终可以通过包含 `try` 语句捕获的 `throw` 语句。 使用 `throw` 语句作为 `goto` 来更改局部控制流令人困惑。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExceptionCaughtLocallyJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Try 语句问题",
                      "index": 36,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrowFromFinallyBlockJS",
                "shortDescription": {
                  "text": "'throw' 位于 'finally' 块内"
                },
                "fullDescription": {
                  "text": "报告 'finally' 块中的 'throw' 语句。 此类 'throw' 语句可能会掩盖抛出的异常，并导致调试复杂化。",
                  "markdown": "报告 `finally` 块中的 `throw` 语句。 此类 `throw` 语句可能会掩盖抛出的异常，并导致调试复杂化。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowInsideFinallyBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Try 语句问题",
                      "index": 36,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptValidateGenericTypes",
                "shortDescription": {
                  "text": "不正确的泛型实参"
                },
                "fullDescription": {
                  "text": "报告函数、接口或类声明中的无效类型实参。",
                  "markdown": "报告函数、接口或类声明中的无效类型实参。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptValidateGenericTypes",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CyclomaticComplexityJS",
                "shortDescription": {
                  "text": "函数过于复杂"
                },
                "fullDescription": {
                  "text": "报告函数中分支点太多的函数（循环复杂度太高）。 此类函数可能令人困惑，也难以测试。 使用下面提供的字段可指定函数的最大可接受循环复杂度。",
                  "markdown": "报告函数中分支点太多的函数（循环复杂度太高）。 此类函数可能令人困惑，也难以测试。\n\n\n使用下面提供的字段可指定函数的最大可接受循环复杂度。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/函数指标",
                      "index": 37,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSMismatchedCollectionQueryUpdate",
                "shortDescription": {
                  "text": "不匹配的集合查询和更新"
                },
                "fullDescription": {
                  "text": "报告查询了其内容但未更新或更新了其内容但未查询 的字段或变量的集合。 这种不匹配的查询和更新毫无意义， 并且可能表明有死码或排版错误。 根据查询方法是否返回某些内容或向其传递回调，来自动检测查询方法。 使用下表指定哪些方法是更新方法。",
                  "markdown": "报告查询了其内容但未更新或更新了其内容但未查询 的字段或变量的集合。 这种不匹配的查询和更新毫无意义， 并且可能表明有死码或排版错误。\n\n\n根据查询方法是否返回某些内容或向其传递回调，来自动检测查询方法。\n使用下表指定哪些方法是更新方法。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSMismatchedCollectionQueryUpdate",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageJsonMismatchedDependency",
                "shortDescription": {
                  "text": "package.json 中的依赖关系不匹配"
                },
                "fullDescription": {
                  "text": "报告未安装或与指定的版本范围不匹配的 package.json 中的依赖项。",
                  "markdown": "报告未安装或与指定的[版本范围](https://docs.npmjs.com/about-semantic-versioning)不匹配的 package.json 中的依赖项。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageJsonMismatchedDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Import 和依赖项",
                      "index": 51,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSPotentiallyInvalidUsageOfThis",
                "shortDescription": {
                  "text": "从闭包对 'this' 的引用可能无效"
                },
                "fullDescription": {
                  "text": "报告闭包中的用于引用外部上下文属性的 'this'。 示例： 'function Outer() {\n  this.outerProp = 1;\n  function inner() {\n    // 不良，因为 Outer 的 'outerProp' \n    // 不会如预期的那样\n    // 在调用 'new Outer()' 时在此处进行更新\n    this.outerProp = 2;\n  }\n  inner();\n}'",
                  "markdown": "报告闭包中的用于引用外部上下文属性的 `this`。\n\n示例：\n\n\n    function Outer() {\n      this.outerProp = 1;\n      function inner() {\n        // 不良，因为 Outer 的 'outerProp' \n        // 不会如预期的那样\n        // 在调用 'new Outer()' 时在此处进行更新\n        this.outerProp = 2;\n      }\n      inner();\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSPotentiallyInvalidUsageOfThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSMissingSwitchDefault",
                "shortDescription": {
                  "text": "'switch' 语句没有 'default' 分支"
                },
                "fullDescription": {
                  "text": "报告在未枚举某些可能值的情况下不含 'default' 子句的 'switch' 语句。",
                  "markdown": "报告在未枚举某些可能值的情况下不含 `default` 子句的 `switch` 语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSMissingSwitchDefault",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSXNamespaceValidation",
                "shortDescription": {
                  "text": "缺少 JSX 命名空间"
                },
                "fullDescription": {
                  "text": "报告未导入命名空间的 JSX 构造的用法。 将命名空间置于文件范围中可以确保正确编译代码。",
                  "markdown": "报告未导入命名空间的 JSX 构造的用法。 将命名空间置于文件范围中可以确保正确编译代码。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSXNamespaceValidation",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Import 和依赖项",
                      "index": 51,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnresolvedLibraryURL",
                "shortDescription": {
                  "text": "HTTP 链接缺少本地存储的库"
                },
                "fullDescription": {
                  "text": "报告未与任何本地存储文件关联的外部 JavaScript 库的 URL。 建议下载此库。 此类关联使 IDE 可以提供正确的代码补全和导航。",
                  "markdown": "报告未与任何本地存储文件关联的外部 JavaScript 库的 URL。 建议下载此库。 此类关联使 IDE 可以提供正确的代码补全和导航。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnresolvedLibraryURL",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6PreferShortImport",
                "shortDescription": {
                  "text": "可以缩短导入"
                },
                "fullDescription": {
                  "text": "报告可缩短其 'from' 部分的 ES6 import。 建议导入父目录。",
                  "markdown": "报告可缩短其 `from` 部分的 ES6 import。 建议导入父目录。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ES6PreferShortImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessBitwiseExpressionJS",
                "shortDescription": {
                  "text": "可以简化按位表达式"
                },
                "fullDescription": {
                  "text": "报告包含 'and' 零、 'or' 零或零移位的表达式。 此类表达式可能是由于没有完全完成自动化重构而造成。",
                  "markdown": "报告包含 `and` 零、 ` or` 零或零移位的表达式。 此类表达式可能是由于没有完全完成自动化重构而造成。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessBitwiseExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/按位运算问题",
                      "index": 23,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InfiniteLoopJS",
                "shortDescription": {
                  "text": "无限循环语句"
                },
                "fullDescription": {
                  "text": "报告只能通过抛出异常来退出的 'for' 、 'while' 或 'do' 语句。 此类语句通常表示编码错误。",
                  "markdown": "报告只能通过抛出异常来退出的 `for` 、 `while` 或 `do` 语句。 此类语句通常表示编码错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InfiniteLoopJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSStringConcatenationToES6Template",
                "shortDescription": {
                  "text": "已使用字符串串联而不是模板文字"
                },
                "fullDescription": {
                  "text": "报告字符串串联。 建议将其替换为模板文字。 示例 '\"result: \" + a + \".\"' 应用快速修复后，代码如下所示： '`result: ${a}.`'",
                  "markdown": "报告字符串串联。 建议将其替换为[模板文字](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals)。\n\n示例\n\n     \"result: \" + a + \".\" \n\n应用快速修复后，代码如下所示：\n\n     `result: ${a}.` \n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSStringConcatenationToES6Template",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/ES2015 迁移协助",
                      "index": 24,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSArrowFunctionBracesCanBeRemoved",
                "shortDescription": {
                  "text": "箭头函数体周围的大括号冗余"
                },
                "fullDescription": {
                  "text": "报告其函数体仅由大括号和恰好一条语句组成的箭头函数。 建议转换为不带大括号的简洁语法。 'let incrementer = (x) => {return x + 1};' 应用快速修复后，代码段如下所示： 'let incrementer = (x) => x + 1;'",
                  "markdown": "报告其函数体仅由大括号和恰好一条语句组成的箭头函数。 建议转换为不带大括号的简洁语法。\n\n\n        let incrementer = (x) => {return x + 1};\n\n应用快速修复后，代码段如下所示：\n\n\n        let incrementer = (x) => x + 1;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSArrowFunctionBracesCanBeRemoved",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceAssignmentWithOperatorAssignmentJS",
                "shortDescription": {
                  "text": "赋值可被替换为运算符赋值"
                },
                "fullDescription": {
                  "text": "报告可由运算符赋值替换的赋值运算，以使代码更简洁、更清晰。 示例： 'x = x + 3;'\n  'x = x / 3;'\n 应用快速修复后，结果如下所示：   'x += 3;'\n  'x /= 3;'",
                  "markdown": "报告可由运算符赋值替换的赋值运算，以使代码更简洁、更清晰。\n\n\n示例：\n\n      x = x + 3;\n      x = x / 3;\n\n应用快速修复后，结果如下所示：\n\n      x += 3;\n      x /= 3;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentReplaceableWithOperatorAssignmentJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/赋值问题",
                      "index": 42,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSFileReferences",
                "shortDescription": {
                  "text": "未解析的文件引用"
                },
                "fullDescription": {
                  "text": "报告 JavaScript 文件中未解析的文件引用，包括 CommonJS 和 AMD 模块引用。",
                  "markdown": "报告 JavaScript 文件中未解析的文件引用，包括 CommonJS 和 AMD 模块引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSFileReferences",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionWithInconsistentReturnsJS",
                "shortDescription": {
                  "text": "函数的返回不一致"
                },
                "fullDescription": {
                  "text": "报告在某些情况下返回值但在其他情况下不返回值的函数。 这通常表明有错误。 示例： 'function foo() {\n  if (true)\n    return 3;\n  return;\n}'",
                  "markdown": "报告在某些情况下返回值但在其他情况下不返回值的函数。 这通常表明有错误。\n\n示例：\n\n\n    function foo() {\n      if (true)\n        return 3;\n      return;\n    }\n\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionWithInconsistentReturnsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/有效性问题",
                      "index": 29,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ClassMemberInitializationOrder",
                "shortDescription": {
                  "text": "在 static 初始值设定项中使用可能未分配的属性"
                },
                "fullDescription": {
                  "text": "报告引用另一个未提升的类成员，而被引用的这个类成员可能尚未初始化的类成员初始值设定项。 由于针对字段进行类成员初始化，所以一个字段不能引用后面声明的另一个字段。",
                  "markdown": "报告引用另一个未提升的类成员，而被引用的这个类成员可能尚未初始化的类成员初始值设定项。   \n\n由于针对字段进行类成员初始化，所以一个字段不能引用后面声明的另一个字段。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ES6ClassMemberInitializationOrder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyTryBlockJS",
                "shortDescription": {
                  "text": "空 'try' 块"
                },
                "fullDescription": {
                  "text": "报告空的 'try' 块，此类块通常表示有错误。",
                  "markdown": "报告空的 `try` 块，此类块通常表示有错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyTryBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Try 语句问题",
                      "index": 36,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReservedWordUsedAsNameJS",
                "shortDescription": {
                  "text": "保留词用作名称"
                },
                "fullDescription": {
                  "text": "报告用作名称的 JavaScript 保留字。 JavaScript 规范 保留了许多当前未用作关键字的词语。 如果后续版本的 JavaScript 开始使用这些词语作为关键字， 使用这些词语作为标识符可能会破坏代码。",
                  "markdown": "报告用作名称的 JavaScript 保留字。 JavaScript 规范 保留了许多当前未用作关键字的词语。 如果后续版本的 JavaScript 开始使用这些词语作为关键字， 使用这些词语作为标识符可能会破坏代码。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReservedWordAsName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/有效性问题",
                      "index": 29,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSClassNamingConvention",
                "shortDescription": {
                  "text": "类命名约定"
                },
                "fullDescription": {
                  "text": "报告用 JSDoc '@constructor' 或 '@class' 标记进行注解， 并且其名称太短、太长或不符合指定正则表达式模式的类或函数。 使用下面提供的字段来指定类名称的最小长度、 最大长度以及预期的正则表达式。 对正则表达式使用标准的 'java.util.regex' 格式。",
                  "markdown": "报告用 JSDoc `@constructor` 或 `@class` 标记进行注解， 并且其名称太短、太长或不符合指定正则表达式模式的类或函数。\n\n\n使用下面提供的字段来指定类名称的最小长度、\n最大长度以及预期的正则表达式。 对正则表达式使用标准的 `java.util.regex` 格式。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSClassNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/命名约定",
                      "index": 55,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedFunctionJS",
                "shortDescription": {
                  "text": "嵌套函数"
                },
                "fullDescription": {
                  "text": "报告嵌套在另一个函数中的函数。 尽管 JavaScript 允许嵌套函数，但此类结构可能令人困惑。 使用下面的复选框以忽略匿名嵌套函数。",
                  "markdown": "报告嵌套在另一个函数中的函数。 尽管 JavaScript 允许嵌套函数，但此类结构可能令人困惑。\n\n\n使用下面的复选框以忽略匿名嵌套函数。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XHTMLIncompatabilitiesJS",
                "shortDescription": {
                  "text": "不兼容的 XHTML 用法"
                },
                "fullDescription": {
                  "text": "报告可能会导致 XHTML 文档出现问题的 常见 JavaScript DOM 模式。 特别是，根据文档是作为 XML 还是 HTML 加载， 所检测到的模式的行为将完全不同。 这可能导致难以捉摸的错误，即脚本行为依赖于文档的 MIME 类型而不是依赖于其内容。 检测到的模式包括 document.body、 document.images、 document.applets、 document.links、 document.forms 和 document.anchors。",
                  "markdown": "报告可能会导致 XHTML 文档出现问题的 常见 JavaScript DOM 模式。 特别是，根据文档是作为 XML 还是 HTML 加载， 所检测到的模式的行为将完全不同。 这可能导致难以捉摸的错误，即脚本行为依赖于文档的 MIME 类型而不是依赖于其内容。 检测到的模式包括 **document.body** 、 **document.images** 、 **document.applets** 、 **document.links** 、 **document.forms** 和 **document.anchors**。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XHTMLIncompatabilitiesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/DOM 问题",
                      "index": 57,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncrementDecrementResultUsedJS",
                "shortDescription": {
                  "text": "使用增量或减量的结果"
                },
                "fullDescription": {
                  "text": "报告赋值结果在包含其的表达式中 使用的递增 ('++') 或递减 ('--') 表达式。 此类赋值可能会由于运算顺序而导致困惑，因为赋值的评估可能会以意想不到的方式影响外部表达式。 示例：'var a = b++'",
                  "markdown": "报告赋值结果在包含其的表达式中 使用的递增 (`++`) 或递减 (`--`) 表达式。 此类赋值可能会由于运算顺序而导致困惑，因为赋值的评估可能会以意想不到的方式影响外部表达式。 示例：`var a = b++`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IncrementDecrementResultUsedJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousTypeOfGuard",
                "shortDescription": {
                  "text": "类型防护检查不健全"
                },
                "fullDescription": {
                  "text": "报告 'typeof' 或 'instanceof' 不健全的类型防护检查。 在以下两种情况下，'typeof x' 类型防护可能不健全： 'typeof x' 不对应于指定的值（例如，当 'x' 为 'string | boolean' 类型时，'typeof x === 'number''） 'typeof x' 始终对应于指定的值（例如，当 'x' 为 'string' 类型时，'typeof x === 'string''） 在以下两种情况下，'x instanceof A' 类型防护可能不健全： 'x' 的类型与 'A' 不相关 'x' 的类型是 'A' 或 'A' 的子类型",
                  "markdown": "报告 `typeof` 或 `instanceof` 不健全的类型防护检查。 在以下两种情况下，`typeof x` 类型防护可能不健全：\n\n* `typeof x` 不对应于指定的值（例如，当 `x` 为 'string \\| boolean' 类型时，`typeof x === 'number'`）\n* `typeof x` 始终对应于指定的值（例如，当 `x` 为 'string' 类型时，`typeof x === 'string'`）\n\n在以下两种情况下，`x instanceof A` 类型防护可能不健全：\n\n* `x` 的类型与 `A` 不相关\n* `x` 的类型是 `A` 或 `A` 的子类型"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousTypeOfGuard",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptJSXUnresolvedComponent",
                "shortDescription": {
                  "text": "未解析的 JSX 组件"
                },
                "fullDescription": {
                  "text": "报告对 JSX 组件的未解析引用。 如果引用的组件在此项目或其依赖项中定义，则建议添加 import 语句，或使用指定名称创建新组件。 新组件的模板可以在“编辑器 | 文件和代码模板”中修改。",
                  "markdown": "报告对 JSX 组件的未解析引用。 如果引用的组件在此项目或其依赖项中定义，则建议添加 import 语句，或使用指定名称创建新组件。\n\n新组件的模板可以在\"编辑器 \\| 文件和代码模板\"中修改。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptJSXUnresolvedComponent",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptFieldCanBeMadeReadonly",
                "shortDescription": {
                  "text": "可以为只读字段"
                },
                "fullDescription": {
                  "text": "报告可设为 readonly 的 private 字段（例如，如果该字段仅在构造函数中赋值）。",
                  "markdown": "报告可设为 readonly 的 private 字段（例如，如果该字段仅在构造函数中赋值）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptFieldCanBeMadeReadonly",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6DestructuringVariablesMerge",
                "shortDescription": {
                  "text": "正在析构具有相同键的属性"
                },
                "fullDescription": {
                  "text": "报告多个包含相同键的解构属性。 建议合并这些属性。",
                  "markdown": "报告多个包含相同键的解构属性。 建议合并这些属性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6DestructuringVariablesMerge",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoopStatementThatDoesntLoopJS",
                "shortDescription": {
                  "text": "不循环的循环语句"
                },
                "fullDescription": {
                  "text": "报告语句体最多可以执行一次的 'for' 、 'while' 或 'do' 语句。 这通常表示有错误。",
                  "markdown": "报告语句体最多可以执行一次的 `for` 、 `while` 或 `do` 语句。 这通常表示有错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LoopStatementThatDoesntLoopJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegatedIfStatementJS",
                "shortDescription": {
                  "text": "否定的 'if' 语句"
                },
                "fullDescription": {
                  "text": "报告具有 else 分支和否定条件的 if 语句。 翻转 if 和 else 分支的顺序通常会改进此类语句的清晰度。",
                  "markdown": "报告具有 **else** 分支和否定条件的 **if** 语句。 翻转 **if** 和 **else** 分支的顺序通常会改进此类语句的清晰度。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NegatedIfStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSNonASCIINames",
                "shortDescription": {
                  "text": "包含非 ASCII 符号的标识符"
                },
                "fullDescription": {
                  "text": "报告名称中的非 ASCII 符号。 如果选择“仅允许 ASCII 名称”选项，则报告所有包含非 ASCII 符号的名称。 否则，报告所有同时包含 ASCII 和非 ASCII 符号的名称。",
                  "markdown": "报告名称中的非 ASCII 符号。  \n\n如果选择\"仅允许 ASCII 名称\"选项，则报告所有包含非 ASCII 符号的名称。  \n否则，报告所有同时包含 ASCII 和非 ASCII 符号的名称。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSNonASCIINames",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/命名约定",
                      "index": 55,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptRedundantGenericType",
                "shortDescription": {
                  "text": "冗余类型实参"
                },
                "fullDescription": {
                  "text": "报告其值等于默认值并且可以移除的类型实参。 示例： 'type Foo<T=number> = T;\nlet z: Foo<number>;'",
                  "markdown": "报告其值等于默认值并且可以移除的类型实参。\n\n\n示例：\n\n\n    type Foo<T=number> = T;\n    let z: Foo<number>;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptRedundantGenericType",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptUMDGlobal",
                "shortDescription": {
                  "text": "已引用的 UMD 全局变量"
                },
                "fullDescription": {
                  "text": "如果当前文件是模块（ECMAScript 或 CommonJS），则报告 Universal Module Definition (UMD) 全局变量的用法。 如果没有隐式包含此库，那么在没有显式 import 的情况下引用 UMD 变量可能会导致运行时错误。",
                  "markdown": "如果当前文件是模块（ECMAScript 或 CommonJS），则报告 Universal Module Definition (UMD) 全局变量的用法。 如果没有隐式包含此库，那么在没有显式 import 的情况下引用 UMD 变量可能会导致运行时错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptUMDGlobal",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryReturnJS",
                "shortDescription": {
                  "text": "不必要的 'return' 语句"
                },
                "fullDescription": {
                  "text": "报告不必要的 'return' 语句，即不返回值并且刚好在函数'贯穿'底部之前发生的 'return' 语句。 这些语句可以安全移除。",
                  "markdown": "报告不必要的 `return` 语句，即不返回值并且刚好在函数'贯穿'底部之前发生的 `return` 语句。 这些语句可以安全移除。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryReturnStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionalExpressionWithIdenticalBranchesJS",
                "shortDescription": {
                  "text": "具有相同分支的条件表达式"
                },
                "fullDescription": {
                  "text": "报告具有相同的 'then' 和 'else' 分支的三元条件表达式。",
                  "markdown": "报告具有相同的 `then` 和 `else` 分支的三元条件表达式。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConditionalExpressionWithIdenticalBranchesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSIncompatibleTypesComparison",
                "shortDescription": {
                  "text": "类型不兼容的表达式的比较"
                },
                "fullDescription": {
                  "text": "报告与不兼容类型的操作数或不含可能公共值的类型的操作数的比较。",
                  "markdown": "报告与不兼容类型的操作数或不含可能公共值的类型的操作数的比较。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSIncompatibleTypesComparison",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnfilteredForInLoop",
                "shortDescription": {
                  "text": "未过滤 for..in 循环"
                },
                "fullDescription": {
                  "text": "报告未筛选的 'for-in' 循环。 使用此结构不仅会处理对象自身的属性，还会处理对象原型的属性。 在某些特定情况下可能出人意料，例如，在复制或修改所有属性的实用程序方法中 或者 'Object' 的原型可能被错误修改时。 例如，以下代码将打印 42 和 myMethod： 'Object.prototype.myMethod = function myMethod() {};\nlet a = { foo: 42 };\nfor (let i in a) {\n  console.log(a[i]);\n}' 建议将整个循环替换为 'Object.keys()' 方法，或添加 'hasOwnProperty()' 检查。 应用快速修复后，代码如下所示： 'for (let i in a) {\n  if (a.hasOwnProperty(i)) {\n    console.log(a[i]);\n  }\n}'",
                  "markdown": "报告未筛选的 `for-in` 循环。   \n\n使用此结构不仅会处理对象自身的属性，还会处理对象原型的属性。 在某些特定情况下可能出人意料，例如，在复制或修改所有属性的实用程序方法中 或者 `Object` 的原型可能被错误修改时。 例如，以下代码将打印 **42** 和 **myMethod** ：   \n\n\n    Object.prototype.myMethod = function myMethod() {};\n    let a = { foo: 42 };\n    for (let i in a) {\n      console.log(a[i]);\n    }\n\n建议将整个循环替换为 `Object.keys()` 方法，或添加 `hasOwnProperty()` 检查。 应用快速修复后，代码如下所示：\n\n\n    for (let i in a) {\n      if (a.hasOwnProperty(i)) {\n        console.log(a[i]);\n      }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnfilteredForInLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSAnnotator",
                "shortDescription": {
                  "text": "未遵循 ECMAScript 规范"
                },
                "fullDescription": {
                  "text": "报告基本语法问题以及与语言规范不一致的情况，例如关键字的无效用法、不兼容的数字格式的用法或 getter/setter 的多个形参。 通常必须报告此类错误，并且不应禁用这些错误。 但在某些情况下，例如由于 JavaScript 的动态性质而导致问题、使用尚未支持的语言功能或 IDE 检查器中有错误时，禁止报告这些很基本的错误可能会很方便。",
                  "markdown": "报告基本语法问题以及与语言规范不一致的情况，例如关键字的无效用法、不兼容的数字格式的用法或 getter/setter 的多个形参。   \n通常必须报告此类错误，并且不应禁用这些错误。 但在某些情况下，例如由于 JavaScript 的动态性质而导致问题、使用尚未支持的语言功能或 IDE 检查器中有错误时，禁止报告这些很基本的错误可能会很方便。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JSAnnotator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSLastCommaInObjectLiteral",
                "shortDescription": {
                  "text": "对象文字中的最后一个逗号多余"
                },
                "fullDescription": {
                  "text": "报告对象文字中尾随逗号的用法。 只有将 JavaScript 语言版本设置为 ECMAScript 5.1 时才报告该警告。 此规范允许在对象文字中使用尾随逗号，但在使用尾随逗号时，某些浏览器可能会抛出错误。 您可以在代码样式 | JavaScript 或 TypeScript | 标点符号中配置尾随逗号的格式设置选项。",
                  "markdown": "报告对象文字中尾随逗号的用法。\n\n只有将 JavaScript 语言版本设置为 ECMAScript 5.1 时才报告该警告。\n\n此规范允许在对象文字中使用尾随逗号，但在使用尾随逗号时，某些浏览器可能会抛出错误。\n\n您可以在**代码样式** \\| **JavaScript** 或 **TypeScript** \\| **标点符号**中配置尾随逗号的格式设置选项。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSLastCommaInObjectLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSFunctionExpressionToArrowFunction",
                "shortDescription": {
                  "text": "使用了函数表达式而不是箭头函数"
                },
                "fullDescription": {
                  "text": "报告函数表达式。 建议将其转换为箭头函数。 示例： 'arr.map(function(el) {return el + 1})' 应用快速修复后，代码如下所示： 'arr.map(el => el + 1)'",
                  "markdown": "报告[函数](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function)表达式。 建议将其转换为[箭头函数](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)。\n\n示例：\n\n    arr.map(function(el) {return el + 1})\n\n应用快速修复后，代码如下所示：\n\n    arr.map(el => el + 1)\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSFunctionExpressionToArrowFunction",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/ES2015 迁移协助",
                      "index": 24,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6TopLevelAwaitExpression",
                "shortDescription": {
                  "text": "顶层 'await' 表达式"
                },
                "fullDescription": {
                  "text": "报告顶层 'await' 表达式的用法。 虽然有人在提出新的 'top-level async' 建议，但不允许在 async 函数之外使用 'await'。",
                  "markdown": "报告顶层 `await` 表达式的用法。 虽然有人在提出新的 'top-level async' 建议，但不允许在 async 函数之外使用 `await`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ES6TopLevelAwaitExpression",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Async 代码和 promise",
                      "index": 58,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6MissingAwait",
                "shortDescription": {
                  "text": "异步函数调用缺少 await"
                },
                "fullDescription": {
                  "text": "报告 'async' 函数中没有预期的 'await' 前缀的 'async' 函数调用。 此类调用返回 'Promise'，并且控制流会立即继续。 示例： 'async function bar() { /* ... */ }\nasync function foo() {\n    bar(); // 不良\n}' 应用快速修复后，将添加 'await' 前缀： 'async function bar() { /* ... */ }\nasync function foo() {\n    await bar(); // 优良\n}' 在选中“报告 return 语句中的 promise”复选框的情况下，还建议在 return 语句中添加 'await'。 虽然一般不必这样做，但它有两大好处。 使用 'try-catch' 环绕代码时，您不会忘记去添加 'await'。 显式的 'await' 有助于 V8 运行时提供异步堆栈跟踪。",
                  "markdown": "报告 `async` 函数中没有预期的 `await` 前缀的 ` async` 函数调用。 此类调用返回 `Promise`，并且控制流会立即继续。\n\n示例：\n\n\n    async function bar() { /* ... */ }\n    async function foo() {\n        bar(); // 不良\n    }\n\n\n应用快速修复后，将添加 `await` 前缀：\n\n\n    async function bar() { /* ... */ }\n    async function foo() {\n        await bar(); // 优良\n    }\n\n在选中\"报告 return 语句中的 promise\"复选框的情况下，还建议在 return 语句中添加 `await`。  \n虽然一般不必这样做，但它有两大好处。  \n\n* 使用 `try-catch` 环绕代码时，您不会忘记去添加 `await`。\n* 显式的 `await` 有助于 V8 运行时提供[异步堆栈跟踪](https://bit.ly/v8-zero-cost-async-stack-traces)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6MissingAwait",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Async 代码和 promise",
                      "index": 58,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TailRecursionJS",
                "shortDescription": {
                  "text": "尾递归"
                },
                "fullDescription": {
                  "text": "报告尾递归，即报告函数在返回之前 调用自身作为最后操作的情况。 尾递归总是可以替换为循环，循环的速度快得多。 一些 JavaScript 引擎执行这种优化，而另一些则不执行。 因此，尾递归解决方案在不同环境下 可能具有截然不同的性能特点。",
                  "markdown": "报告尾递归，即报告函数在返回之前 调用自身作为最后操作的情况。 尾递归总是可以替换为循环，循环的速度快得多。 一些 JavaScript 引擎执行这种优化，而另一些则不执行。 因此，尾递归解决方案在不同环境下 可能具有截然不同的性能特点。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TailRecursionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6ConvertToForOf",
                "shortDescription": {
                  "text": "使用了 'for..in' 而不是 'for..of'"
                },
                "fullDescription": {
                  "text": "报告对数组的 'for..in' 循环的用法。 建议将其替换为 'for..of' 循环。 'for..of' 循环 (在 ECMAScript 6 中引入) 对 'iterable' 对象进行迭代。 对于数组，此结构比 'for..in' 更可取，因为它只处理数组值，不处理数组对象的属性。",
                  "markdown": "报告对数组的 [for..in](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in) 循环的用法。 建议将其替换为 [for..of](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of) 循环。   \n`for..of` 循环 (在 ECMAScript 6 中引入) 对 `iterable` 对象进行迭代。 对于数组，此结构比 `for..in` 更可取，因为它只处理数组值，不处理数组对象的属性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6ConvertToForOf",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/ES2015 迁移协助",
                      "index": 24,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FlowJSCoverage",
                "shortDescription": {
                  "text": "Flow 不涵盖代码"
                },
                "fullDescription": {
                  "text": "报告 Flow 类型检查器未覆盖的 JavaScript 代码段。 要使用此检查，请在设置 | 语言和框架 | JavaScript 中配置 Flow 可执行文件。",
                  "markdown": "报告 Flow 类型检查器未覆盖的 JavaScript 代码段。 要使用此检查，请在[设置 \\| 语言和框架 \\| JavaScript](settings://Settings.JavaScript) 中配置 Flow 可执行文件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FlowJSCoverage",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Flow 类型检查器",
                      "index": 16,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParameterNamingConventionJS",
                "shortDescription": {
                  "text": "函数形参命名约定"
                },
                "fullDescription": {
                  "text": "报告名称太短、太长或不符合 指定正则表达式模式的函数形参。 使用下面提供的字段来指定局部变量名称的最小长度、 最大长度以及预期的正则表达式。 使用标准 'java.util.regex' 格式的正则表达式。",
                  "markdown": "报告名称太短、太长或不符合 指定正则表达式模式的函数形参。\n\n\n使用下面提供的字段来指定局部变量名称的最小长度、\n最大长度以及预期的正则表达式。 使用标准 `java.util.regex` 格式的正则表达式。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ParameterNamingConventionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/命名约定",
                      "index": 55,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUndefinedPropertyAssignment",
                "shortDescription": {
                  "text": "未定义的属性赋值"
                },
                "fullDescription": {
                  "text": "报告对未在变量类型中定义的属性的赋值。 示例： '/**\n * @type {{ property1: string, property2: number }}\n */\nlet myVariable = create();\n\nmyVariable.newProperty = 3; // 不良'",
                  "markdown": "报告对未在变量类型中定义的属性的赋值。\n\n示例：\n\n\n    /**\n     * @type {{ property1: string, property2: number }}\n     */\n    let myVariable = create();\n\n    myVariable.newProperty = 3; // 不良\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSUndefinedPropertyAssignment",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StandardJS",
                "shortDescription": {
                  "text": "标准代码样式"
                },
                "fullDescription": {
                  "text": "报告 JavaScript Standard Style linter 检测到的差异。 编辑器中高亮显示的严重性基于 linter 报告的严重性级别。",
                  "markdown": "报告 [JavaScript Standard Style](https://standardjs.com/) linter 检测到的差异。   \n\n编辑器中高亮显示的严重性基于 linter 报告的严重性级别。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "StandardJS",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码质量工具",
                      "index": 60,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParametersPerFunctionJS",
                "shortDescription": {
                  "text": "函数的形参过多"
                },
                "fullDescription": {
                  "text": "报告形参过多的函数。 此类函数通常表明设计有问题。 使用下面的字段可指定函数的最大可接受形参数量。",
                  "markdown": "报告形参过多的函数。 此类函数通常表明设计有问题。\n\n\n使用下面的字段可指定函数的最大可接受形参数量。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/函数指标",
                      "index": 37,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThisExpressionReferencesGlobalObjectJS",
                "shortDescription": {
                  "text": "引用全局对象的 'this' 表达式"
                },
                "fullDescription": {
                  "text": "报告对象文字或构造函数体之外的 'this' 表达式。 此类 'this' 表达式引用顶级“全局”JavaScript 对象，但大多是无用的。",
                  "markdown": "报告对象文字或构造函数体之外的 ` this` 表达式。 此类 `this` 表达式引用顶级\"全局\"JavaScript 对象，但大多是无用的。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThisExpressionReferencesGlobalObjectJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/有效性问题",
                      "index": 29,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedAssignmentJS",
                "shortDescription": {
                  "text": "嵌套赋值"
                },
                "fullDescription": {
                  "text": "报告嵌套在另一个表达式中的赋值表达式，例如 'a=b=1'。 此类表达式可能令人困惑，并违反一般设计原则，即给定结构只应发挥一种作用。",
                  "markdown": "报告嵌套在另一个表达式中的赋值表达式，例如 `a=b=1`。 此类表达式可能令人困惑，并违反一般设计原则，即给定结构只应发挥一种作用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedAssignmentJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/赋值问题",
                      "index": 42,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DefaultNotLastCaseInSwitchJS",
                "shortDescription": {
                  "text": "'default' 不是 'switch' 中的最后一个 case"
                },
                "fullDescription": {
                  "text": "报告其中的 'default' case 位于另一个 case 之前， 而不是作为最后一个 case，因而可能造成混淆的 'switch' 语句。",
                  "markdown": "报告其中的 `default` case 位于另一个 case 之前， 而不是作为最后一个 case，因而可能造成混淆的 `switch` 语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DefaultNotLastCaseInSwitchJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConfusingPlusesOrMinusesJS",
                "shortDescription": {
                  "text": "'+' 或 '-' 的序列会引起混淆"
                },
                "fullDescription": {
                  "text": "报告 JavaScript 代码中 '+' 或 '-' 字符的可疑组合 (例如 'a+++b') 。 此类序列令人困惑，并且它们的语义可能会因为空格的变化而变化。",
                  "markdown": "报告 JavaScript 代码中 `+` 或 `-` 字符的可疑组合 (例如 `a+++b`) 。 此类序列令人困惑，并且它们的语义可能会因为空格的变化而变化。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConfusingPlusesOrMinusesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSDeprecatedSymbols",
                "shortDescription": {
                  "text": "已使用弃用的符号"
                },
                "fullDescription": {
                  "text": "报告弃用的函数变量的用法。",
                  "markdown": "报告弃用的函数变量的用法。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSDeprecatedSymbols",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LocalVariableNamingConventionJS",
                "shortDescription": {
                  "text": "局部变量命名约定"
                },
                "fullDescription": {
                  "text": "报告名称太短、太长或不符合 指定正则表达式模式的局部变量。 使用下面提供的字段来指定局部变量名称的最小长度、 最大长度以及预期的正则表达式。 使用标准 'java.util.regex' 格式的正则表达式。",
                  "markdown": "报告名称太短、太长或不符合 指定正则表达式模式的局部变量。\n\n\n使用下面提供的字段来指定局部变量名称的最小长度、\n最大长度以及预期的正则表达式。 使用标准 `java.util.regex` 格式的正则表达式。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LocalVariableNamingConventionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/命名约定",
                      "index": 55,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyFinallyBlockJS",
                "shortDescription": {
                  "text": "空 'finally' 块"
                },
                "fullDescription": {
                  "text": "报告空的 'finally' 块，此类块通常表明有错误。",
                  "markdown": "报告空的 `finally` 块，此类块通常表明有错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyFinallyBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Try 语句问题",
                      "index": 36,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSCommentMatchesSignature",
                "shortDescription": {
                  "text": "不匹配的 JSDoc 和函数签名"
                },
                "fullDescription": {
                  "text": "报告 JSDoc 注释中形参的名称和数量与函数的实际形参之间不匹配的情况。 建议更新 JSDoc 注释中的形参。 示例： '/**\n * @param height Height in pixels\n */\nfunction sq(height, width) {} // 宽度未记录' 在应用快速修复后： '/**\n * @param height Height in pixels\n * @param width\n */\nfunction sq(height, width) {}'",
                  "markdown": "报告 JSDoc 注释中形参的名称和数量与函数的实际形参之间不匹配的情况。 建议更新 JSDoc 注释中的形参。\n\n**示例：**\n\n\n    /**\n     * @param height Height in pixels\n     */\n    function sq(height, width) {} // 宽度未记录\n\n在应用快速修复后：\n\n\n    /**\n     * @param height Height in pixels\n     * @param width\n     */\n    function sq(height, width) {}\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSCommentMatchesSignature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UpdateDependencyToLatestVersion",
                "shortDescription": {
                  "text": "将 package.json 依赖项更新为最新版本"
                },
                "fullDescription": {
                  "text": "建议将 package.json 依赖项升级到最新版本，并忽略指定的版本。",
                  "markdown": "建议将 package.json 依赖项升级到最新版本，并忽略指定的版本。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UpdateDependencyToLatestVersion",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Import 和依赖项",
                      "index": 51,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptConfig",
                "shortDescription": {
                  "text": "不一致的 Tsconfig.json 属性"
                },
                "fullDescription": {
                  "text": "报告 tsconfig.json 文件中的 'paths' 、'checkJs' 或 'extends' 属性不一致的情况。 'checkJs' 属性必须具备 'allowJs'。 'extends' 属性应为有效的文件引用。",
                  "markdown": "报告 tsconfig.json 文件中的 `paths` 、`checkJs` 或 `extends` 属性不一致的情况。   \n`checkJs` 属性必须具备 `allowJs`。   \n`extends` 属性应为有效的文件引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptConfig",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSSuspiciousNameCombination",
                "shortDescription": {
                  "text": "可疑的变量/形参名称组合"
                },
                "fullDescription": {
                  "text": "报告目标变量或函数形参的名称与分配给它的值的名称不匹配的赋值或函数调用。 示例： 'var x = 0;\n  var y = x;' 或 'var x = 0, y = 0;\n  var rc = new Rectangle(y, x, 20, 20);' 此处，检查猜测 'x' 和 'y' 混淆了。 指定不应一起使用的名称。 如果形参名称或赋值目标名称包含一个组中的词语，而赋值或传递的变量的名称包含另一个组中的词语，则会报告错误。",
                  "markdown": "报告目标变量或函数形参的名称与分配给它的值的名称不匹配的赋值或函数调用。\n\n示例：\n\n\n      var x = 0;\n      var y = x;\n\n或\n\n\n      var x = 0, y = 0;\n      var rc = new Rectangle(y, x, 20, 20);\n\n此处，检查猜测 `x` 和 `y` 混淆了。\n\n指定不应一起使用的名称。 如果形参名称或赋值目标名称包含一个组中的词语，而赋值或传递的变量的名称包含另一个组中的词语，则会报告错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSSuspiciousNameCombination",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnresolvedExtXType",
                "shortDescription": {
                  "text": "未解析的 Ext JS xtype"
                },
                "fullDescription": {
                  "text": "报告没有相应类的 Ext JS 'xtype' 引用。",
                  "markdown": "报告没有相应类的 Ext JS `xtype` 引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnresolvedExtXType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForLoopThatDoesntUseLoopVariableJS",
                "shortDescription": {
                  "text": "'for' 循环中的 update 或 condition 未使用循环变量"
                },
                "fullDescription": {
                  "text": "报告其中的条件或更新不使用 'for' 循环变量的 'for' 循环。",
                  "markdown": "报告其中的条件或更新不使用 `for` 循环变量的 `for` 循环。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForLoopThatDoesntUseLoopVariableJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptAbstractClassConstructorCanBeMadeProtected",
                "shortDescription": {
                  "text": "抽象类构造函数可以设为 protected"
                },
                "fullDescription": {
                  "text": "报告 abstract 类的 public 构造函数，并建议将其设置为 protected（因为将其设置为 public 是无用的）。",
                  "markdown": "报告 abstract 类的 public 构造函数，并建议将其设置为 protected（因为将其设置为 public 是无用的）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptAbstractClassConstructorCanBeMadeProtected",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionWithMultipleReturnPointsJS",
                "shortDescription": {
                  "text": "函数具有多个返回点"
                },
                "fullDescription": {
                  "text": "报告具有多个返回点的函数。 此类函数难以理解和维护。",
                  "markdown": "报告具有多个返回点的函数。 此类函数难以理解和维护。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionWithMultipleReturnPointsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/函数指标",
                      "index": 37,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSIgnoredPromiseFromCall",
                "shortDescription": {
                  "text": "返回 promise 的方法调用结果被忽略"
                },
                "fullDescription": {
                  "text": "报告返回日后不使用的 'Promise' 的函数调用。 此类调用通常是无意为之，表明有错误。",
                  "markdown": "报告返回日后不使用的 `Promise` 的函数调用。 此类调用通常是无意为之，表明有错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSIgnoredPromiseFromCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Async 代码和 promise",
                      "index": 58,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreeNegationsPerFunctionJS",
                "shortDescription": {
                  "text": "函数包含三个以上的否定"
                },
                "fullDescription": {
                  "text": "报告具有三项或更多项否定运算（'!' 或 '!='）的函数。 此类函数可能造成不必要的混淆。",
                  "markdown": "报告具有三项或更多项否定运算（`!` 或 `!=`）的函数。 此类函数可能造成不必要的混淆。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionWithMoreThanThreeNegationsJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/函数指标",
                      "index": 37,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSRemoveUnnecessaryParentheses",
                "shortDescription": {
                  "text": "不必要的圆括号"
                },
                "fullDescription": {
                  "text": "报告冗余圆括号。 在表达式中： 'var x = ((1) + 2) + 3' 在箭头函数实参列表中： 'var incrementer = (x) => x + 1' 在 TypeScript 和 Flow 类型声明中： 'type Card = (Suit & Rank) | (Suit & Number)'",
                  "markdown": "报告冗余圆括号。\n\n在表达式中：\n\n    var x = ((1) + 2) + 3\n\n在箭头函数实参列表中：\n\n    var incrementer = (x) => x + 1\n\n在 TypeScript 和 Flow 类型声明中：\n\n    type Card = (Suit & Rank) | (Suit & Number)\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSRemoveUnnecessaryParentheses",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverlyComplexBooleanExpressionJS",
                "shortDescription": {
                  "text": "过度复杂的布尔表达式"
                },
                "fullDescription": {
                  "text": "报告包含太多项的布尔表达式。 此类表达方式可能令人困惑，并且容易出错。 使用下面的字段可指定算术表达式中允许的最大项数。",
                  "markdown": "报告包含太多项的布尔表达式。 此类表达方式可能令人困惑，并且容易出错。\n\n\n使用下面的字段可指定算术表达式中允许的最大项数。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexBooleanExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverlyComplexArithmeticExpressionJS",
                "shortDescription": {
                  "text": "过于复杂的算术表达式"
                },
                "fullDescription": {
                  "text": "报告包含太多项的算术表达式。 此类表达方式可能令人困惑，并且容易出错。 使用下面的字段可指定算术表达式中允许的最大项数。",
                  "markdown": "报告包含太多项的算术表达式。 此类表达方式可能令人困惑，并且容易出错。\n\n\n使用下面的字段可指定算术表达式中允许的最大项数。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexArithmeticExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6RedundantNestingInTemplateLiteral",
                "shortDescription": {
                  "text": "模板文字中的冗余嵌套"
                },
                "fullDescription": {
                  "text": "报告字符串或模板文字的嵌套实例。 建议将嵌套的实例内联到包含其的模板字符串中。 示例： 'let a = `Hello, ${`Brave ${\"New\"}`} ${\"World\"}!`' 应用快速修复后，代码如下所示： 'let a = `Hello, Brave New World!`'",
                  "markdown": "报告字符串或模板文字的嵌套实例。 建议将嵌套的实例内联到包含其的模板字符串中。\n\n示例：\n\n\n    let a = `Hello, ${`Brave ${\"New\"}`} ${\"World\"}!`\n\n应用快速修复后，代码如下所示：\n\n\n    let a = `Hello, Brave New World!`\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6RedundantNestingInTemplateLiteral",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringLiteralBreaksHTMLJS",
                "shortDescription": {
                  "text": "中断 HTML 解析的字符串文字"
                },
                "fullDescription": {
                  "text": "报告包含 '</' 序列的字符串文字。 此类字符串可能会导致错误解析在其中嵌入 JavaScript 代码的任何 HTML。",
                  "markdown": "报告包含 `</` 序列的字符串文字。 此类字符串可能会导致错误解析在其中嵌入 JavaScript 代码的任何 HTML。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringLiteralBreaksHTMLJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/有效性问题",
                      "index": 29,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestingDepthJS",
                "shortDescription": {
                  "text": "函数过度嵌套"
                },
                "fullDescription": {
                  "text": "报告其函数体中包含的语句在其他语句中嵌套过深的函数。 此类函数可能令人困惑，并且表明可能有必要重构。 使用下面提供的字段指定函数中可接受的最大嵌套深度。",
                  "markdown": "报告其函数体中包含的语句在其他语句中嵌套过深的函数。 此类函数可能令人困惑，并且表明可能有必要重构。\n\n\n使用下面提供的字段指定函数中可接受的最大嵌套深度。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyNestedFunctionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/函数指标",
                      "index": 37,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptSuspiciousConstructorParameterAssignment",
                "shortDescription": {
                  "text": "已分配构造函数字段形参"
                },
                "fullDescription": {
                  "text": "在类字段声明为构造函数形参，然后为此形参赋值时，报告 TypeScript 代码中的常见错误。 在这种情况下，不会赋值给相应的字段，而只是修改局部形参值。 'class Foo {\n  constructor(private p: number) {\n    p = 1; //必须为 this.p = 1；\n  }\n}'",
                  "markdown": "在类字段声明为构造函数形参，然后为此形参赋值时，报告 TypeScript 代码中的常见错误。  \n在这种情况下，*不会* 赋值给相应的字段，而只是修改局部形参值。\n\n\n    class Foo {\n      constructor(private p: number) {\n        p = 1; //必须为 this.p = 1；\n      }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptSuspiciousConstructorParameterAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ChainedFunctionCallJS",
                "shortDescription": {
                  "text": "链式函数调用"
                },
                "fullDescription": {
                  "text": "报告目标为另一个函数调用的函数调用，例如 'foo().bar()'",
                  "markdown": "报告目标为另一个函数调用的函数调用，例如 `foo().bar()`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ChainedFunctionCallJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicateConditionJS",
                "shortDescription": {
                  "text": "'if' 语句中的重复条件"
                },
                "fullDescription": {
                  "text": "报告 'if' 语句的不同分支中的重复条件。 重复条件通常因程序员疏忽大意所致。 示例： 'if (a) {\n    ...\n  } else if (a) {\n    ...\n  }'",
                  "markdown": "报告 `if` 语句的不同分支中的重复条件。 重复条件通常因程序员疏忽大意所致。\n\n示例：\n\n\n      if (a) {\n        ...\n      } else if (a) {\n        ...\n      }\n\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DuplicateConditionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedFunctionCallJS",
                "shortDescription": {
                  "text": "嵌套函数调用"
                },
                "fullDescription": {
                  "text": "报告在另一个函数调用中用作实参的函数调用，例如 'foo(bar())'",
                  "markdown": "报告在另一个函数调用中用作实参的函数调用，例如 `foo(bar())`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedFunctionCallJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrivialIfJS",
                "shortDescription": {
                  "text": "冗余的 'if' 语句"
                },
                "fullDescription": {
                  "text": "报告可以简化为单个赋值 或 'return' 语句的 'if' 语句。 示例： 'if(foo())\n {\n  return true;\n }\n else\n {\n   return false;\n }' 应用快速修复后，代码如下所示：  'return foo();'",
                  "markdown": "报告可以简化为单个赋值 或 `return` 语句的 `if` 语句。\n\n示例：\n\n\n    if(foo())\n     {\n      return true;\n     }\n     else\n     {\n       return false;\n     }\n\n应用快速修复后，代码如下所示：\n\n     return foo();\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantIfStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSEqualityComparisonWithCoercion",
                "shortDescription": {
                  "text": "相等运算符可能导致类型强制"
                },
                "fullDescription": {
                  "text": "报告可能导致意外类型强制的相等运算符的用法。 建议将 '==' 和 '!=' 替换为类型安全的相等运算符 '===' 和 '!=='。 根据所选的选项，将报告下面的一种情况： '==' 和 '!=' 运算符的所有用法。 除了与 null 比较之外的所有用法。 某些代码样式允许使用 'x == null' 替代 'x === null || x === undefined'。 仅可疑的表达式，例如：'==' 或 '!=' 与 '0'、''''、 'null'、'true'、 'false' 或 'undefined' 比较。",
                  "markdown": "报告可能导致意外类型强制的相等运算符的用法。 建议将 `==` 和 `!=` 替换为类型安全的相等运算符 `===` 和 `!==`。\n\n根据所选的选项，将报告下面的一种情况：\n\n* `==` 和 `!=` 运算符的所有用法。\n* 除了与 null 比较之外的所有用法。 某些代码样式允许使用 `x == null` 替代 `x === null || x === undefined`。\n* 仅可疑的表达式，例如：`==` 或 `!=` 与 `0`、`''`、 `null`、`true`、 `false` 或 `undefined` 比较。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualityComparisonWithCoercionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CommaExpressionJS",
                "shortDescription": {
                  "text": "逗号表达式"
                },
                "fullDescription": {
                  "text": "报告逗号表达式。 此类表达式通常表明代码过于巧妙，并且可能导致难以捉摸的错误。 初始值设定项中的逗号表达式或 'for' 循环的 update 部分中的逗号表达式 被忽略。",
                  "markdown": "报告逗号表达式。 此类表达式通常表明代码过于巧妙，并且可能导致难以捉摸的错误。 初始值设定项中的逗号表达式或 `for` 循环的 update 部分中的逗号表达式 被忽略。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CommaExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantOnLHSOfComparisonJS",
                "shortDescription": {
                  "text": "常量位于比较的左侧"
                },
                "fullDescription": {
                  "text": "报告左侧有常量的比较运算。 根据 编码约定，常量应当位于比较的右侧。",
                  "markdown": "报告左侧有常量的比较运算。 根据 编码约定，常量应当位于比较的右侧。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantOnLefSideOfComparisonJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSCheckFunctionSignatures",
                "shortDescription": {
                  "text": "签名不匹配"
                },
                "fullDescription": {
                  "text": "报告其中的实参与所引用函数的签名不匹配的 JavaScript 调用表达式，包括实参的类型及其数量。 也报告在形参和返回类型方面与被重载函数不匹配的重载函数。 将忽略 TypeScript 代码。",
                  "markdown": "报告其中的实参与所引用函数的签名不匹配的 JavaScript 调用表达式，包括实参的类型及其数量。 也报告在形参和返回类型方面与被重载函数不匹配的重载函数。\n\n将忽略 TypeScript 代码。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSCheckFunctionSignatures",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentResultUsedJS",
                "shortDescription": {
                  "text": "使用的赋值的结果"
                },
                "fullDescription": {
                  "text": "报告赋值结果在包含其的表达式中使用的赋值表达式。 此类赋值通常表明有编码错误，例如，应是 '=' 而不是 '=='。 此外，它们可能会由于运算顺序而导致混淆， 因为赋值的求值可能会以意想不到的方式影响外部表达式。 将忽略圆括号中的表达式。",
                  "markdown": "报告赋值结果在包含其的表达式中使用的赋值表达式。 此类赋值通常表明有编码错误，例如，应是 `=` 而不是 `==`。 此外，它们可能会由于运算顺序而导致混淆， 因为赋值的求值可能会以意想不到的方式影响外部表达式。\n\n将忽略圆括号中的表达式。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentResultUsedJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/赋值问题",
                      "index": 42,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6BindWithArrowFunction",
                "shortDescription": {
                  "text": "箭头函数 'bind' 用法可疑"
                },
                "fullDescription": {
                  "text": "报告 'bind' 与箭头函数一起使用的情况。 由于箭头函数使用词法 'this'，所以 'bind' 调用对它们无效。 有关详细信息，请参阅此处。",
                  "markdown": "报告 `bind` 与箭头函数一起使用的情况。  \n由于箭头函数使用词法 `this`，所以 `bind` 调用对它们无效。  \n有关详细信息，请参阅[此处](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions#Lexical_this)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ES6BindWithArrowFunction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantOnRHSOfComparisonJS",
                "shortDescription": {
                  "text": "常量位于比较的右侧"
                },
                "fullDescription": {
                  "text": "报告右侧有常量的比较运算。 根据 编码约定，常量应当只位于比较的左侧。",
                  "markdown": "报告右侧有常量的比较运算。 根据 编码约定，常量应当只位于比较的左侧。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantOnRightSideOfComparisonJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSComparisonWithNaN",
                "shortDescription": {
                  "text": "与 NaN 比较"
                },
                "fullDescription": {
                  "text": "报告与 NaN 的比较。 类似于 'expr == NaN' 或 'expr === NaN' 的比较总是评估为 'false'。",
                  "markdown": "报告与 NaN 的比较。 类似于 `expr == NaN` 或 `expr === NaN` 的比较总是评估为 `false`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSComparisonWithNaN",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnnecessarySemicolon",
                "shortDescription": {
                  "text": "不必要的分号"
                },
                "fullDescription": {
                  "text": "报告不必要的分号。",
                  "markdown": "报告不必要的分号。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnnecessarySemicolon",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLabelJS",
                "shortDescription": {
                  "text": "不必要的标签"
                },
                "fullDescription": {
                  "text": "报告未使用的标签。",
                  "markdown": "报告未使用的标签。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLabelJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSBitwiseOperatorUsage",
                "shortDescription": {
                  "text": "按位运算符用法"
                },
                "fullDescription": {
                  "text": "报告按位 AND (\"'&'\") 或 OR (\"'|'\") 运算符的可疑用法。 通常这是拼写错误，应为应用布尔运算 AND (\"'&&'\") 和 OR (\"'||'\") 的结果。",
                  "markdown": "报告按位 AND (\"`&`\") 或 OR (\"`|`\") 运算符的可疑用法。 通常这是拼写错误，应为应用布尔运算 AND (\"`&&`\") 和 OR (\"`||`\") 的结果。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSBitwiseOperatorUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/按位运算问题",
                      "index": 23,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptUnresolvedReference",
                "shortDescription": {
                  "text": "未解析的 TypeScript 引用"
                },
                "fullDescription": {
                  "text": "报告 TypeScript 代码中的未解析引用。",
                  "markdown": "报告 TypeScript 代码中的未解析引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "TypeScriptUnresolvedReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnresolvedReference",
                "shortDescription": {
                  "text": "未解析的引用"
                },
                "fullDescription": {
                  "text": "报告 JavaScript 代码中的未解析引用。",
                  "markdown": "报告 JavaScript 代码中的未解析引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSUnresolvedReference",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSNonStrictModeUsed",
                "shortDescription": {
                  "text": "使用了非严格模式"
                },
                "fullDescription": {
                  "text": "报告不处于 'strict' 模式的 JavaScript 文件。",
                  "markdown": "报告不处于 ` strict` 模式的 JavaScript 文件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSNonStrictModeUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6RedundantAwait",
                "shortDescription": {
                  "text": "冗余 'await' 表达式"
                },
                "fullDescription": {
                  "text": "报告 'await' 的冗余用法，例如 'await await' 或等待非 promise 结果。 选择“报告 promise”选项时，建议在适用时（在 'return' 语句中以及包含 'Promise.resolve/reject' 时）移除 promise 前面的 'await'。 在此类上下文中移除 'await' 会导致两个问题。 用 'try-catch' 环绕代码并且忘记添加 'await' 会改变代码语义，而您可能没有注意到这一点。 采用显式的 'await' 可能会阻止 V8 运行时提供异步堆栈跟踪。",
                  "markdown": "报告 `await` 的冗余用法，例如 `await await` 或等待非 promise 结果。\n\n\n选择\"报告 promise\"选项时，建议在适用时（在 `return` 语句中以及包含 `Promise.resolve/reject` 时）移除 promise 前面的 `await`。\n\n在此类上下文中移除 `await` 会导致两个问题。\n\n* 用 `try-catch ` 环绕代码并且忘记添加 `await` 会改变代码语义，而您可能没有注意到这一点。\n* 采用显式的 `await` 可能会阻止 V8 运行时提供[异步堆栈跟踪](http://bit.ly/v8-zero-cost-async-stack-traces)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ES6RedundantAwait",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Async 代码和 promise",
                      "index": 58,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedSwitchStatementJS",
                "shortDescription": {
                  "text": "嵌套 'switch' 语句"
                },
                "fullDescription": {
                  "text": "报告嵌套在另一个 'switch' 语句中的 'switch' 语句。 嵌套的 'switch' 语句可能非常令人困惑，尤其在缩进不一致的情况下。",
                  "markdown": "报告嵌套在另一个 `switch` 语句中的 `switch` 语句。 嵌套的 `switch` 语句可能非常令人困惑，尤其在缩进不一致的情况下。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedSwitchStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnterminatedStatementJS",
                "shortDescription": {
                  "text": "未终止的语句"
                },
                "fullDescription": {
                  "text": "报告结尾不带分号或换行符的语句。 在编辑器 | 代码样式 | JavaScript 或 TypeScript - 标点符号中选择“用分号结束语句”选项，报告任何不以分号结尾的语句，即使末尾使用了换行符时也报告。 根据某些编码样式，为了与其他语言相一致，分号比换行符更可取。",
                  "markdown": "报告结尾不带分号或换行符的语句。\n\n在*编辑器 \\| 代码样式 \\| JavaScript 或 TypeScript - 标点符号*中选择\"用分号结束语句\"选项，报告任何不以分号结尾的语句，即使末尾使用了换行符时也报告。\n根据某些编码样式，为了与其他语言相一致，分号比换行符更可取。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnterminatedStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/代码样式问题",
                      "index": 12,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PlatformDetectionJS",
                "shortDescription": {
                  "text": "平台检测不准确"
                },
                "fullDescription": {
                  "text": "报告用于检测从中运行脚本的浏览器或 操作系统的通用 JavaScript 模式。 除了指出不可移植的结构外，这些平台检测模式通常不完整并且容易被愚弄。 在大多数情况下，检测单个环境的功能 比尝试检测整个平台更可取。 检测到的模式包括： 'document.all' 'document.layers' 'navigator.userAgent' 'navigator.oscpu' 'navigator.appName' 'navigator.appCodeName' 'navigator.platform'",
                  "markdown": "报告用于检测从中运行脚本的浏览器或 操作系统的通用 JavaScript 模式。 除了指出不可移植的结构外，这些平台检测模式通常不完整并且容易被愚弄。 在大多数情况下，检测单个环境的功能 比尝试检测整个平台更可取。\n\n检测到的模式包括：\n\n* `document.all`\n* `document.layers`\n* `navigator.userAgent`\n* `navigator.oscpu`\n* `navigator.appName`\n* `navigator.appCodeName`\n* `navigator.platform`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PlatformDetectionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/DOM 问题",
                      "index": 57,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfStatementWithIdenticalBranchesJS",
                "shortDescription": {
                  "text": "'if' 语句的分支相同"
                },
                "fullDescription": {
                  "text": "报告具有相同的 'then' 和 'else' 分支的 'if' 语句。 此类语句几乎 肯定有错误。",
                  "markdown": "报告具有相同的 `then` 和 `else` 分支的 `if` 语句。 此类语句几乎 肯定有错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IfStatementWithIdenticalBranchesJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToFunctionParameterJS",
                "shortDescription": {
                  "text": "赋值给函数形参"
                },
                "fullDescription": {
                  "text": "报告对函数形参的赋值，包括递增和递减运算。 虽然偶尔是有意为之，但此结构可能格外令人困惑，并且通常是由错误所致。",
                  "markdown": "报告对函数形参的赋值，包括递增和递减运算。 虽然偶尔是有意为之，但此结构可能格外令人困惑，并且通常是由错误所致。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToFunctionParameterJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/赋值问题",
                      "index": 42,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSConsecutiveCommasInArrayLiteral",
                "shortDescription": {
                  "text": "数组文字中的连续逗号"
                },
                "fullDescription": {
                  "text": "报告数组文字中的连续逗号。 跳过的元素接受 'undefined' 值， 但这可能是无意为之，例如，当逗号位于一行的末尾和下一行的开头时。",
                  "markdown": "报告数组文字中的连续逗号。 跳过的元素接受 `undefined` 值， 但这可能是无意为之，例如，当逗号位于一行的末尾和下一行的开头时。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSConsecutiveCommasInArrayLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FallThroughInSwitchStatementJS",
                "shortDescription": {
                  "text": "'switch' 语句中的直落"
                },
                "fullDescription": {
                  "text": "报告可以将控制从一个分支转到下一个分支的 'switch' 语句。 这种“贯穿”通常表示有错误， 例如，缺少 'break' 或 'return'。",
                  "markdown": "报告可以将控制从一个分支转到下一个分支的 `switch` 语句。 这种\"贯穿\"通常表示有错误， 例如，缺少 `break` 或 `return`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FallThroughInSwitchStatementJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CallerJS",
                "shortDescription": {
                  "text": "使用 'caller' 属性"
                },
                "fullDescription": {
                  "text": "报告 JavaScript 函数中 'caller' 属性的用法。 使用此属性访问调用方法的堆栈帧可能格外令人困惑，并导致难以捉摸的错误。",
                  "markdown": "报告 JavaScript 函数中 `caller` 属性的用法。 使用此属性访问调用方法的堆栈帧可能格外令人困惑，并导致难以捉摸的错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallerJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptExplicitMemberType",
                "shortDescription": {
                  "text": "显式类型"
                },
                "fullDescription": {
                  "text": "报告与显式类型的当前代码样式不匹配的类型注解。 从上下文推断出的类型与类型注解完全匹配时，不需要类型声明，例如： 'var pi: number = 3.14' 在某些情况下，最好始终采用显式类型 – 这可以防止意外更改类型，并使代码更明确。",
                  "markdown": "报告与显式类型的当前代码样式不匹配的类型注解。\n\n\n从上下文推断出的类型与类型注解完全匹配时，不需要类型声明，例如：\n\n\n        var pi: number = 3.14\n\n在某些情况下，最好始终采用显式类型 -- 这可以防止意外更改类型，并使代码更明确。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TypeScriptExplicitMemberType",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSDuplicateCaseLabel",
                "shortDescription": {
                  "text": "重复的 'case' 标签"
                },
                "fullDescription": {
                  "text": "报告 'switch' 语句中重复的 'case' 标签，这通常表示有错误。",
                  "markdown": "报告 `switch` 语句中重复的 `case` 标签，这通常表示有错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSDuplicateCaseLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnreachableSwitchBranches",
                "shortDescription": {
                  "text": "不可到达 'switch' 语句的 'case' 分支"
                },
                "fullDescription": {
                  "text": "报告 'switch' 语句不可到达的 'case' 分支。 示例： '/**\n * @param {('foo' | 'bar')} p\n */\nfunction foo(p) {\n    switch (p) {\n        case 'foo': break;\n        case 'bar': break;\n        case 'baz': break; // 不可到达\n    }\n}'",
                  "markdown": "报告 `switch` 语句不可到达的 `case` 分支。\n\n示例：\n\n\n    /**\n     * @param {('foo' | 'bar')} p\n     */\n    function foo(p) {\n        switch (p) {\n            case 'foo': break;\n            case 'bar': break;\n            case 'baz': break; // 不可到达\n        }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnreachableSwitchBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeScriptDuplicateUnionOrIntersectionType",
                "shortDescription": {
                  "text": "联合或相交类型组件重复"
                },
                "fullDescription": {
                  "text": "报告合集或交集中的重复类型。",
                  "markdown": "报告合集或交集中的重复类型。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeScriptDuplicateUnionOrIntersectionType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/TypeScript",
                      "index": 28,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrivialConditionalJS",
                "shortDescription": {
                  "text": "冗余条件表达式"
                },
                "fullDescription": {
                  "text": "报告如下格式的条件表达式 'condition ? true : false\ncondition ? false : true' 这些表达式可以安全地转换为 'condition\n!condition'",
                  "markdown": "报告如下格式的条件表达式\n\n\n    condition ? true : false\n    condition ? false : true\n\n\n这些表达式可以安全地转换为\n\n\n    condition\n    !condition\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantConditionalExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InnerHTMLJS",
                "shortDescription": {
                  "text": "使用 'innerHTML' 属性"
                },
                "fullDescription": {
                  "text": "报告使用 'innerHTML' 属性以文本形式对 DOM 节点的 JavaScript 访问。 在采用显式 DOM 调用（例如 'getElementByID()' 和 'createElement()'）时, 'innerHTML' 的大多数用法执行效果更好。 此外，'innerHTML' 不适用于 XML DOM，包括用于 XHTML 的 DOM（如果以 XML 格式查看）。 这可能会导致 难以诊断错误。",
                  "markdown": "报告使用 `innerHTML` 属性以文本形式对 DOM 节点的 JavaScript 访问。 在采用显式 DOM 调用（例如 `getElementByID()` 和 `createElement()`）时, `innerHTML` 的大多数用法执行效果更好。 此外，`innerHTML` 不适用于 XML DOM，包括用于 XHTML 的 DOM（如果以 XML 格式查看）。 这可能会导致 难以诊断错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InnerHTMLJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/DOM 问题",
                      "index": 57,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ES6UnusedImports",
                "shortDescription": {
                  "text": "未使用的 import"
                },
                "fullDescription": {
                  "text": "报告冗余的 'import' 语句。 如果源文件中没有使用导入的符号，通常就会出现这种情况。 为避免副作用，可以考虑使用 bare import 'import 'packageName'' 来代替常规 import。",
                  "markdown": "报告冗余的 `import` 语句。 如果源文件中没有使用导入的符号，通常就会出现这种情况。 为避免副作用，可以考虑使用 bare import `import 'packageName'` 来代替常规 import。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ES6UnusedImports",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Import 和依赖项",
                      "index": 51,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSMissingSwitchBranches",
                "shortDescription": {
                  "text": "'switch' 语句缺少分支"
                },
                "fullDescription": {
                  "text": "当 'switch' 语句不包含 'enum' 或 'union' 类型的某些值选项时，报告该类型变量的 switch 语句。",
                  "markdown": "当 `switch` 语句不包含 `enum` 或 `union` 类型的某些值选项时，报告该类型变量的 switch 语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSMissingSwitchBranches",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSSwitchVariableDeclarationIssue",
                "shortDescription": {
                  "text": "声明了变量并在不同的 'case' 子句中使用"
                },
                "fullDescription": {
                  "text": "报告在 'switch' 语句的一个 'case' 子句中声明但在同一语句的另一个 'case' 子句中使用的变量。 对于块范围的变量，这将导致抛出 'ReferenceError'。 对于 'var' 变量，它表示可能有错误。 如果有意使用此模式，请禁用 'var' 变量检查。",
                  "markdown": "报告在 `switch` 语句的一个 `case` 子句中声明但在同一语句的另一个 `case` 子句中使用的变量。 对于块范围的变量，这将导致抛出 `ReferenceError`。 对于 `var` 变量，它表示可能有错误。\n\n如果有意使用此模式，请禁用 `var` 变量检查。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSSwitchVariableDeclarationIssue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/switch 语句问题",
                      "index": 56,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VoidExpressionJS",
                "shortDescription": {
                  "text": "'void' 表达式"
                },
                "fullDescription": {
                  "text": "报告 'void' 表达式。",
                  "markdown": "报告 `void` 表达式。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VoidExpressionJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能不合需要的代码结构",
                      "index": 15,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSJQueryEfficiency",
                "shortDescription": {
                  "text": "可以优化 JQuery 选择器"
                },
                "fullDescription": {
                  "text": "报告可以缓存的重复 jQuery 选择器，或报告特性或伪选择器的用法（可选）。",
                  "markdown": "报告可以缓存的重复 jQuery 选择器，或报告特性或伪选择器的用法（可选）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSJQueryEfficiency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSAssignmentUsedAsCondition",
                "shortDescription": {
                  "text": "用作条件的赋值"
                },
                "fullDescription": {
                  "text": "报告用作 'if'、'while'、'for' 或 'do' 语句的条件的赋值。 虽然偶尔是有意为之，但此用法令人困惑，而且通常表明存在拼写错误（例如，应使用 '=' 而不是 '=='）。",
                  "markdown": "报告用作 `if`、`while`、`for` 或 `do` 语句的条件的赋值。 虽然偶尔是有意为之，但此用法令人困惑，而且通常表明存在拼写错误（例如，应使用 `=` 而不是 `==`）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSAssignmentUsedAsCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/赋值问题",
                      "index": 42,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnreachableCodeJS",
                "shortDescription": {
                  "text": "不可到达的代码"
                },
                "fullDescription": {
                  "text": "报告永远无法执行的代码，这几乎肯定表明有错误",
                  "markdown": "报告永远无法执行的代码，这几乎肯定表明有错误"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnreachableCodeJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForLoopReplaceableByWhileJS",
                "shortDescription": {
                  "text": "'for' 循环可被替换为 'while' 循环"
                },
                "fullDescription": {
                  "text": "报告既不包含初始化也不包含更新组件的 'for' 循环。 建议将该循环替换为更简单的 'while' 语句。 示例： 'for(; exitCondition(); ) {\n    process();\n  }' 应用快速修复后，结果如下所示： 'while(exitCondition()) {\n    process();\n  }' 如果希望此检查忽略包含普通条件或不存在条件的 for 循环，请使用下面的复选框。",
                  "markdown": "报告既不包含初始化也不包含更新组件的 `for` 循环。 建议将该循环替换为更简单的 `while` 语句。\n\n示例：\n\n\n      for(; exitCondition(); ) {\n        process();\n      }\n\n应用快速修复后，结果如下所示：\n\n\n      while(exitCondition()) {\n        process();\n      }\n\n如果希望此检查忽略包含普通条件或不存在条件的 **for** 循环，请使用下面的复选框。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForLoopReplaceableByWhile",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/控制流问题",
                      "index": 1,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSSuspiciousEqPlus",
                "shortDescription": {
                  "text": "可疑的 '=+' 赋值"
                },
                "fullDescription": {
                  "text": "报告 'a =+ b' 形式的赋值。 建议替换为 'a += b'。",
                  "markdown": "报告 `a =+ b` 形式的赋值。 建议替换为 `a += b`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSSuspiciousEqPlus",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyStatementBodyJS",
                "shortDescription": {
                  "text": "带空体的语句"
                },
                "fullDescription": {
                  "text": "报告语句体为空的 'if' 、'while' 、'for' 或 'with' 语句。 此类语句通常是由拼写错误所致，可能会引起混淆。 使用下面的复选框指定是否应报告以空块语句为主体的语句。",
                  "markdown": "报告语句体为空的 `if` 、`while` 、`for` 或 `with` 语句。 此类语句通常是由拼写错误所致，可能会引起混淆。\n\n\n使用下面的复选框指定是否应报告以空块语句为主体的语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StatementWithEmptyBodyJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能引起混淆的代码结构",
                      "index": 31,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSVoidFunctionReturnValueUsed",
                "shortDescription": {
                  "text": "使用了 void 函数返回值"
                },
                "fullDescription": {
                  "text": "报告不返回任何内容的函数的返回值。 调用此类函数总是生成 'undefined' 值，此类赋值可能表明有错误。 示例： 'let a = console.log('foo');' 以下用法将被忽略： 在 return 语句内部 在某些二进制运算中 对于覆盖的非 void 函数",
                  "markdown": "报告不返回任何内容的函数的返回值。 调用此类函数总是生成 `undefined` 值，此类赋值可能表明有错误。\n\n示例：\n\n\n    let a = console.log('foo');\n\n以下用法将被忽略：\n\n* 在 return 语句内部\n* 在某些二进制运算中\n* 对于覆盖的非 void 函数"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSVoidFunctionReturnValueUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/可能的 bug",
                      "index": 18,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSUnusedLocalSymbols",
                "shortDescription": {
                  "text": "未使用的局部符号"
                },
                "fullDescription": {
                  "text": "报告本地可以访问的并且未使用的形参、局部变量、函数、类或 private 成员声明。",
                  "markdown": "报告本地可以访问的并且未使用的形参、局部变量、函数、类或 private 成员声明。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JSUnusedLocalSymbols",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/未使用的符号",
                      "index": 21,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReturnFromFinallyBlockJS",
                "shortDescription": {
                  "text": "'return' 位于 'finally' 块内"
                },
                "fullDescription": {
                  "text": "报告 'finally' 块中的 'return' 语句。 此类 'return' 语句可能会掩盖抛出的异常，并导致调试复杂化。",
                  "markdown": "报告 `finally` 块中的 `return` 语句。 此类 `return` 语句可能会掩盖抛出的异常，并导致调试复杂化。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReturnInsideFinallyBlockJS",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/Try 语句问题",
                      "index": 36,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JSValidateTypes",
                "shortDescription": {
                  "text": "类型不匹配"
                },
                "fullDescription": {
                  "text": "报告类型不正确的以下对象： 函数调用中的形参 返回值 赋值表达式 将忽略 TypeScript 代码。",
                  "markdown": "报告类型不正确的以下对象：\n\n* 函数调用中的形参\n* 返回值\n* 赋值表达式\n\n将忽略 TypeScript 代码。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JSValidateTypes",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.editorconfig.editorconfigjetbrains",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "EditorConfigCharClassRedundancy",
                "shortDescription": {
                  "text": "不必要的字符类"
                },
                "fullDescription": {
                  "text": "报告由单个字符组成的字符类。 这种类可以简化为一个字符，例如 '[a]'→'a'。",
                  "markdown": "报告由单个字符组成的字符类。 这种类可以简化为一个字符，例如 `[a]`→`a`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigCharClassRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigRootDeclarationUniqueness",
                "shortDescription": {
                  "text": "额外顶层声明"
                },
                "fullDescription": {
                  "text": "报告多个顶层声明。 EditorConfig 文件中只能有一个可选的 “root=true” 顶级声明。 不允许使用多个顶级声明。",
                  "markdown": "报告多个顶层声明。 EditorConfig 文件中只能有一个可选的 \"root=true\" 顶级声明。 不允许使用多个顶级声明。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigRootDeclarationUniqueness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigNumerousWildcards",
                "shortDescription": {
                  "text": "过多通配符"
                },
                "fullDescription": {
                  "text": "报告包含过多通配符的部分。 使用大量通配符可能会导致性能问题。",
                  "markdown": "报告包含过多通配符的部分。 使用大量通配符可能会导致性能问题。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EditorConfigNumerousWildcards",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPartialOverride",
                "shortDescription": {
                  "text": "重叠的部分"
                },
                "fullDescription": {
                  "text": "报告当前部分中指定的文件子集与其他部分中的其他子集重叠。 例如：'[{foo,bar}]' 和 '[{foo,bas}]' 都包含 “foo”。",
                  "markdown": "报告当前部分中指定的文件子集与其他部分中的其他子集重叠。 例如：`[{foo,bar}]` 和 `[{foo,bas}]` 都包含 \"foo\"。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EditorConfigPartialOverride",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigEmptySection",
                "shortDescription": {
                  "text": "空部分"
                },
                "fullDescription": {
                  "text": "报告不包含任何 EditorConfig 属性的部分。",
                  "markdown": "报告不包含任何 EditorConfig 属性的部分。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigEmptySection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigShadowingOption",
                "shortDescription": {
                  "text": "重写属性"
                },
                "fullDescription": {
                  "text": "报告覆盖文件中先前定义的相同属性的属性。 示例： '[*.java]\nindent_size=4\n[{*.java,*.js}]\nindent_size=2' 第二部分同样包含 '[*.java]' 文件，但还将 indent_size 设置为值 2。 因此第一个声明 'indent_size=4' 将被忽略。",
                  "markdown": "报告覆盖文件中先前定义的相同属性的属性。\n\n示例：\n\n\n    [*.java]\n    indent_size=4\n    [{*.java,*.js}]\n    indent_size=2\n\n第二部分同样包含 `[*.java]` 文件，但还将 indent_size 设置为值 2。 因此第一个声明 `indent_size=4` 将被忽略。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigShadowingOption",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigListAcceptability",
                "shortDescription": {
                  "text": "意外的值列表"
                },
                "fullDescription": {
                  "text": "报告在不支持列表的属性中使用的值列表。 在这种情况下，只能指定一个值。",
                  "markdown": "报告在不支持列表的属性中使用的值列表。 在这种情况下，只能指定一个值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigListAcceptability",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigKeyCorrectness",
                "shortDescription": {
                  "text": "未知属性"
                },
                "fullDescription": {
                  "text": "报告 IDE 不支持的属性。 注意：一些 “ij” 域属性可能需要特定的语言插件。",
                  "markdown": "报告 IDE 不支持的属性。 注意：一些 \"ij\" 域属性可能需要特定的语言插件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigKeyCorrectness",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPatternEnumerationRedundancy",
                "shortDescription": {
                  "text": "不必要的大括号"
                },
                "fullDescription": {
                  "text": "报告要么为空 '{}'，要么只包含一个模式（例如 '{foo}'）而非包含多个模式的列表（例如 '{foo,bar}'）的模式列表。 在这种情况下，大括号会被作为名称的一部分进行处理。 例如，模式 '*.{a}' 将匹配 'my.{a}' 文件而非 'my.a' 文件。",
                  "markdown": "报告要么为空 `{}`，要么只包含一个模式（例如 `{foo}`）而非包含多个模式的列表（例如 `{foo,bar}`）的模式列表。 在这种情况下，大括号会被作为名称的一部分进行处理。 例如，模式 `*.{a}` 将匹配 `my.{a}` 文件而非 `my.a` 文件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigPatternEnumerationRedundancy",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigEncoding",
                "shortDescription": {
                  "text": "文件编码与 EditorConfig 字符集不匹配"
                },
                "fullDescription": {
                  "text": "检查当前文件编码是否与 .editorconfig 文件 \"charset\" 属性中定义的编码匹配。",
                  "markdown": "检查当前文件编码是否与 .editorconfig 文件 \"charset\" 属性中定义的编码匹配。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigEncoding",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigRootDeclarationCorrectness",
                "shortDescription": {
                  "text": "意外的顶层声明"
                },
                "fullDescription": {
                  "text": "报告非预期的顶层声明。 EditorConfig 文件中不允许使用除 “root=true” 之外的顶级声明。",
                  "markdown": "报告非预期的顶层声明。 EditorConfig 文件中不允许使用除 \"root=true\" 之外的顶级声明。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigRootDeclarationCorrectness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigReferenceCorrectness",
                "shortDescription": {
                  "text": "无效引用"
                },
                "fullDescription": {
                  "text": "报告未知或类型错误的标识符。",
                  "markdown": "报告未知或类型错误的标识符。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigReferenceCorrectness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPairAcceptability",
                "shortDescription": {
                  "text": "意外的键值对"
                },
                "fullDescription": {
                  "text": "报告当前上下文中不允许的键值对。",
                  "markdown": "报告当前上下文中不允许的键值对。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigPairAcceptability",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPatternRedundancy",
                "shortDescription": {
                  "text": "重复或冗余模式"
                },
                "fullDescription": {
                  "text": "报告已经有另一个模式定义了具有相同或更广泛文件范围的冗余的文件模式。 例如，在 '[{*.java,*}]' 中，第一个 '*.java' 模式定义了比 '*' 更窄的范围。 这使得第一个模式变得多余并且可以被移除。",
                  "markdown": "报告已经有另一个模式定义了具有相同或更广泛文件范围的冗余的文件模式。 例如，在 `[{*.java,*}]` 中，第一个 `*.java` 模式定义了比 `*` 更窄的范围。 这使得第一个模式变得多余并且可以被移除。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigPatternRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigNoMatchingFiles",
                "shortDescription": {
                  "text": "无匹配文件"
                },
                "fullDescription": {
                  "text": "报告通配符模式与 '.editorconfig' 文件所在目录下的任何文件都不匹配的部分。",
                  "markdown": "报告通配符模式与 `.editorconfig` 文件所在目录下的任何文件都不匹配的部分。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigNoMatchingFiles",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigDeprecatedDescriptor",
                "shortDescription": {
                  "text": "弃用的属性"
                },
                "fullDescription": {
                  "text": "报告不再支持的 EditorConfig 属性。",
                  "markdown": "报告不再支持的 EditorConfig 属性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigDeprecatedDescriptor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigWildcardRedundancy",
                "shortDescription": {
                  "text": "冗余通配符"
                },
                "fullDescription": {
                  "text": "报告在同一部分中使用 “**” 通配符时变得冗余的通配符。 “**” 通配符定义了比其他通配符更广泛的文件集。 因此，同一部分中使用的任何其他通配符都是无效的，可以删除。",
                  "markdown": "报告在同一部分中使用 \"\\*\\*\" 通配符时变得冗余的通配符。\n\n\n\"\\*\\*\" 通配符定义了比其他通配符更广泛的文件集。\n因此，同一部分中使用的任何其他通配符都是无效的，可以删除。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigWildcardRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigHeaderUniqueness",
                "shortDescription": {
                  "text": "EditorConfig 部分不唯一"
                },
                "fullDescription": {
                  "text": "报告定义与其他部分相同的文件模式的部分。",
                  "markdown": "报告定义与其他部分相同的文件模式的部分。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigHeaderUniqueness",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigShadowedOption",
                "shortDescription": {
                  "text": "被重写的属性"
                },
                "fullDescription": {
                  "text": "报告已在其他部分中定义的属性。 示例： '[*.java]\nindent_size=4\n[{*.java,*.js}]\nindent_size=2' 第二部分也包括所有 '*.java' 文件，但它也重新定义了 indent_size。 因此，值 \"2\" 将用于匹配 '*.java' 的文件。",
                  "markdown": "报告已在其他部分中定义的属性。\n\n示例：\n\n\n    [*.java]\n    indent_size=4\n    [{*.java,*.js}]\n    indent_size=2\n\n第二部分也包括所有 `*.java` 文件，但它也重新定义了 indent_size。 因此，值 \"2\" 将用于匹配 `*.java` 的文件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigShadowedOption",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigEmptyHeader",
                "shortDescription": {
                  "text": "空标头"
                },
                "fullDescription": {
                  "text": "报告带有空标题的部分。 部分标题必须包含格式类似于 'gitignore' 支持的格式的文件路径 glob。",
                  "markdown": "报告带有空标题的部分。 部分标题必须包含格式类似于 `gitignore` 支持的格式的文件路径 glob。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigEmptyHeader",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigValueCorrectness",
                "shortDescription": {
                  "text": "无效属性值"
                },
                "fullDescription": {
                  "text": "报告不符合值限制的属性值。 例如，某些属性可能只能为 “true” 或 “false”、其他属性仅包含整数等。 如果一个值的变体集合有限，请使用代码完成来查看所有变体。",
                  "markdown": "报告不符合值限制的属性值。 例如，某些属性可能只能为 \"true\" 或 \"false\"、其他属性仅包含整数等。 如果一个值的变体集合有限，请使用代码完成来查看所有变体。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigValueCorrectness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigVerifyByCore",
                "shortDescription": {
                  "text": "无效的 .editorconfig 文件"
                },
                "fullDescription": {
                  "text": "使用备份 EditorConfig 核心库验证整个文件，并报告任何失败。 任何此类失败都会阻止 EditorConfig 属性的正确应用。",
                  "markdown": "使用备份 EditorConfig 核心库验证整个文件，并报告任何失败。 任何此类失败都会阻止 EditorConfig 属性的正确应用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigVerifyByCore",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigValueUniqueness",
                "shortDescription": {
                  "text": "非唯一列表值"
                },
                "fullDescription": {
                  "text": "报告值列表中的重复项。",
                  "markdown": "报告值列表中的重复项。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigValueUniqueness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigMissingRequiredDeclaration",
                "shortDescription": {
                  "text": "缺少必需声明"
                },
                "fullDescription": {
                  "text": "报告缺少所需声明的属性。 有关更多信息，请参阅文档。",
                  "markdown": "报告缺少所需声明的属性。 有关更多信息，请参阅文档。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigMissingRequiredDeclaration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigCharClassLetterRedundancy",
                "shortDescription": {
                  "text": "重复的字符类字母"
                },
                "fullDescription": {
                  "text": "报告 EditorConfig 部分中在字符类中包含重复字符的通配符模式，例如 '[aa]'。",
                  "markdown": "报告 EditorConfig 部分中在字符类中包含重复字符的通配符模式，例如 `[aa]`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigCharClassLetterRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigSpaceInHeader",
                "shortDescription": {
                  "text": "文件模式中的空格"
                },
                "fullDescription": {
                  "text": "报告影响模式匹配的通配符模式中的空格字符。 如果这些字符不是故意的，则应将其删除。",
                  "markdown": "报告影响模式匹配的通配符模式中的空格字符。 如果这些字符不是故意的，则应将其删除。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EditorConfigSpaceInHeader",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigOptionRedundancy",
                "shortDescription": {
                  "text": "冗余属性"
                },
                "fullDescription": {
                  "text": "报告另一个适用的部分已经包含相同的属性和值的冗余的属性。 示例： '[*]\nindent_size=4\n[*.java]\nindent_size=4' 都适用于 '*.java' 文件并定义相同的 'indent_size' 值。",
                  "markdown": "报告另一个适用的部分已经包含相同的属性和值的冗余的属性。\n\n\n示例：\n\n\n    [*]\n    indent_size=4\n    [*.java]\n    indent_size=4\n\n都适用于 `*.java` 文件并定义相同的 `indent_size` 值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigOptionRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigUnusedDeclaration",
                "shortDescription": {
                  "text": "未使用的声明"
                },
                "fullDescription": {
                  "text": "报告未使用的声明。 可以删除此类声明。",
                  "markdown": "报告未使用的声明。 可以删除此类声明。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigUnusedDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigUnexpectedComma",
                "shortDescription": {
                  "text": "意外逗号"
                },
                "fullDescription": {
                  "text": "报告不能在当前上下文中使用的逗号。 逗号只能用作分隔符来分隔列表中的值。",
                  "markdown": "报告不能在当前上下文中使用的逗号。 逗号只能用作分隔符来分隔列表中的值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigUnexpectedComma",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 2,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.go",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "GoVetCopyLock",
                "shortDescription": {
                  "text": "锁通过值错误传递"
                },
                "fullDescription": {
                  "text": "报告锁错误地通过值传递。 不小心复制包含锁的值可能会导致两个副本均无法正常工作。 通常，此类值应通过指针引用。 这里的锁表示实现 'sync.Locker' 的类型，例如 'sync.Mutex' 或 'sync.WaitGroup'。 示例： 'type SafeInt struct {\n  m sync.Mutex\n  i int\n}\n\nfunc (s SafeInt) Inc() { // 互斥被复制\n  s.m.Lock()\n  s.i++\n  s.m.Unlock()\n}' 在应用添加指针快速修复后： 'type SafeInt struct {\n  m sync.Mutex\n  i int\n}\n\nfunc (s *SafeInt) Inc() {\n  s.m.Lock()\n  s.i++\n  s.m.Unlock()\n}'",
                  "markdown": "报告锁错误地通过值传递。\n\n不小心复制包含锁的值可能会导致两个副本均无法正常工作。 通常，此类值应通过指针引用。 这里的锁表示实现 `sync.Locker` 的类型，例如 `sync.Mutex` 或 `sync.WaitGroup`。\n\n示例：\n\n    type SafeInt struct {\n      m sync.Mutex\n      i int\n    }\n\n    func (s SafeInt) Inc() { // 互斥被复制\n      s.m.Lock()\n      s.i++\n      s.m.Unlock()\n    }\n\n在应用**添加指针**快速修复后：\n\n    type SafeInt struct {\n      m sync.Mutex\n      i int\n    }\n\n    func (s *SafeInt) Inc() {\n      s.m.Lock()\n      s.i++\n      s.m.Unlock()\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVetCopyLock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoVetImpossibleInterfaceToInterfaceAssertion",
                "shortDescription": {
                  "text": "不可能的接口类型断言"
                },
                "fullDescription": {
                  "text": "报告不可能的接口到接口类型断言。 检查类型断言 'v.(T)' 和相应的类型切换 case，其中 'v' 的静态类型 'V' 是不可能实现目标接口的接口 'T'。 当 'V' 和 'T' 包含名称相同但签名不同的方法时，会发生这种情况。 示例： 'var v interface {\n  Read()\n}\n_ = v.(io.Reader)' 'v' 中的 'Read' 方法与 'io.Reader' 中的 'Read' 方法具有不同的签名，因此该断言将失败。 仅当语言版本为 1.15 或更高时，此检查才会报告。",
                  "markdown": "报告不可能的接口到接口类型断言。\n\n检查类型断言 `v.(T)` 和相应的类型切换 case，其中 `v` 的静态类型 `V` 是不可能实现目标接口的接口 `T`。 当 `V` 和 `T` 包含名称相同但签名不同的方法时，会发生这种情况。\n\n示例：\n\n    var v interface {\n      Read()\n    }\n    _ = v.(io.Reader)\n\n`v` 中的 `Read` 方法与 `io.Reader` 中的 `Read` 方法具有不同的签名，因此该断言将失败。\n\n仅当语言版本为 1.15 或更高时，此检查才会报告。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVetImpossibleInterfaceToInterfaceAssertion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnusedTypeParameter",
                "shortDescription": {
                  "text": "未使用的类型形参"
                },
                "fullDescription": {
                  "text": "报告未使用的类型形参。 'func main() {\n printAll(\n  42,\n  \"bird\",\n )\n}\n\nfunc printAll[I int, S string](\n i I,\n s string,\n) {\n fmt.Println(i)\n fmt.Println(s)\n}' printAll 函数具有两个类型形参 'I' 和 'S'，但是仅使用其中的第一个形参。 因此，'S string' 将被灰显。",
                  "markdown": "报告未使用的类型形参。\n\n    func main() {\n     printAll(\n      42,\n      \"bird\",\n     )\n    }\n\n    func printAll[I int, S string](\n     i I,\n     s string,\n    ) {\n     fmt.Println(i)\n     fmt.Println(s)\n    }\n\n**printAll** 函数具有两个类型形参 `I` 和 `S`，但是仅使用其中的第一个形参。\n因此，`S string` 将被灰显。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnusedTypeParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoShadowedVar",
                "shortDescription": {
                  "text": "阴影变量"
                },
                "fullDescription": {
                  "text": "报告与外部范围中的声明重叠的变量声明。 由于这种情况下变量的含义取决于作用范围，因此可能会造成混乱并导致意外后果。 示例： 'for i := 0; i < len(nums); i++ {\n    for i := 0; i < len(nums); i++ {\n    }\n  }' 嵌入循环中的 'i' 变量被隐藏。 要去除隐藏，请考虑重命名嵌入循环中的变量。 'for i := 0; i < len(nums); i++ {\n    for j := 0; j < len(nums); j++ {\n    }\n  }'",
                  "markdown": "报告与外部范围中的声明重叠的变量声明。\n\n由于这种情况下变量的含义取决于作用范围，因此可能会造成混乱并导致意外后果。\n\n示例：\n\n    for i := 0; i < len(nums); i++ {\n        for i := 0; i < len(nums); i++ {\n        }\n      }\n\n嵌入循环中的 `i` 变量被隐藏。 要去除隐藏，请考虑重命名嵌入循环中的变量。\n\n    for i := 0; i < len(nums); i++ {\n        for j := 0; j < len(nums); j++ {\n        }\n      }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoShadowedVar",
                    "ideaSeverity": "TEXT ATTRIBUTES",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoVetFailNowInNotTestGoroutine",
                "shortDescription": {
                  "text": "非测试 goroutine 中的 'FailNow'"
                },
                "fullDescription": {
                  "text": "报告对 'testing.T.FailNow' 和位于测试文件 goroutine 中的类似方法的调用。 像 'FailNow' 这种方法会调用 'runtime.Goexit'，并停止调用 goroutine，而不是测试。 因此，必须仅从运行测试或基准的 goroutine 中调用。 有关 'FailNow' 的详细信息，请参阅 go.dev 上的 func (*T) FailNow。 示例： 'func TestFoo(t *testing.T) {\n  go func() {\n    t.Fatal(\"oops\") // 退出 goroutine，而不是 TestFoo\n  }()\n}' 在应用替换为 'Error' 和 'return' 快速修复后： 'func TestFoo(t *testing.T) {\n  go func() {\n    t.Error(\"oops\")\n    return\n  }()\n}'",
                  "markdown": "报告对 `testing.T.FailNow` 和位于测试文件 goroutine 中的类似方法的调用。\n\n像 `FailNow` 这种方法会调用 `runtime.Goexit`，并停止调用 goroutine，而不是测试。\n因此，必须仅从运行测试或基准的 goroutine 中调用。\n\n有关 `FailNow` 的详细信息，请参阅 [go.dev 上的 func (\\*T) FailNow](https://pkg.go.dev/testing#T.FailNow)。\n\n示例：\n\n    func TestFoo(t *testing.T) {\n      go func() {\n        t.Fatal(\"oops\") // 退出 goroutine，而不是 TestFoo\n      }()\n    }\n\n在应用**替换为 'Error' 和 'return'** 快速修复后：\n\n    func TestFoo(t *testing.T) {\n      go func() {\n        t.Error(\"oops\")\n        return\n      }()\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVetFailNowInNotTestGoroutine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDfaConstantCondition",
                "shortDescription": {
                  "text": "恒定条件"
                },
                "fullDescription": {
                  "text": "报告代码中始终计算为 'true' 或 'false' 的条件。 示例： 'func _(file *os.File) {\n    if file == nil {\n        return\n    }\n    if file == nil {\n    }\n}' 在给定的示例中，第二个条件 'if file == nil' 冗余。 它将始终计算为 'false'，因为它重复代码中已经执行的检查。",
                  "markdown": "报告代码中始终计算为 `true` 或 `false` 的条件。\n\n示例：\n\n\n    func _(file *os.File) {\n        if file == nil {\n            return\n        }\n        if file == nil {\n        }\n    }\n      \n\n在给定的示例中，第二个条件 `if file == nil` 冗余。 它将始终计算为 `false`，因为它重复代码中已经执行的检查。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoDfaConstantCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/数据流分析(实验性)",
                      "index": 11,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoRedundantImportAlias",
                "shortDescription": {
                  "text": "冗余导入别名"
                },
                "fullDescription": {
                  "text": "报告可以省略的导入软件包的别名。 通常，此类别名等于导入软件包的名称，因此别名没有任何作用，可以直接使用软件包名称。 示例： 'import fmt \"fmt\"' 'fmt' 别名与同样名为 '\"fmt\"' 的软件包名称重复。 要删除别名，请使用 删除导入别名 快速修复。 在应用快速修复后： 'import \"fmt\"'",
                  "markdown": "报告可以省略的导入软件包的别名。\n\n通常，此类别名等于导入软件包的名称，因此别名没有任何作用，可以直接使用软件包名称。\n\n示例：\n\n    import fmt \"fmt\"\n\n`fmt` 别名与同样名为 `\"fmt\"` 的软件包名称重复。 要删除别名，请使用 **删除导入别名** 快速修复。\n\n在应用快速修复后：\n\n    import \"fmt\"\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoRedundantImportAlias",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoPreferNilSlice",
                "shortDescription": {
                  "text": "使用文字声明的空切片"
                },
                "fullDescription": {
                  "text": "报告使用空文字初始值设定项而不是 'nil' 的切片声明。 空切片可以用 'nil' 或空切片文字表示。 它们在功能上等价 — 它们的 'len' 和 'cap' 均为零 — 但 nil 切片为首选样式。 有关空切片的详细信息，请参阅 github.com/golang 上的 Declaring Empty Slices。 示例： 's := []string{}' 要更改声明，请使用 替换为 nil 切片声明 (更改语义) 快速修复。 在应用快速修复后： 'var s []string'",
                  "markdown": "报告使用空文字初始值设定项而不是 `nil` 的切片声明。\n\n空切片可以用 `nil` 或空切片文字表示。 它们在功能上等价 --- 它们的 `len` 和 `cap` 均为零 --- 但 nil 切片为首选样式。\n有关空切片的详细信息，请参阅 [github.com/golang 上的 Declaring Empty Slices](https://github.com/golang/go/wiki/CodeReviewComments#declaring-empty-slices)。\n\n示例：\n\n    s := []string{}\n\n要更改声明，请使用 **替换为 nil 切片声明 (更改语义)** 快速修复。\n在应用快速修复后：\n\n    var s []string\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoPreferNilSlice",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDirectComparisonOfErrors",
                "shortDescription": {
                  "text": "直接比较错误"
                },
                "fullDescription": {
                  "text": "报告错误的直接比较，例如使用 '=='，并建议改用 'errors.Is'。 从 Go 1.13 开始，可以使用 'fmt.Errorf' 函数和 '%w' 动词来包装错误。 因此，对于已包装错误，使用相等检查直接比较错误会失败。 检查特定错误的首选方式是使用标准库中的 errors.Is 函数，因为此函数会在检查特定错误时遍历包装错误链。 有关 'errors.Is' 的详细信息，请参阅 working with Errors in Go 1.13。 该快速修复会将错误的直接比较替换为调用 'errors.Is'。 示例： 'if err == MyError {\n  fmt.Println(\"MyErr\")\n}' 在应用快速修复后： 'if errors.Is(err, MyError) {\n  fmt.Println(\"MyErr\")\n}'",
                  "markdown": "报告错误的直接比较，例如使用 `==`，并建议改用 `errors.Is`。\n\n从 Go 1.13 开始，可以使用 `fmt.Errorf` 函数和 `%w` 动词来包装错误。 因此，对于已包装错误，使用相等检查直接比较错误会失败。 检查特定错误的首选方式是使用标准库中的 [errors.Is](https://pkg.go.dev/errors#Is) 函数，因为此函数会在检查特定错误时遍历包装错误链。\n\n有关 `errors.Is` 的详细信息，请参阅 [working with Errors in Go 1.13](https://go.dev/blog/go1.13-errors)。\n\n该快速修复会将错误的直接比较替换为调用 `errors.Is`。\n\n**示例：**\n\n\n    if err == MyError {\n      fmt.Println(\"MyErr\")\n    }\n\n在应用快速修复后：\n\n\n    if errors.Is(err, MyError) {\n      fmt.Println(\"MyErr\")\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoDirectComparisonOfErrors",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoVetIntToStringConversion",
                "shortDescription": {
                  "text": "整数转换为字符串类型"
                },
                "fullDescription": {
                  "text": "报告类似于 'string(x)' 表达式的转换，其中 'x' 是整数，但不是字节或 rune。 不建议这种转换，因为它们返回 Unicode 代码点 'x' 的 UTF-8 表示，而不是人们可能预期的返回 'x' 的十进制字符串表示。 此外，如果 'x' 表示无效的代码点，转换不能被静态拒绝。 对于打算使用代码点的转换，请考虑使用 'string(rune(x))' 替换它们。 否则， 'strconv.Itoa' 或其等效函数可以返回基于所需基数值的字符串表示。 示例： 'func main() {\n a := 1\n _ = string(a)\n}' 在应用将整数转换为 rune快速修复后： 'func main() {\n a := 1\n _ = string(rune(a))\n}'",
                  "markdown": "报告类似于 `string(x)` 表达式的转换，其中 `x` 是整数，但不是字节或 rune。\n\n不建议这种转换，因为它们返回 Unicode 代码点 `x` 的 UTF-8 表示，而不是人们可能预期的返回 `x` 的十进制字符串表示。 此外，如果 `x` 表示无效的代码点，转换不能被静态拒绝。\n\n对于打算使用代码点的转换，请考虑使用 `string(rune(x))` 替换它们。 否则， `strconv.Itoa` 或其等效函数可以返回基于所需基数值的字符串表示。\n\n示例：\n\n    func main() {\n     a := 1\n     _ = string(a)\n    }\n\n在应用**将整数转换为 rune**快速修复后：\n\n    func main() {\n     a := 1\n     _ = string(rune(a))\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVetIntToStringConversion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDfaErrorMayBeNotNil",
                "shortDescription": {
                  "text": "错误可能不为 nil"
                },
                "fullDescription": {
                  "text": "报告变量可能具有 'nil' 或意外值的实例，因为为检查相关错误是否为非 nil，如 'v, err := foo()' 中。 快速修复会将该函数从此检查的范围中移除。 示例： 'func _() {\n    file, err := os.Open(\"file.txt\")\n    // 这里省略了错误检查\n    name := file.Name()\n    print(name, err)\n}' 在提供的示例中，'file' 可能为 'nil'，或者在 'err' 不为 'nil' 时具有意外值。",
                  "markdown": "报告变量可能具有 `nil` 或意外值的实例，因为为检查相关错误是否为非 nil，如 `v, err := foo()` 中。\n\n快速修复会将该函数从此检查的范围中移除。\n\n示例：\n\n\n    func _() {\n        file, err := os.Open(\"file.txt\")\n        // 这里省略了错误检查\n        name := file.Name()\n        print(name, err)\n    }\n\n在提供的示例中，`file` 可能为 `nil`，或者在 `err` 不为 `nil` 时具有意外值。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoDfaErrorMayBeNotNil",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/数据流分析(实验性)",
                      "index": 11,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoSnakeCaseUsage",
                "shortDescription": {
                  "text": "使用了 Snake_Case(_C)"
                },
                "fullDescription": {
                  "text": "在命名变量、常量和函数时报告使用蛇形拼写法而不是骆驼拼写法的情况。 根据 go.dev 上的 MixedCaps，骆驼拼写法是 Go 中的约定。 示例： 'func get_external_IP() (string, error) {}' 'get_external_IP' 使用蛇形拼写法，但应该使用骆驼拼写法。 您可以应用快速修复将函数名称转换为 'getExternalIp'。",
                  "markdown": "在命名变量、常量和函数时报告使用蛇形拼写法而不是骆驼拼写法的情况。 根据 [go.dev 上的 MixedCaps](https://go.dev/doc/effective_go#mixed-caps)，骆驼拼写法是 Go 中的约定。\n\n示例：\n\n    func get_external_IP() (string, error) {}\n\n`get_external_IP` 使用蛇形拼写法，但应该使用骆驼拼写法。 您可以应用快速修复将函数名称转换为 `getExternalIp`。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoSnakeCaseUsage",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoRedundantComma",
                "shortDescription": {
                  "text": "冗余逗号"
                },
                "fullDescription": {
                  "text": "报告在实参列表和复合文字的末尾可以省略的逗号。 IDE 建议删除被认为是可选的逗号。 移除这些逗号可能会提高代码的可读性。 示例： 's := []int{1, 2,} // 最后一个逗号可以省略'",
                  "markdown": "报告在实参列表和复合文字的末尾可以省略的逗号。\n\nIDE 建议删除被认为是可选的逗号。 移除这些逗号可能会提高代码的可读性。\n\n示例：\n\n    s := []int{1, 2,} // 最后一个逗号可以省略\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoRedundantComma",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoRedundantSemicolon",
                "shortDescription": {
                  "text": "冗余分号"
                },
                "fullDescription": {
                  "text": "报告冗余分号。 惯用的 Go 程序仅在诸如 'for' 循环子句之类的地方使用分号，以分隔初始值设定项，条件和延续元素。 它们对于分隔一行中的多个语句也是必要的。 在其他情况下，您可以省略它们。 有关 Go 中分号的详细信息，请参阅 go.dev 上的 Semicolons。 示例： 'i := 1;'",
                  "markdown": "报告冗余分号。 惯用的 Go 程序仅在诸如 `for` 循环子句之类的地方使用分号，以分隔初始值设定项，条件和延续元素。 它们对于分隔一行中的多个语句也是必要的。 在其他情况下，您可以省略它们。\n\n有关 Go 中分号的详细信息，请参阅 [go.dev 上的 Semicolons](https://go.dev/doc/effective_go#semicolons)。\n\n示例：\n\n    i := 1;\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoRedundantSemicolon",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoRedundantSecondIndexInSlices",
                "shortDescription": {
                  "text": "切片中存在冗余的第二个索引"
                },
                "fullDescription": {
                  "text": "报告切片表达式中的冗余第二个索引（上限）。 通常，第二个索引是可选的。 移除它可能会提高代码的可读性。 示例： 'var a []int\na = a[0:len(a)] // `a[0:len(a)]` 与 `a[0:]` 相同'\n 您可以对这种情况应用 删除冗余索引 快速修复。 应用快速修复后，代码如下所示： 'var a []int\na = a[0:]'",
                  "markdown": "报告切片表达式中的冗余第二个索引（上限）。\n\n通常，第二个索引是可选的。 移除它可能会提高代码的可读性。\n\n示例：\n\n    var a []int\n    a = a[0:len(a)] // `a[0:len(a)]` 与 `a[0:]` 相同\n\n您可以对这种情况应用 **删除冗余索引** 快速修复。 应用快速修复后，代码如下所示：\n\n    var a []int\n    a = a[0:]\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoRedundantSecondIndexInSlices",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoImportUsedAsName",
                "shortDescription": {
                  "text": "软件包名称作为名称标识符导入"
                },
                "fullDescription": {
                  "text": "报告与使用的导入重叠的变量、实参或函数的声明。 此类声明虽然本身合法，但可能会使软件包的导出标识符不可用或在读取代码时造成混乱。 示例： 'import \"fmt\"\nimport _ \"fmt\"\nimport iio \"io\"\n\nfunc _() {\n fmt.Println(\"demo\")\n demo := true\n _, _ = iio.EOF, demo\n}\n\nfunc demo() (int, int) {\n return 1, 2\n}\n\nfunc _() {\n _, _ = iio.EOF, demo\n fmt := \"demo\"\n iio := 1\n _, _ = iio, fmt\n a, _ := demo()\n _ = a\n}' 变量名 'fmt' 和 'iio' 与导入软件包的名称冲突。 为了之后不在代码中混淆他们，最好重命名这些变量。",
                  "markdown": "报告与使用的导入重叠的变量、实参或函数的声明。\n\n此类声明虽然本身合法，但可能会使软件包的导出标识符不可用或在读取代码时造成混乱。\n\n示例：\n\n    import \"fmt\"\n    import _ \"fmt\"\n    import iio \"io\"\n\n    func _() {\n     fmt.Println(\"demo\")\n     demo := true\n     _, _ = iio.EOF, demo\n    }\n\n    func demo() (int, int) {\n     return 1, 2\n    }\n\n    func _() {\n     _, _ = iio.EOF, demo\n     fmt := \"demo\"\n     iio := 1\n     _, _ = iio, fmt\n     a, _ := demo()\n     _ = a\n    }\n\n变量名 `fmt` 和 `iio` 与导入软件包的名称冲突。 为了之后不在代码中混淆他们，最好重命名这些变量。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoImportUsedAsName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnitSpecificDurationSuffix",
                "shortDescription": {
                  "text": "为 'time.Duration' 使用单位特定的后缀"
                },
                "fullDescription": {
                  "text": "报告 'time.Duration' 类型的常量和变量名称中的特定于单位的后缀。 检查来自 'go lint'。 可以在 github.com 上的 golang 存储库中找到表示时间单位的后缀列表。 'time.Duration' 表示一个以纳秒为单位的值，因此添加时间单位后缀可能会使变量的含义变得混乱，甚至指示对 'time.Duration' API 的滥用。 示例： 'var timeoutSeconds = 5 * time.Second'",
                  "markdown": "报告 `time.Duration` 类型的常量和变量名称中的特定于单位的后缀。\n\n检查来自 `go lint`。 可以在 [github.com 上的 golang 存储库](https://github.com/golang/lint/blob/c5fb716d6688a859aae56d26d3e6070808df29f7/lint.go#L1365-L1373)中找到表示时间单位的后缀列表。\n\n`time.Duration` 表示一个以纳秒为单位的值，因此添加时间单位后缀可能会使变量的含义变得混乱，甚至指示对 `time.Duration` API 的滥用。\n\n示例：\n\n    var timeoutSeconds = 5 * time.Second\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoUnitSpecificDurationSuffix",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnusedExportedType",
                "shortDescription": {
                  "text": "未使用的导出类型"
                },
                "fullDescription": {
                  "text": "报告在 'main' 软件包和测试中未使用的导出类型。 有关已导出的标识符的详细信息，请参阅 go.dev 上的 Exported identifiers。 'type User struct {}\n\nfunc main() {}' 'User' 结构类型已声明但从未在代码中使用。 此类型将显示为灰色。",
                  "markdown": "报告在 `main` 软件包和测试中未使用的导出类型。 有关已导出的标识符的详细信息，请参阅 [go.dev 上的 Exported identifiers](https://go.dev/ref/spec#Exported_identifiers)。\n\n    type User struct {}\n\n    func main() {}\n\n`User` 结构类型已声明但从未在代码中使用。 此类型将显示为灰色。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnusedExportedType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDeprecation",
                "shortDescription": {
                  "text": "弃用的元素"
                },
                "fullDescription": {
                  "text": "报告已弃用的元素的用法。 示例： '// 已弃用：使用 io.SeekStart、io.SeekCurrent 和 io.SeekEnd。\nconst (\n SEEK_SET int = 0 // 相对于文件的原点寻找\n SEEK_CUR int = 1 // 相对于当前的偏移量寻找\n SEEK_END int = 2 // 相对于终点寻找\n)' 根据 go.dev 上的 Constants，'SEEK_SET'、'SEEK_CUR' 和 'SEEK_END' 已被弃用。",
                  "markdown": "报告已弃用的元素的用法。\n\n示例：\n\n    // 已弃用：使用 io.SeekStart、io.SeekCurrent 和 io.SeekEnd。\n    const (\n     SEEK_SET int = 0 // 相对于文件的原点寻找\n     SEEK_CUR int = 1 // 相对于当前的偏移量寻找\n     SEEK_END int = 2 // 相对于终点寻找\n    )\n\n根据 [go.dev 上的 Constants](https://pkg.go.dev/os#pkg-constants)，`SEEK_SET`、`SEEK_CUR` 和 `SEEK_END` 已被弃用。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoDeprecation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoNilness",
                "shortDescription": {
                  "text": "为零性分析器"
                },
                "fullDescription": {
                  "text": "报告由错误使用 'nil' 值引起的问题。 IDE 分析数据流，以确定变量是否可以有 'nil' 或非 'nil' 值。 IDE 使用这个结果来报告您的代码中的潜在问题。 请考虑以下可能导致意外后果的情况： 带有 'nil' 接收器的方法调用可能会导致 ‘nil 指针取消引用’。 'nil' 切片索引可能会导致 panic。 如果已知 'v' 始终为 'nil'或非 'nil'，那么像 'v == nil' 这种比较可能毫无意义。 有对应错误的变量不会被检查不是 'nil'。 当变量和错误在类似 'v, err := foo()' 语句中一起定义或赋值时，错误对应于一个变量。",
                  "markdown": "报告由错误使用 `nil` 值引起的问题。\n\nIDE 分析数据流，以确定变量是否可以有 `nil` 或非 `nil` 值。\nIDE 使用这个结果来报告您的代码中的潜在问题。 请考虑以下可能导致意外后果的情况：\n\n* 带有 `nil` 接收器的方法调用可能会导致 'nil 指针取消引用'。\n* `nil` 切片索引可能会导致 panic。\n* 如果已知 `v` 始终为 `nil`或非 `nil`，那么像 `v == nil` 这种比较可能毫无意义。\n* 有对应错误的变量不会被检查不是 `nil`。 当变量和错误在类似 `v, err := foo()` 语句中一起定义或赋值时，错误对应于一个变量。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoNilness",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoVarAndConstTypeMayBeOmitted",
                "shortDescription": {
                  "text": "类型可以省略"
                },
                "fullDescription": {
                  "text": "报告变量和常量声明中的类型，这些类型可以省略，因为它们可以由编译器推断。 此类类型是冗余的，如果删除它们，可以使您的代码更易于阅读。 示例： 'var s string = fmt.Sprintln(\"hi\")' 变量声明中的 'string' 类型可以省略。 要删除类型，请使用 删除类型 快速修复。 在应用快速修复后： 'var s = fmt.Sprintln(\"hi\")'",
                  "markdown": "报告变量和常量声明中的类型，这些类型可以省略，因为它们可以由编译器推断。 此类类型是冗余的，如果删除它们，可以使您的代码更易于阅读。\n\n示例：\n\n    var s string = fmt.Sprintln(\"hi\")\n\n变量声明中的 `string` 类型可以省略。 要删除类型，请使用 **删除类型** 快速修复。\n在应用快速修复后：\n\n    var s = fmt.Sprintln(\"hi\")\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoVarAndConstTypeMayBeOmitted",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoPrintFunctions",
                "shortDescription": {
                  "text": "不正确的 'fmt.Printf' 和 'fmt.Println' 函数用法"
                },
                "fullDescription": {
                  "text": "报告对 'fmt.Printf'、'fmt.Println' 以及类似的格式化和打印功能的不正确使用情况。 在格式化字符串中，格式化函数使用格式化动词，如 '%s'、'%d'、'%v' 等。 如果格式化动词使用不正确，格式化函数的结果将包含错误。 有关格式动词的详细信息，请参阅 go.dev 上的 Package fmt。 示例： 'fmt.Printf(\"id: %s\", 42)' 这个函数的输出是 'id: %!s(int=42)'。 这可能不是您所期望的。 以下函数使用 '%d' 格式化动词。 带有 '%d' 格式化动词的输出将是 'id: 42'。 'fmt.Printf(\"id: %d\", 42)'",
                  "markdown": "报告对 `fmt.Printf`、`fmt.Println` 以及类似的格式化和打印功能的不正确使用情况。\n\n在格式化字符串中，格式化函数使用格式化动词，如 `%s`、`%d`、`%v` 等。\n如果格式化动词使用不正确，格式化函数的结果将包含错误。\n有关格式动词的详细信息，请参阅 [go.dev 上的 Package fmt](https://pkg.go.dev/fmt)。\n\n示例：\n\n    fmt.Printf(\"id: %s\", 42)\n\n这个函数的输出是 `id: %!s(int=42)`。 这可能不是您所期望的。\n以下函数使用 `%d` 格式化动词。\n带有 `%d` 格式化动词的输出将是 `id: 42`。\n\n    fmt.Printf(\"id: %d\", 42)\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoPrintFunctions",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDeferGo",
                "shortDescription": {
                  "text": "Defer/go 语句直接调用 'recover' 或 'panic'"
                },
                "fullDescription": {
                  "text": "报告直接调用 'panic()' 或 'recover()' 的 'defer' 和 'go' 语句。 此类语句很少有用，可能意味着误用了 'panic()' 和 'recover()' 机制。 应特别注意以下事项： 'go panic()'：一个新启动的 goroutine 会立即 panic。 'defer panic()'：带有这个语句的函数在退出时总是会 panic。 'go recovery()'：没有效果，因为新启动的 goroutine 不能 panic。 'defer recovery()'：带有这个语句的函数将默默地停止 panic。 这种用法可能有效，但一种惯用的方法是检查 'recover()' 返回的值： 'defer func() {\n  if r := recover(); r != nil {\n    fmt.Println(\"Recovered from: \", r)\n  }\n}()' 有关 go 语句和 panic 处理的详细信息，请参阅 Go 语言规范中的 Handling panics 和 Go statements。",
                  "markdown": "报告直接调用 `panic()` 或 `recover()` 的 `defer` 和 `go` 语句。\n\n此类语句很少有用，可能意味着误用了 `panic()` 和 `recover()` 机制。\n应特别注意以下事项：\n\n* `go panic()`：一个新启动的 goroutine 会立即 panic。\n* `defer panic()`：带有这个语句的函数在退出时总是会 panic。\n* `go recovery()`：没有效果，因为新启动的 goroutine 不能 panic。\n* `defer recovery()`：带有这个语句的函数将默默地停止 panic。 这种用法可能有效，但一种惯用的方法是检查 `recover()` 返回的值：\n\n      defer func() {\n        if r := recover(); r != nil {\n          fmt.Println(\"Recovered from: \", r)\n        }\n      }()\n\n有关 go 语句和 panic 处理的详细信息，请参阅 Go 语言规范中的 [Handling panics](https://go.dev/ref/spec#Handling_panics) 和 [Go statements](https://go.dev/ref/spec#Go_statements)。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoDeferGo",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoVetUnsafePointer",
                "shortDescription": {
                  "text": "无效的 'uintptr' 到 'unsafe.Pointer' 转换"
                },
                "fullDescription": {
                  "text": "报告从 'uintptr' 到 'unsafe.Pointer' 的潜在错误转换。 如果内存中有存放指针值的 'uintptr' 类型字词，则从 'uintptr' 到 'unsafe.Pointer' 的转换无效，因为该字词对于堆栈复制和垃圾收集器不可见。 用法无效的示例： 'nums := []int8{42, 24}\nptr := unsafe.Pointer(&nums[0])\naddr := uintptr(ptr) // 地址存储到本地变量\nptr = unsafe.Pointer(addr + uintptr(1))' 用法有效的示例： 'nums := []int8{42, 24}\nptr := unsafe.Pointer(&nums[0])\nptr = unsafe.Pointer(uintptr(ptr) + uintptr(1))'",
                  "markdown": "报告从 `uintptr` 到 `unsafe.Pointer` 的潜在错误转换。\n\n如果内存中有存放指针值的 `uintptr` 类型字词，则从 `uintptr` 到 `unsafe.Pointer` 的转换无效，因为该字词对于堆栈复制和垃圾收集器不可见。\n\n用法无效的示例：\n\n    nums := []int8{42, 24}\n    ptr := unsafe.Pointer(&nums[0])\n    addr := uintptr(ptr) // 地址存储到本地变量\n    ptr = unsafe.Pointer(addr + uintptr(1))\n\n用法有效的示例：\n\n    nums := []int8{42, 24}\n    ptr := unsafe.Pointer(&nums[0])\n    ptr = unsafe.Pointer(uintptr(ptr) + uintptr(1))\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVetUnsafePointer",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoReceiverNames",
                "shortDescription": {
                  "text": "接收器具有泛型名称"
                },
                "fullDescription": {
                  "text": "报告类似于 'me'、'this'、'self' 或与此类型的其他接收器名称不同的接收器名称。 示例： 'func (self *MeterSnapshot) Rate5() float64 { return math.Float64frombits(self.rate5) }' 根据 github.com/golang 上的 Receiver Names，您不应使用通用名称，例如“me”、“this”或“self”。 这些标识符在面向对象的语言中很典型，并且可能会赋予方法特殊的含义。",
                  "markdown": "报告类似于 `me`、`this`、`self` 或与此类型的其他接收器名称不同的接收器名称。\n\n示例：\n\n    func (self *MeterSnapshot) Rate5() float64 { return math.Float64frombits(self.rate5) }\n\n根据 [github.com/golang 上的 Receiver Names](https://github.com/golang/go/wiki/CodeReviewComments#receiver-names)，您不应使用通用名称，例如\"me\"、\"this\"或\"self\"。 这些标识符在面向对象的语言中很典型，并且可能会赋予方法特殊的含义。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoReceiverNames",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoConvertStringLiterals",
                "shortDescription": {
                  "text": "转换字符串文字"
                },
                "fullDescription": {
                  "text": "报告可被转换为原始字符串文字的带双引号的字符串文字，以及可被转换为带双引号的字符串文字的原始字符串文字。 示例： 'var s = \"Hello\\n   \\\"World\\\"\"' 在应用快速修复后： 'var s = `Hello\n   \"World\"`' 在将带双引号的字符串转换为原始字符串时，需要注意两点： 根据 Go 语言规范，回车字符 (''\\r'') 会从原始字符串值中丢弃。 由于无法在原始字符串中显示回车符，在将带双引号的字符串转换为原始字符串时，我们会丢弃回车符。 原始字符串文字中不能存在反引号字符 (''`'')，因为无法对其进行转义。 因此，无法将包含反引号字符的带双引号的字符串转换为原始字符串，并且将导致语法错误。 用户可以决定撤消转换或使用某种形式的连接来保留带双引号的字符串中的反引号。 例如，'\"`ab``\"' 将产生 '`ab``'，这在语法上是错误的。 用户可以撤消操作，也可以将结果字符串更改为 '`ab` + \"`\"'。",
                  "markdown": "报告可被转换为原始字符串文字的带双引号的[字符串文字](https://go.dev/ref/spec#String_literals)，以及可被转换为带双引号的字符串文字的原始字符串文字。\n\n**示例：**\n\n\n      var s = \"Hello\\n   \\\"World\\\"\"\n\n在应用快速修复后：\n\n\n      var s = `Hello\n       \"World\"`\n\n在将带双引号的字符串转换为原始字符串时，需要注意两点：\n\n* 根据 [Go 语言规范](https://go.dev/ref/spec#String_literals)，回车字符 (`'\\r'`) 会从原始字符串值中丢弃。 由于无法在原始字符串中显示回车符，在将带双引号的字符串转换为原始字符串时，我们会丢弃回车符。\n* 原始字符串文字中不能存在反引号字符 (``'`'``)，因为无法对其进行转义。 因此，无法将包含反引号字符的带双引号的字符串转换为原始字符串，并且将导致语法错误。 用户可以决定撤消转换或使用某种形式的连接来保留带双引号的字符串中的反引号。 例如，```\"`ab``\"``` 将产生 ````ab`````，这在语法上是错误的。 用户可以撤消操作，也可以将结果字符串更改为 ```ab` + \"`\"``。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoConvertStringLiterals",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnhandledErrorResult",
                "shortDescription": {
                  "text": "未处理错误"
                },
                "fullDescription": {
                  "text": "报告对不处理 'error' 类型调用结果的函数和方法的调用。 此类函数的 API 意味着执行可能会失败并返回错误。 不处理错误结果的调用可能意味着 API 被滥用。 示例： 'os.Remove(\"non-existing\") // 错误被忽略' 在应用处理错误快速修复后： 'err := os.Remove(\"non-existing\") // 错误被处理\nif err != nil {\n  return err\n}'",
                  "markdown": "报告对不处理 `error` 类型调用结果的函数和方法的调用。\n\n此类函数的 API 意味着执行可能会失败并返回错误。\n不处理错误结果的调用可能意味着 API 被滥用。\n\n示例：\n\n\n    os.Remove(\"non-existing\") // 错误被忽略\n\n在应用**处理错误**快速修复后：\n\n    err := os.Remove(\"non-existing\") // 错误被处理\n    if err != nil {\n      return err\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnhandledErrorResult",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoRedundantConversion",
                "shortDescription": {
                  "text": "冗余类型转换"
                },
                "fullDescription": {
                  "text": "报告可以省略的类型转换。 示例： 'var s = string(\"hello\")' '“hello”'值已经是 'string' 类型，进一步转换为 'string' 是冗余的。 要删除转换，请考虑使用删除转换 快速修复。 在应用快速修复后： 'var s = \"hello\"' 有时将浮点表达式转换为浮点类型可能是有意为之（请参阅此问题）。 在这种情况下，IDE 会警告您存在 潜在的 冗余类型转换。",
                  "markdown": "报告可以省略的类型转换。\n\n示例：\n\n    var s = string(\"hello\")\n\n`\"hello\"`值已经是 `string` 类型，进一步转换为 `string` 是冗余的。\n要删除转换，请考虑使用**删除转换** 快速修复。\n\n在应用快速修复后：\n\n    var s = \"hello\"\n\n有时将浮点表达式转换为浮点类型可能是有意为之（请参阅[此问题](https://github.com/mdempsky/unconvert/issues/40)）。 在这种情况下，IDE 会警告您存在 *潜在的* 冗余类型转换。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoRedundantConversion",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoReservedWordUsedAsName",
                "shortDescription": {
                  "text": "保留词用作名称"
                },
                "fullDescription": {
                  "text": "报告与内置或保留关键字重叠的变量、实参或函数的声明。 当您看到这个错误时，这是因为代码没有尽可能的明确，这可能会使其他用户感到困惑。 示例： 'type byte struct{}\ntype string interface{}' 'byte' 和 'string' 类型与内置类型别名冲突。 因此，这些将高亮显示。 考虑重命名此类声明。",
                  "markdown": "报告与内置或保留关键字重叠的变量、实参或函数的声明。\n\n当您看到这个错误时，这是因为代码没有尽可能的明确，这可能会使其他用户感到困惑。\n\n示例：\n\n    type byte struct{}\n    type string interface{}\n\n`byte` 和 `string` 类型与内置类型别名冲突。 因此，这些将高亮显示。\n考虑重命名此类声明。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoReservedWordUsedAsName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnreachableCode",
                "shortDescription": {
                  "text": "不可到达的代码"
                },
                "fullDescription": {
                  "text": "报告永远不会执行的代码，因为没有来自程序其他地方的控制流路径。 示例： 'func _() int {\n print(1)\n return 2\n println() // 此代码无法到达\n return 0\n}'",
                  "markdown": "报告永远不会执行的代码，因为没有来自程序其他地方的控制流路径。\n\n示例：\n\n    func _() int {\n     print(1)\n     return 2\n     println() // 此代码无法到达\n     return 0\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnreachableCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/控制流问题",
                      "index": 59,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoVetLostCancel",
                "shortDescription": {
                  "text": "'context.CancelFunc' 未被调用"
                },
                "fullDescription": {
                  "text": "报告未调用由 'context.WithCancel' 和类似的函数返回 'cancel' 函数的执行路径。 'WithCancel'、'WithDeadline' 和 'WithTimeout' 函数接收一个 'Context'（父项）并返回一个派生的 'Context'（子项）和一个 'CancelFunc'。 调用 'CancelFunc' 可以取消子项及其子项，删除父项对该子项的引用，并停止任何 相关的定时器。 如果不调用 CancelFunc，就会泄漏子项和其子项，直到父项被取消或定时器启动。 有关 'context' 软件包的详细信息，请参阅 go.dev 上的 Package context。 示例： 'func _(ctx context.Context, cancel func()) {\n var ctx2 context.Context\n ctx2, cancel = context.WithCancel(ctx)\n _ = ctx2\n}'",
                  "markdown": "报告未调用由 `context.WithCancel` 和类似的函数返回 `cancel` 函数的执行路径。\n\n`WithCancel`、`WithDeadline` 和 `WithTimeout` 函数接收一个 `Context`（父项）并返回一个派生的 `Context`（子项）和一个 `CancelFunc`。\n调用 `CancelFunc` 可以取消子项及其子项，删除父项对该子项的引用，并停止任何\n相关的定时器。\n如果不调用 CancelFunc，就会泄漏子项和其子项，直到父项被取消或定时器启动。\n\n有关 `context` 软件包的详细信息，请参阅 [go.dev 上的 Package context](https://pkg.go.dev/context)。\n\n示例：\n\n    func _(ctx context.Context, cancel func()) {\n     var ctx2 context.Context\n     ctx2, cancel = context.WithCancel(ctx)\n     _ = ctx2\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVetLostCancel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoRedundantBlankArgInRange",
                "shortDescription": {
                  "text": "范围中存在冗余空白实参"
                },
                "fullDescription": {
                  "text": "报告 range 循环中的可选空白变量。 当您使用 'range' 循环迭代切片时，每个迭代返回两个值。 第一个值是索引号，第二个值是该索引处元素的副本。 如果不需要第二个值，则可以跳过此元素而不使用空标识符。 示例： 'for a, _ = range v {} // `for a, _ =` 与 `for a =` 相同' 要移除空标识符，您可以使用删除空白实参快速修复。 应用快速修复后，代码如下所示： 'for a = range v {}'",
                  "markdown": "报告 range 循环中的可选空白变量。\n\n当您使用 `range` 循环迭代切片时，每个迭代返回两个值。 第一个值是索引号，第二个值是该索引处元素的副本。 如果不需要第二个值，则可以跳过此元素而不使用空标识符。\n\n示例：\n\n    for a, _ = range v {} // `for a, _ =` 与 `for a =` 相同\n\n要移除空标识符，您可以使用**删除空白实参**快速修复。 应用快速修复后，代码如下所示：\n\n    for a = range v {}\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoRedundantBlankArgInRange",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoCommentStart",
                "shortDescription": {
                  "text": "导出的元素的注释以不正确的名称开头"
                },
                "fullDescription": {
                  "text": "报告不以导出元素名称开头的注释。 根据 github.com/golang 上的 Comment Sentences，将导出元素的名称放在评论的开头是一个约定。 示例： '// 表示运行命令的请求。\ntype Request struct {}' 注释以结构描述开头，而不是结构名称。 为了遵守约定规则，您可以应用 向注释中添加前缀 快速修复。 应用快速修复后，注释如下所示： // Request 表示运行命令的请求。\ntype Request struct {} // 更好",
                  "markdown": "报告不以导出元素名称开头的注释。\n\n根据 [github.com/golang 上的 Comment Sentences](https://github.com/golang/go/wiki/CodeReviewComments#comment-sentences)，将导出元素的名称放在评论的开头是一个约定。\n\n示例：\n\n    // 表示运行命令的请求。\n    type Request struct {}\n\n注释以结构描述开头，而不是结构名称。 为了遵守约定规则，您可以应用 **向注释中添加前缀** 快速修复。 应用快速修复后，注释如下所示：\n\n```\n// Request 表示运行命令的请求。\ntype Request struct {} // 更好\n```"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoCommentStart",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoEmptyDeclaration",
                "shortDescription": {
                  "text": "空声明"
                },
                "fullDescription": {
                  "text": "报告空声明。 空声明无效。 移除它们可能会提高代码的可读性。 示例： 'func main() {\n const () // 空声明\n}' 您可以应用 删除空声明 快速修复来删除此声明。",
                  "markdown": "报告空声明。\n\n空声明无效。 移除它们可能会提高代码的可读性。\n\n示例：\n\n    func main() {\n     const () // 空声明\n    }\n\n您可以应用 **删除空声明** 快速修复来删除此声明。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoEmptyDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VgoUnusedDependency",
                "shortDescription": {
                  "text": "未使用的依赖项"
                },
                "fullDescription": {
                  "text": "报告未使用的依赖项。 对于当前 go.mod 文件中的每个依赖项，此检查会搜索所有 Go 文件中以依赖项名称开头的任何导入语句。 如果未找到此类导入，则该依赖项被视为未使用。 此检查等效于 'go mod why' 命令。 该检查会处理 'require' 和 'replace' 指令。 带有 '// indirect' 注释的 'require' 指令也会被处理。 在以下情况下，该检查可能无法准确确定是否未使用替换或间接要求的依赖项： 已启用 vendoring 模式 未下载某些依赖项",
                  "markdown": "报告未使用的依赖项。\n\n对于当前 *go.mod* 文件中的每个依赖项，此检查会搜索所有 Go 文件中以依赖项名称开头的任何导入语句。\n如果未找到此类导入，则该依赖项被视为未使用。\n此检查等效于 [`go mod why` 命令](https://go.dev/ref/mod#go-mod-why)。\n\n该检查会处理 `require` 和 `replace` 指令。\n带有 `// indirect` 注释的 `require` 指令也会被处理。\n\n在以下情况下，该检查可能无法准确确定是否未使用替换或间接要求的依赖项：\n\n* 已启用 vendoring 模式\n* 未下载某些依赖项"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VgoUnusedDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go modules/声明冗余",
                      "index": 64,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoStandardMethods",
                "shortDescription": {
                  "text": "已知函数名称采用非标准签名"
                },
                "fullDescription": {
                  "text": "在以下情况下报告具有特定名称的方法： 方法的名称与标准库中几个众所周知的接口方法的名称相匹配 签名与对应接口方法的签名不匹配 此类方法可能表明接收器类型旨在满足标准库中的接口，但由于方法签名中的错误而无法满足。 示例： 'type MyReader []byte\n\nfunc (r MyReader) ReadByte(data []byte) (byte, error) {\n}' 这种用法很可疑，因为它看起来像是试图实现 'io.ByteReader'，但签名不正确。 下面这样写比较合适： 'type MyReader []byte\n\nfunc (r MyReader) ReadByte() (byte, error) {\n}'",
                  "markdown": "在以下情况下报告具有特定名称的方法：\n\n* 方法的名称与标准库中几个众所周知的接口方法的名称相匹配\n* 签名与对应接口方法的签名不匹配\n\n此类方法可能表明接收器类型旨在满足标准库中的接口，但由于方法签名中的错误而无法满足。\n\n示例：\n\n    type MyReader []byte\n\n    func (r MyReader) ReadByte(data []byte) (byte, error) {\n    }\n\n这种用法很可疑，因为它看起来像是试图实现 `io.ByteReader`，但签名不正确。\n下面这样写比较合适：\n\n    type MyReader []byte\n\n    func (r MyReader) ReadByte() (byte, error) {\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoStandardMethods",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoNameStartsWithPackageName",
                "shortDescription": {
                  "text": "名称以软件包名称开头"
                },
                "fullDescription": {
                  "text": "报告以软件包名称开头的导出名称。 此检查不会在 'main' 软件包中报告此类名称。 示例： 'package myPackage\n\nfunc MyPackageGetIP() {\n\n}' 'MyPackageGetIP' 名称将高亮显示，因为它以软件包名称开头。 根据 github.com/golang 上的 Package Names，对软件包中名称的所有引用都将使用软件包名称完成，因此可以在标识符中省略该名称。 例如，如果您在软件包 'foo' 中，则不需要类型 'FooFile'，客户端将其写为 'foo.FooFile'。 相反，我们将类型命名为 'File'，客户端将其写为 'foo.File'。",
                  "markdown": "报告以软件包名称开头的导出名称。 此检查不会在 `main` 软件包中报告此类名称。\n\n示例：\n\n    package myPackage\n\n    func MyPackageGetIP() {\n\n    }\n\n`MyPackageGetIP` 名称将高亮显示，因为它以软件包名称开头。\n\n根据 [github.com/golang 上的 Package Names](https://github.com/golang/go/wiki/CodeReviewComments#package-names)，对软件包中名称的所有引用都将使用软件包名称完成，因此可以在标识符中省略该名称。\n例如，如果您在软件包 `foo` 中，则不需要类型 `FooFile`，客户端将其写为 `foo.FooFile`。 相反，我们将类型命名为 `File`，客户端将其写为 `foo.File`。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoNameStartsWithPackageName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoInterfaceToAny",
                "shortDescription": {
                  "text": "'interface{}' 作为类型的用法"
                },
                "fullDescription": {
                  "text": "报告空接口作为类型或类型约束的用法。 空接口表示所有类型的集合。 Go 1.18 为 'interface{}' 引入了更显式的别名 'any'，它在各个方面都等同于 'interface{}'。 如果将空接口用作类型或类型约束，则会触发检查。 空接口和单独嵌入其他空接口的接口的别名不会触发检查。 考虑使用更显式的别名 'any'。",
                  "markdown": "报告空接口作为类型或类型约束的用法。\n\n\n空接口表示所有类型的集合。\nGo 1.18 为 `interface{}` 引入了更显式的别名 `any`，它在各个方面都等同于 `interface{}`。\n\n如果将空接口用作类型或类型约束，则会触发检查。\n空接口和单独嵌入其他空接口的接口的别名不会触发检查。\n\n考虑使用更显式的别名 `any`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoInterfaceToAny",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnsortedImport",
                "shortDescription": {
                  "text": "未排序的导入"
                },
                "fullDescription": {
                  "text": "报告未排序的导入。 所有的 Go 程序都需要以同样的方式进行格式化，格式化规则由 gofmt 工具固定。 这些规则要求对导入进行分类。 错误排序的实例： 'import (\n \"net\"\n \"errors\"\n \"fmt\"\n)' 您可以应用 import 排序快速修复来解决排序问题。 应用快速修复后，排序如下所示： 'import (\n \"errors\"\n \"fmt\"\n \"net\"\n)'",
                  "markdown": "报告未排序的导入。\n\n所有的 Go 程序都需要以同样的方式进行格式化，格式化规则由 [gofmt](https://pkg.go.dev/cmd/gofmt) 工具固定。 这些规则要求对导入进行分类。\n\n错误排序的实例：\n\n    import (\n     \"net\"\n     \"errors\"\n     \"fmt\"\n    )\n\n您可以应用 **import 排序**快速修复来解决排序问题。 应用快速修复后，排序如下所示：\n\n    import (\n     \"errors\"\n     \"fmt\"\n     \"net\"\n    )\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoUnsortedImport",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoTypeAssertionOnErrors",
                "shortDescription": {
                  "text": "错误的类型断言在包装的错误上失败"
                },
                "fullDescription": {
                  "text": "报告错误的类型断言或类型 switch，例如 'err.(*MyErr)' 或 'switch err.(type)'，并建议改用 'errors.As'。 从 Go 1.13 开始，可以使用 'fmt.Errorf' 函数和 '%w' 动词来包装错误。 因此，错误的类型断言或类型 switch 会在已包装错误上失败。 检查特定错误类型的首选方式是使用标准库中的 errors.As 函数，因为此函数会在检查特定错误类型时遍历包装错误链。 有关 'errors.As' 的详细信息，请参阅 working with Errors in Go 1.13。 该快速修复会将错误的类型断言和类型 switch 替换为对 'errors.As' 的调用。 示例 'errFoo, ok := err.(*ErrFoo)\n\n\nswitch err.(type) {\n  case *ErrBar:\n}' 在应用快速修复后： 'var errFoo *ErrFoo\nok := errors.As(err, &errFoo)\n\nvar errBar *ErrBar\nswitch {\ncase errors.As(err, &errBar):\n}'",
                  "markdown": "报告错误的类型断言或类型 switch，例如 `err.(*MyErr)` 或 `switch err.(type)`，并建议改用 `errors.As`。\n\n从 Go 1.13 开始，可以使用 `fmt.Errorf` 函数和 `%w` 动词来包装错误。 因此，错误的类型断言或类型 switch 会在已包装错误上失败。 检查特定错误类型的首选方式是使用标准库中的 [errors.As](https://pkg.go.dev/errors#As) 函数，因为此函数会在检查特定错误类型时遍历包装错误链。\n\n有关 `errors.As` 的详细信息，请参阅 [working with Errors in Go 1.13](https://go.dev/blog/go1.13-errors)。\n\n该快速修复会将错误的类型断言和类型 switch 替换为对 `errors.As` 的调用。\n\n**示例**\n\n\n    errFoo, ok := err.(*ErrFoo)\n\n\n    switch err.(type) {\n      case *ErrBar:\n    }\n\n在应用快速修复后：\n\n\n    var errFoo *ErrFoo\n    ok := errors.As(err, &errFoo)\n\n    var errBar *ErrBar\n    switch {\n    case errors.As(err, &errBar):\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoTypeAssertionOnErrors",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoContextTodo",
                "shortDescription": {
                  "text": "context.TODO() 的用法"
                },
                "fullDescription": {
                  "text": "报告 'context.TODO()' 的用法。 根据 pkg.go.dev 上的文档，当不清楚使用什么 'Context' 时，或者 'Context' 尚不可用时，需要使用 'context.TODO'。 'Context' 可能会因为周围函数尚未扩展为接受 'Context' 形参而不可用。 请注意，它是一个临时占位符，您将来必须将其更改为更有意义的上下文（例如，'context.Background()'）。",
                  "markdown": "报告 `context.TODO()` 的用法。\n\n根据 [pkg.go.dev 上的文档](https://pkg.go.dev/context#TODO)，当不清楚使用什么 `Context` 时，或者 `Context` 尚不可用时，需要使用 `context.TODO`。\n`Context` 可能会因为周围函数尚未扩展为接受 `Context` 形参而不可用。\n\n请注意，它是一个临时占位符，您将来必须将其更改为更有意义的上下文（例如，`context.Background()`）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoContextTodo",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoExportedOwnDeclaration",
                "shortDescription": {
                  "text": "导出的元素应有自己的声明"
                },
                "fullDescription": {
                  "text": "报告在声明的逗号分隔列表中导出的变量或常量。 示例： 'const C1, C3, C2, C44, C9, C11, C6 = 1, 2, 3, 1, 3, 2, 1' 以这种方式声明使得很难知道每个常量的值。 为了使此声明更易于阅读，您可以应用 提取到自己的声明 快速修复。 当快速修复应用于每个常量时，声明如下所示： 'const (\n C3  = 2\n C2  = 3\n C44 = 1\n C9  = 3\n C11 = 2\n C6  = 1\n C1  = 1\n)'",
                  "markdown": "报告在声明的逗号分隔列表中导出的变量或常量。\n\n示例：\n\n    const C1, C3, C2, C44, C9, C11, C6 = 1, 2, 3, 1, 3, 2, 1\n\n以这种方式声明使得很难知道每个常量的值。 为了使此声明更易于阅读，您可以应用 **提取到自己的声明** 快速修复。 当快速修复应用于每个常量时，声明如下所示：\n\n    const (\n     C3  = 2\n     C2  = 3\n     C44 = 1\n     C9  = 3\n     C11 = 2\n     C6  = 1\n     C1  = 1\n    )\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoExportedOwnDeclaration",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDivisionByZero",
                "shortDescription": {
                  "text": "除以零"
                },
                "fullDescription": {
                  "text": "报告除以 0。 除以零将导致运行时出现 panic。 示例： 's := 3 / 0'",
                  "markdown": "报告除以 0。\n\n除以零将导致运行时出现 panic。\n\n示例：\n\n    s := 3 / 0\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoDivisionByZero",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoMixedReceiverTypes",
                "shortDescription": {
                  "text": "混合值和指针接收器"
                },
                "fullDescription": {
                  "text": "报告具有使用混合类型（值和指针接收器）的方法的结构。 Go 文档不推荐此类用法。 有关详情，请参阅 Go 常见问题解答中的 Should I define methods on values or pointers?。 示例： 'type S struct{\n}\n\nfunc (s *S) fun() {}\nfunc (s S) fun2() {}'",
                  "markdown": "报告具有使用混合类型（值和指针接收器）的方法的结构。 Go 文档不推荐此类用法。\n\n有关详情，请参阅 Go 常见问题解答中的 [Should I define methods on values or pointers?](https://go.dev/doc/faq#methods_on_values_or_pointers)。\n\n示例：\n\n    type S struct{\n    }\n\n    func (s *S) fun() {}\n    func (s S) fun2() {}\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoMixedReceiverTypes",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoVetAtomic",
                "shortDescription": {
                  "text": "不正确的 'sync/atomic' 软件包用法"
                },
                "fullDescription": {
                  "text": "报告 'x = atomic.AddUint64(&x, 1)' 形式的赋值语句。 此类操作为非原子操作，这是 'sync/atomic' API 中的常见误用。 要使其原子化，请删除赋值并直接调用它，如 'atomic.AddUint64(& x, 1)'。 在这种情况下，'x' 的值由地址以原子方式更新。 示例： 'import (\n \"sync/atomic\"\n)\n\ntype Counter uint64\n\nfunc AtomicTests() {\n x := uint64(1)\n x = atomic.AddUint64(&x, 1)         // 错误 “直接赋值给原子值”\n _, x = 10, atomic.AddUint64(&x, 1)  // 错误 “直接赋值给原子值”\n x, _ = atomic.AddUint64(&x, 1), 10  // 错误 “直接赋值给原子值”\n}'",
                  "markdown": "报告 `x = atomic.AddUint64(&x, 1)` 形式的赋值语句。\n\n此类操作为非原子操作，这是 ` sync/atomic ` API 中的常见误用。 要使其原子化，请删除赋值并直接调用它，如 ` atomic.AddUint64(& x, 1) `。 在这种情况下，`x` 的值由地址以原子方式更新。\n\n示例：\n\n    import (\n     \"sync/atomic\"\n    )\n\n    type Counter uint64\n\n    func AtomicTests() {\n     x := uint64(1)\n     x = atomic.AddUint64(&x, 1)         // 错误 \"直接赋值给原子值\"\n     _, x = 10, atomic.AddUint64(&x, 1)  // 错误 \"直接赋值给原子值\"\n     x, _ = atomic.AddUint64(&x, 1), 10  // 错误 \"直接赋值给原子值\"\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVetAtomic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoVetUnmarshal",
                "shortDescription": {
                  "text": "使用错误的实参调用了 'Unmarshal'"
                },
                "fullDescription": {
                  "text": "如果传递以存储结果的实参不是指针或接口，则报告对 'json.Unmarshal' 和类似函数的调用。 这些调用将失败并返回错误。 有关 'Unmarshal' 的详细信息，请参阅 go.dev 上的 func Unmarshal。 示例： 'var animals []Animal\nerr := json.Unmarshal(jsonData, animals) // 总是返回错误' 在应用在前面追加 '&'快速修复后： 'var animals []Animal\nerr := json.Unmarshal(jsonData, &animals)'",
                  "markdown": "如果传递以存储结果的实参不是指针或接口，则报告对 `json.Unmarshal` 和类似函数的调用。\n\n这些调用将失败并返回错误。\n\n有关 `Unmarshal` 的详细信息，请参阅 [go.dev 上的 func Unmarshal](https://pkg.go.dev/encoding/json#Unmarshal)。\n\n示例：\n\n    var animals []Animal\n    err := json.Unmarshal(jsonData, animals) // 总是返回错误\n\n在应用**在前面追加 '\\&'**快速修复后：\n\n    var animals []Animal\n    err := json.Unmarshal(jsonData, &animals)\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVetUnmarshal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnnecessarilyExportedIdentifiers",
                "shortDescription": {
                  "text": "不必要地导出了标识符"
                },
                "fullDescription": {
                  "text": "报告仅在定义它的软件包中使用，而在其他软件包中不使用的导出标识符。 使它们导出是冗余的，并且可能使软件包的 API 混乱。",
                  "markdown": "报告仅在定义它的软件包中使用，而在其他软件包中不使用的导出标识符。\n\n使它们导出是冗余的，并且可能使软件包的 API 混乱。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoUnnecessarilyExportedIdentifiers",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoIrregularIota",
                "shortDescription": {
                  "text": "'iota' 的非常规用法"
                },
                "fullDescription": {
                  "text": "报告常量声明内 'iota' 的无规律用法。 'iota' 标识符会针对每个常量声明重置，并针对每个常量规范自动递增。 在一个常量规范内，标识符会保留其值。 显式引用 'iota' 不会重置计数器。 有关详情，请参阅 Go 规范中的 Iota。 如果两个常量规范具有文本相同的表达式列表，其中至少包含一个对 'iota' 的引用，并且两个常量规范之间只有常量规范，而没有表达式列表，则会触发此检查。 考虑省略冗余的表达式列表，或者每次都写出表达式列表。 示例： 'const (\n  a = iota  // 0\n  b         // 1\n  c = iota  // 2\n)' 由于 'c' 的定义中的 'iota' 冗余，触发检查。 示例： 'const (\n  a, aa = iota, iota       // 0, 0\n  b, bb                    // 1, 1\n  c, cc = iota + 40, iota  // 42, 2\n)' 不会触发检查，因为没有一个表达式列表是冗余的。",
                  "markdown": "报告常量声明内 `iota` 的无规律用法。\n\n`iota` 标识符会针对每个常量声明重置，并针对每个常量规范自动递增。\n在一个常量规范内，标识符会保留其值。 显式引用 `iota` 不会重置计数器。\n\n有关详情，请参阅 Go 规范中的 [Iota](https://go.dev/ref/spec#Iota)。\n\n如果两个常量规范具有文本相同的表达式列表，其中至少包含一个对 `iota` 的引用，并且两个常量规范之间只有常量规范，而没有表达式列表，则会触发此检查。\n\n考虑省略冗余的表达式列表，或者每次都写出表达式列表。\n\n示例：\n\n    const (\n      a = iota  // 0\n      b         // 1\n      c = iota  // 2\n    )\n\n由于 `c` 的定义中的 `iota` 冗余，触发检查。\n\n示例：\n\n    const (\n      a, aa = iota, iota       // 0, 0\n      b, bb                    // 1, 1\n      c, cc = iota + 40, iota  // 42, 2\n    )\n\n不会触发检查，因为没有一个表达式列表是冗余的。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoIrregularIota",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoVetStructTag",
                "shortDescription": {
                  "text": "结构标记的格式错误"
                },
                "fullDescription": {
                  "text": "报告不符合 Go 结构标签约定 的结构标签。 根据这些约定，标记字符串是可选的空格分隔的'键:\"值\"' 对的串联。 每个键为'空格 (U+0020 ' ')'、'引号 (U+0022 '\"')' 和 '冒号 (U+003A ':')' 以外的非控制字符组成的非空字符串。 每个值都使用 'U+0022 '\"'' 字符和 Go 字符串文字语法引用。 此外，检查还会检查带有标签的字段是否已导出。 有效标签示例： 'type Example struct {\n  Field int `json:\"field\" xml:\"demo\"`\n}'",
                  "markdown": "报告不符合 [Go 结构标签约定](https://pkg.go.dev/reflect#StructTag) 的结构标签。\n\n根据这些约定，标记字符串是可选的空格分隔的`键:\"值\"` 对的串联。 每个键为`空格 (U+0020 ' ')`、`引号 (U+0022 '\"')` 和 `冒号 (U+003A ':')` 以外的非控制字符组成的非空字符串。 每个值都使用 `U+0022 '\"'` 字符和 Go 字符串文字语法引用。\n\n此外，检查还会检查带有标签的字段是否已导出。\n\n有效标签示例：\n\n    type Example struct {\n      Field int `json:\"field\" xml:\"demo\"`\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVetStructTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoRedundantTypeDeclInCompositeLit",
                "shortDescription": {
                  "text": "复合文字中存在冗余类型"
                },
                "fullDescription": {
                  "text": "报告复合文字中的冗余类型声明。 示例： 'nums := [][]int{[]int{1}, []int{2}}' 这是一个 'int' 类型的切片的切片。 在这种情况下，可以使用较短的定义。 您可以手动修复此代码，也可以使用删除冗余类型快速修复。 应用快速修复后，代码如下所示： 'nums := [][]int{{1},{2}}' 有关复合文字的详细信息，请参阅 go.dev 上的 Go Language Specification: Composite Literals。",
                  "markdown": "报告复合文字中的冗余类型声明。\n\n示例：\n\n    nums := [][]int{[]int{1}, []int{2}}\n\n这是一个 `int` 类型的切片的切片。 在这种情况下，可以使用较短的定义。 您可以手动修复此代码，也可以使用**删除冗余类型**快速修复。 应用快速修复后，代码如下所示：\n\n    nums := [][]int{{1},{2}}\n\n有关复合文字的详细信息，请参阅 [go.dev 上的 Go Language Specification: Composite Literals](https://go.dev/ref/spec#Composite_literals)。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoRedundantTypeDeclInCompositeLit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VgoDependencyVersionRetracted",
                "shortDescription": {
                  "text": "已撤回的依赖项版本"
                },
                "fullDescription": {
                  "text": "报告已撤回的依赖项版本。 用户必须避免使用已撤回的版本，因为它们可能包含漏洞、重大 bug 或其他可能有害的问题。 撤回原因在提供的撤回通知中有说明。 要解决问题，请将依赖项升级到未撤回的最新版本。 请注意，撤回并不妨碍您使用已撤回的版本。 可用的快速修复可能会建议更新到最新版本或阅读撤回通知。 有关详情，请参阅 go.dev 上的 'retract' 指令。 撤回数据由命令 go list -m -u 提供。",
                  "markdown": "报告已撤回的依赖项版本。\n\n\n用户必须避免使用已撤回的版本，因为它们可能包含漏洞、重大 bug 或其他可能有害的问题。\n撤回原因在提供的撤回通知中有说明。\n\n\n要解决问题，请将依赖项升级到未撤回的最新版本。\n请注意，撤回并不妨碍您使用已撤回的版本。\n\n\n可用的快速修复可能会建议更新到最新版本或阅读撤回通知。\n\n\n有关详情，请参阅 [go.dev 上的 `retract` 指令](https://go.dev/ref/mod#go-mod-file-retract)。  \n\n撤回数据由命令 [go list -m -u](https://go.dev/ref/mod#go-list-m) 提供。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VgoDependencyVersionRetracted",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go modules/依赖项问题(go list -m -u)",
                      "index": 68,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VgoDependencyUpdateAvailable",
                "shortDescription": {
                  "text": "有可用的依赖项更新"
                },
                "fullDescription": {
                  "text": "建议将过时的 go.mod 依赖项更新到最新版本。 忽略已撤回的版本。 有关已撤回版本的详细信息，请参阅 go.dev 上的 'retract' 指令。 最新版本数据由命令 go list -m -u 提供。",
                  "markdown": "建议将过时的 *go.mod* 依赖项更新到最新版本。 忽略已撤回的版本。\n\n有关已撤回版本的详细信息，请参阅 [go.dev 上的 `retract` 指令](https://go.dev/ref/mod#go-mod-file-retract)。  \n\n最新版本数据由命令 [go list -m -u](https://go.dev/ref/mod#go-list-m) 提供。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "VgoDependencyUpdateAvailable",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go modules/依赖项问题(go list -m -u)",
                      "index": 68,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoRedundantParens",
                "shortDescription": {
                  "text": "冗余括号"
                },
                "fullDescription": {
                  "text": "报告表达式和类型中冗余的圆括号。 示例： 'func _(x (int), y ((string))) {\n}\nfunc _() {\n _ = (1 + 1)\n _ = (((1 + 1)))\n _ = (((1 + 1))) + (((2 + 2)))\n}' 在应用去除圆括号快速修复后： 'func _(x int, y string) {\n}\nfunc _() {\n _ = 1 + 1\n _ = 1 + 1\n _ = (1 + 1) + (2 + 2)\n}'",
                  "markdown": "报告表达式和类型中冗余的圆括号。\n\n示例：\n\n    func _(x (int), y ((string))) {\n    }\n    func _() {\n     _ = (1 + 1)\n     _ = (((1 + 1)))\n     _ = (((1 + 1))) + (((2 + 2)))\n    }\n\n在应用**去除圆括号**快速修复后：\n\n    func _(x int, y string) {\n    }\n    func _() {\n     _ = 1 + 1\n     _ = 1 + 1\n     _ = (1 + 1) + (2 + 2)\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoRedundantParens",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnusedParameter",
                "shortDescription": {
                  "text": "未使用的形参"
                },
                "fullDescription": {
                  "text": "报告未使用的函数形参。 'func main() {\n printAll(\n  42,\n  \"bird\",\n )\n}\n\nfunc printAll(\n i int,\n s string,\n) {\n fmt.Println(i)\n}' 我们调用 printAll 函数，将 '42' 和 'bird' 作为实参传递。 printAll 函数接受两个形参 'int' 和 'string'，但是仅使用第一个形参。 因此，'s string' 将显示为灰色。",
                  "markdown": "报告未使用的函数形参。\n\n    func main() {\n     printAll(\n      42,\n      \"bird\",\n     )\n    }\n\n    func printAll(\n     i int,\n     s string,\n    ) {\n     fmt.Println(i)\n    }\n\n我们调用 **printAll** 函数，将 `42` 和 `bird` 作为实参传递。 **printAll** 函数接受两个形参 `int` 和 `string`，但是仅使用第一个形参。 因此，`s string` 将显示为灰色。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnusedParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDisabledGopathIndexing",
                "shortDescription": {
                  "text": "已禁用 GOPATH 索引"
                },
                "fullDescription": {
                  "text": "报告禁用的 GOPATH 索引，可能会阻止参考正确解决代码引用。 GOPATH 存储了您的代码库和所有开发所需的文件。 此外，它还包括您下载和安装的软件包。 如果禁用 GOPATH 索引，将仅对项目和 vendor 软件包编制索引。 这样可以提升整体性能，但无法使用 GOPATH 中的软件包。",
                  "markdown": "报告禁用的 GOPATH 索引，可能会阻止参考正确解决代码引用。\n\nGOPATH 存储了您的代码库和所有开发所需的文件。 此外，它还包括您下载和安装的软件包。 如果禁用 GOPATH 索引，将仅对项目和 vendor 软件包编制索引。 这样可以提升整体性能，但无法使用 GOPATH 中的软件包。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoDisabledGopathIndexing",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoLeadingWhitespaceInDirectiveComment",
                "shortDescription": {
                  "text": "指令注释中的前导空格"
                },
                "fullDescription": {
                  "text": "报告注释中 Go 指令之前的前导空格。 如果 '//' 和 Go 指令之间有空格，将无法识别 Go 指令。 该快速修复会移除 Go 指令之前的前导空格。 示例： '//  go:embed file.txt\nvar File string' 在应用快速修复后： '//go:embed file.txt\nvar File string'",
                  "markdown": "报告注释中 Go 指令之前的前导空格。\n\n如果 `//` 和 Go 指令之间有空格，将无法识别 Go 指令。\n\n该快速修复会移除 Go 指令之前的前导空格。\n\n**示例：**\n\n\n    //  go:embed file.txt\n    var File string\n\n在应用快速修复后：\n\n\n    //go:embed file.txt\n    var File string\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoLeadingWhitespaceInDirectiveComment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoShift",
                "shortDescription": {
                  "text": "已超出 shift 表达式"
                },
                "fullDescription": {
                  "text": "报告等于或超过整数宽度的移位表达式。 在此类表达式中，左操作数的所有位都被移位，得到一个常数值。 常量值意味着移位偏移不正确或移位表达式是冗余的。 示例： 'func shift(i int8) {\n    fmt.Println(i << 8) // 始终打印 0\n  }'",
                  "markdown": "报告等于或超过整数宽度的移位表达式。\n\n在此类表达式中，左操作数的所有位都被移位，得到一个常数值。 常量值意味着移位偏移不正确或移位表达式是冗余的。\n\n示例：\n\n\n      func shift(i int8) {\n        fmt.Println(i << 8) // 始终打印 0\n      }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoShift",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoSelfAssignment",
                "shortDescription": {
                  "text": "自赋值"
                },
                "fullDescription": {
                  "text": "报告分配给自身的表达式。 这种赋值没有任何作用，移除它们可能会提高代码的可读性。 示例： 'func importedVarSelfAssignment() {\n http.ErrNotSupported = http.ErrNotSupported\n}'",
                  "markdown": "报告分配给自身的表达式。\n\n这种赋值没有任何作用，移除它们可能会提高代码的可读性。\n\n示例：\n\n    func importedVarSelfAssignment() {\n     http.ErrNotSupported = http.ErrNotSupported\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoSelfAssignment",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoStructInitializationWithoutFieldNames",
                "shortDescription": {
                  "text": "结构初始化没有字段名称"
                },
                "fullDescription": {
                  "text": "报告未指定字段名称而初始化的结构。 默认情况下，仅当您使用在不同软件包中定义的类型时，检查才可用。 初始化结构时，建议明确指出字段名称，以确保在这些字段的顺序或字段名称发生更改的情况下，它们还可以正确地继续寻址。 示例： '_ = io.LimitedReader{nil, 10}' 'LimitedReader' 初始化将突出显示，因为缺少结构字段的显式名称。 您可以对初始化结构应用添加键并删除零值快速修复。 应用快速修复后，代码如下所示： '_ = io.LimitedReader{N: 10}' 检查有以下选项： 报告当前软件包中定义的类型：报告在同一个软件包中声明和初始化结构体的情况。 请参考下面的示例。 'd := struct {\n  c string\n }{ \"dsd \"}' 报告无类型的结构文字：当类型（结构或接口）被省略时报告没有名称的字段。 以下示例显示了省略类型的情况。 '_ = []io.LimitedReader{\n {nil, 10},\n {nil, 20},\n }' 在下面的示例中，该类型存在，但是冗余的。 '_ = []io.LimitedReader{\n io.LimitedReader{nil, 10},\n io.LimitedReader{nil, 20},\n}'",
                  "markdown": "报告未指定字段名称而初始化的结构。 默认情况下，仅当您使用在不同软件包中定义的类型时，检查才可用。\n\n初始化结构时，建议明确指出字段名称，以确保在这些字段的顺序或字段名称发生更改的情况下，它们还可以正确地继续寻址。\n\n示例：\n\n    _ = io.LimitedReader{nil, 10}\n\n`LimitedReader` 初始化将突出显示，因为缺少结构字段的显式名称。\n您可以对初始化结构应用**添加键并删除零值**快速修复。 应用快速修复后，代码如下所示：\n\n    _ = io.LimitedReader{N: 10}\n\n检查有以下选项：\n\n* **报告当前软件包中定义的类型**：报告在同一个软件包中声明和初始化结构体的情况。\n  请参考下面的示例。\n\n      d := struct {\n        c string\n       }{ \"dsd \"}\n\n* **报告无类型的结构文字**：当类型（结构或接口）被省略时报告没有名称的字段。\n  以下示例显示了省略类型的情况。\n\n      _ = []io.LimitedReader{\n       {nil, 10},\n       {nil, 20},\n       }\n\n  在下面的示例中，该类型存在，但是冗余的。\n\n      _ = []io.LimitedReader{\n       io.LimitedReader{nil, 10},\n       io.LimitedReader{nil, 20},\n      }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoStructInitializationWithoutFieldNames",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VgoMigrateFromReplacesToWorkspace",
                "shortDescription": {
                  "text": "可以迁移到 Go 工作区"
                },
                "fullDescription": {
                  "text": "使用 'replace' 指令生成 'go.work' 文件。 Go 工作区是 Go 1.18 中引入的一项功能，允许同时在多个模块上工作。 工作区是指向本地目录的 'replace' 指令的现代替代方案。 工作区中的所有模块都具有相同的依赖项集合，从而使配置更简单、更可靠，并且扫描项目结构所需的 'go list' 调用更少。 此检查的修正会生成一个新的 'go.work' 文件，但不会更改现有文件。 默认情况下，会使用 'warning' 严重性。 如果生成的工作区包括原始 'go.mod' 中未替换的 Go 模块，则不会显示任何警告，因为迁移可能会产生副作用。 但是，您仍然可以手动运行修正。 有关工作区的详细信息，请参阅 Go 模块引用。 有关 Go 工作区介绍，请参阅 Tutorial: Getting started with multi-module workspaces。",
                  "markdown": "使用 'replace' 指令生成 'go.work' 文件。\n\n\nGo 工作区是 Go 1.18 中引入的一项功能，允许同时在多个模块上工作。  \n\n工作区是指向本地目录的 'replace' 指令的现代替代方案。  \n\n工作区中的所有模块都具有相同的依赖项集合，从而使配置更简单、更可靠，并且扫描项目结构所需的 'go list' 调用更少。  \n\n此检查的修正会生成一个新的 'go.work' 文件，但不会更改现有文件。\n\n\n默认情况下，会使用 'warning' 严重性。 如果生成的工作区包括原始 'go.mod' 中未替换的 Go 模块，则不会显示任何警告，因为迁移可能会产生副作用。 但是，您仍然可以手动运行修正。\n\n\n有关工作区的详细信息，请参阅 [Go 模块引用](https://go.dev/ref/mod#workspaces)。  \n\n有关 Go 工作区介绍，请参阅 [Tutorial: Getting started with multi-module workspaces](https://go.dev/doc/tutorial/workspaces)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VgoMigrateFromReplacesToWorkspace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go modules/常规",
                      "index": 70,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoRedundantTrueInForCondition",
                "shortDescription": {
                  "text": "for 循环条件中存在冗余的 'true'"
                },
                "fullDescription": {
                  "text": "报告 'for' 循环条件中的冗余 'true' 文字。 在 Go 中，'for' 循环具有一个带有隐式条件的形式。 这意味着您可以通过编写 'for { }' 来创建无限循环。 因此，在具有 'true' 条件 ('for true { }') 的情况下，'true' 会被视为冗余，可以省略。 有关 Go 中的 'for' 循环的详细信息，请参阅 go.dev 上的 For。 示例： 'for true {\n  println(\"ping\")\n}'",
                  "markdown": "报告 `for` 循环条件中的冗余 `true` 文字。\n\n在 Go 中，`for` 循环具有一个带有隐式条件的形式。\n这意味着您可以通过编写 `for { }` 来创建无限循环。\n因此，在具有 `true` 条件 (`for true { }`) 的情况下，`true` 会被视为冗余，可以省略。\n\n有关 Go 中的 `for` 循环的详细信息，请参阅 [go.dev 上的 For](https://go.dev/doc/effective_go#for)。\n\n示例：\n\n    for true {\n      println(\"ping\")\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoRedundantTrueInForCondition",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoSwitchMissingCasesForIotaConsts",
                "shortDescription": {
                  "text": "'switch' 中缺少 'iota' 常量的 'case' 语句"
                },
                "fullDescription": {
                  "text": "当 'iota' 标识符出现在 'const' 声明中时，报告 'switch' 语句中的未处理值。 要处理这些值，请考虑使用 'case' 或 'default' 子句。 Go 中的 'iota' 关键字会在 'const' 块中创建一个整数序列。 虽然 Go 编译器不需要处理所有 'iota' 值，但缺少其中一些值可能表示存在 bug。 有关 'iota' 的详细信息，请参阅 go.dev 上的 Iota。 示例： 'const (\n  a = iota\n  b\n  c = -5\n)\n\nfunc main() {\n  v := 5\n  switch v {\n  case a:\n    break;\n  case b:\n    break;\n  }\n}' IDE 会触发检查，因为 'c' 未由 'switch' 语句处理。 请注意，'c' 位于相同的 'const' 块中，即使它不使用 'iota'。 快速修复选项是为值创建 'case' 子句和创建 'default' 子句。 应用创建 'default' 子句快速修复后： 'const (\n  a = iota\n  b\n  c\n)\n\nfunc main() {\n  v := 5\n  switch v {\n  case a:\n    break;\n  default:\n  }\n}'",
                  "markdown": "当 `iota` 标识符出现在 `const` 声明中时，报告 `switch` 语句中的未处理值。 要处理这些值，请考虑使用 `case` 或 `default` 子句。\n\n\nGo 中的 `iota` 关键字会在 `const` 块中创建一个整数序列。 虽然 Go 编译器不需要处理所有 `iota` 值，但缺少其中一些值可能表示存在 bug。\n\n有关 `iota` 的详细信息，请参阅 [go.dev 上的 Iota](https://go.dev/ref/spec#Iota)。\n\n示例：\n\n    const (\n      a = iota\n      b\n      c = -5\n    )\n\n    func main() {\n      v := 5\n      switch v {\n      case a:\n        break;\n      case b:\n        break;\n      }\n    }\n\n\nIDE 会触发检查，因为 `c` 未由 `switch` 语句处理。 请注意，`c` 位于相同的 `const` 块中，即使它不使用 `iota`。\n\n快速修复选项是**为值创建 'case' 子句** 和**创建 'default' 子句** 。 应用**创建 'default' 子句**快速修复后：\n\n    const (\n      a = iota\n      b\n      c\n    )\n\n    func main() {\n      v := 5\n      switch v {\n      case a:\n        break;\n      default:\n      }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoSwitchMissingCasesForIotaConsts",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoTestName",
                "shortDescription": {
                  "text": "格式错误的测试函数名称"
                },
                "fullDescription": {
                  "text": "报告测试，基准和示例名称的格式错误。 根据 go.dev 上的软件包测试，名称必须遵循特殊约定，以便 go 工具可以正确处理它们。 示例： 'func Testfoo(*testing.T) {} // 'go' 工具不会运行这个测试' 在应用重命名为快速修复后： 'func TestFoo(*testing.T) {}'",
                  "markdown": "报告测试，基准和示例名称的格式错误。\n\n根据 [go.dev 上的软件包测试](https://pkg.go.dev/testing)，名称必须遵循特殊约定，以便 go 工具可以正确处理它们。\n\n示例：\n\n    func Testfoo(*testing.T) {} // 'go' 工具不会运行这个测试\n\n在应用**重命名为**快速修复后：\n\n    func TestFoo(*testing.T) {}\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoTestName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDfaInspectionRunner",
                "shortDescription": {
                  "text": "数据流分析"
                },
                "fullDescription": {
                  "text": "在此处撰写您的描述。 使用英语时，描述以第三人称单数动词开头，如 \"reports\"、\"detects\" 和 \"highlights\"；使用中文时，描述以动词开头，如“报告”、“检测”和“高亮显示”。 在第一句话中，简要说明此检查能帮助您检测什么。 请确保句子不要太长或太复杂。 第一句话必须放在一个专门的段落中，与正文的其余部分分开。 这将使描述更易于阅读。 请确保描述不是对检查标题的简单重复。 有关详情，请参阅 https://jetbrains.design/intellij/text/inspections/#descriptions。 此注释后的文本将仅显示在检查设置中。 要直接从描述中打开相关设置，请添加一个带有 `settings://$` 的链接，可以选择在后面加上 `?$` 来预选 UI 元素。",
                  "markdown": "在此处撰写您的描述。 使用英语时，描述以第三人称单数动词开头，如 \"reports\"、\"detects\" 和 \"highlights\"；使用中文时，描述以动词开头，如\"报告\"、\"检测\"和\"高亮显示\"。 在第一句话中，简要说明此检查能帮助您检测什么。 请确保句子不要太长或太复杂。\n\n\n第一句话必须放在一个专门的段落中，与正文的其余部分分开。 这将使描述更易于阅读。\n请确保描述不是对检查标题的简单重复。\n\n\n有关详情，请参阅 https://jetbrains.design/intellij/text/inspections/#descriptions。\n\n此注释后的文本将仅显示在检查设置中。\n\n要直接从描述中打开相关设置，请添加一个带有 \\`settings://$\\` 的链接，可以选择在后面加上 \\`?$\\` 来预选 UI 元素。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoDfaInspectionRunner",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/数据流分析(实验性)",
                      "index": 11,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoErrorStringFormat",
                "shortDescription": {
                  "text": "错误字符串不应大写或以标点结尾"
                },
                "fullDescription": {
                  "text": "报告错误字符串的格式问题。 示例： 'err := fmt.Errorf(\"Cannot read the file!\")\nlog.Printf(\"Reading %s: %v\", file, err)' 根据 github.com/golang 上的 Error Strings，错误字符串不应大写或以标点符号结尾，因为它们可能会出现在其他上下文中。 要修正格式，可以应用修正错误字符串格式快速修复。 应用快速修复后，错误字符串将如下所示： 'err := fmt.Errorf(\"cannot read the file\")\nlog.Printf(\"Reading %s: %v\", file, err)'",
                  "markdown": "报告错误字符串的格式问题。\n\n示例：\n\n    err := fmt.Errorf(\"Cannot read the file!\")\n    log.Printf(\"Reading %s: %v\", file, err)\n\n根据 [github.com/golang 上的 Error Strings](https://github.com/golang/go/wiki/CodeReviewComments#error-strings)，错误字符串不应大写或以标点符号结尾，因为它们可能会出现在其他上下文中。\n\n要修正格式，可以应用**修正错误字符串格式**快速修复。 应用快速修复后，错误字符串将如下所示：\n\n    err := fmt.Errorf(\"cannot read the file\")\n    log.Printf(\"Reading %s: %v\", file, err)\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoErrorStringFormat",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoCommentLeadingSpace",
                "shortDescription": {
                  "text": "注释没有前导空格"
                },
                "fullDescription": {
                  "text": "报告不带前导空格的注释。 请注意，只有当您在 编辑器 | 代码样式 | Go 的 其他标签页上选择 向注释添加前导空格 时，检查才有效。 带有前导空格的注释更易于阅读，因为第一个单词与注释之间用空格隔开。 示例： '//打印从 createJSON 函数接收的 JSON\nfunc printJSON(output []byte) {\n\tfmt.Println(string(output))\n}'",
                  "markdown": "报告不带前导空格的注释。\n\n请注意，只有当您在 **编辑器 \\| 代码样式 \\| Go** 的 **其他** 标签页上选择 **向注释添加前导空格** 时，检查才有效。\n\n带有前导空格的注释更易于阅读，因为第一个单词与注释之间用空格隔开。\n\n示例：\n\n    //打印从 createJSON 函数接收的 JSON\n    func printJSON(output []byte) {\n    \tfmt.Println(string(output))\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoCommentLeadingSpace",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDeferInLoop",
                "shortDescription": {
                  "text": "循环中的 'defer'"
                },
                "fullDescription": {
                  "text": "报告循环内的 'defer' 语句。 在循环中使用 'defer' 会导致资源泄漏或语句的执行顺序不可预测。 示例： 'func main() {\n for {\n  field, err := db.Query(\"SELECT 1\")\n  if err != nil {\n   // ...\n  }\n  defer field.Close()\n  // ...\n }\n}' 'defer row.Close()' 在循环内的调用在函数完成执行之前不会执行。 而不是在 'for' 循环的每一步结束时。 这种实现可能会导致函数堆栈溢出和其他问题。",
                  "markdown": "报告循环内的 `defer` 语句。\n\n在循环中使用 `defer` 会导致资源泄漏或语句的执行顺序不可预测。\n\n示例：\n\n    func main() {\n     for {\n      field, err := db.Query(\"SELECT 1\")\n      if err != nil {\n       // ...\n      }\n      defer field.Close()\n      // ...\n     }\n    }\n\n`defer row.Close()` 在循环内的调用在函数完成执行之前不会执行。\n而不是在 ` for ` 循环的每一步结束时。 这种实现可能会导致函数堆栈溢出和其他问题。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoDeferInLoop",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/控制流问题",
                      "index": 59,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoErrorsAs",
                "shortDescription": {
                  "text": "不正确的 'errors.As' 函数用法"
                },
                "fullDescription": {
                  "text": "当第二个实参不是一个指向接口或实现错误的类型的指针时，报告对 'errors.As' 函数的调用。 此类调用在运行时会出现 panic。 有关 'As' 函数的详细信息，请参阅 go.dev 上的 func As。 示例： '_, err := os.Open(\"non-existing\")\nvar pathError *fs.PathError\nif errors.As(err, pathError) { // 需要一个指向 *fs.PathError 的指针\n}' 在应用在前面追加 '&'快速修复后： '_, err := os.Open(\"non-existing\")\nvar pathError *fs.PathError\nif errors.As(err, &pathError) {\n}' 仅当语言版本为 1.13 或更高时，此检查才会报告。",
                  "markdown": "当第二个实参不是一个指向接口或实现错误的类型的指针时，报告对 `errors.As` 函数的调用。\n\n此类调用在运行时会出现 panic。\n\n有关 `As` 函数的详细信息，请参阅 [go.dev 上的 func As](https://pkg.go.dev/errors#As)。\n\n示例：\n\n    _, err := os.Open(\"non-existing\")\n    var pathError *fs.PathError\n    if errors.As(err, pathError) { // 需要一个指向 *fs.PathError 的指针\n    }\n\n在应用**在前面追加 '\\&'**快速修复后：\n\n    _, err := os.Open(\"non-existing\")\n    var pathError *fs.PathError\n    if errors.As(err, &pathError) {\n    }\n\n仅当语言版本为 1.13 或更高时，此检查才会报告。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoErrorsAs",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoExportedElementShouldHaveComment",
                "shortDescription": {
                  "text": "导出的元素应有注释"
                },
                "fullDescription": {
                  "text": "报告没有文档注释的导出声明。 根据 github.com/golang 上的 Doc Comments，所有顶级导出名称都应具有文档注释。 另外，有关注释句子的详细信息，请参阅 github.com/golang 上的 Comment Sentences。 要添加注释，可以应用添加注释快速修复。",
                  "markdown": "报告没有文档注释的导出声明。 根据 [github.com/golang 上的 Doc Comments](https://github.com/golang/go/wiki/CodeReviewComments#doc-comments)，所有顶级导出名称都应具有文档注释。\n\n另外，有关注释句子的详细信息，请参阅 [github.com/golang 上的 Comment Sentences](https://github.com/golang/go/wiki/CodeReviewComments#comment-sentences)。\n\n要添加注释，可以应用**添加注释**快速修复。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoExportedElementShouldHaveComment",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoDfaNilDereference",
                "shortDescription": {
                  "text": "潜在的 nil 取消引用"
                },
                "fullDescription": {
                  "text": "报告可能为 'nil' 的指针被取消引用的实例。 示例： 'type Person struct{ Name string }\n\nfunc _(person *Person) {\n\tif person != nil || person.Name != \"Peter\" {\n\t}\n}' 在提供的示例中，'person' 是指向 'Person' 结构的指针，但它是 'nil'，因为它没有被赋予任何值。 尝试取消引用 'person' 以访问 'Name' 而不检查 'person' 是否为 'nil' 会导致运行时错误。",
                  "markdown": "报告可能为 `nil` 的指针被取消引用的实例。\n\n示例：\n\n\n    type Person struct{ Name string }\n\n    func _(person *Person) {\n    \tif person != nil || person.Name != \"Peter\" {\n    \t}\n    }\n\n在提供的示例中，`person` 是指向 `Person` 结构的指针，但它是 `nil`，因为它没有被赋予任何值。\n尝试取消引用 `person` 以访问 `Name` 而不检查 `person` 是否为 `nil` 会导致运行时错误。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoDfaNilDereference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/数据流分析(实验性)",
                      "index": 11,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VgoDependencyDeprecated",
                "shortDescription": {
                  "text": "已弃用的依赖项"
                },
                "fullDescription": {
                  "text": "报告已弃用的依赖项。 使用已弃用的版本可能会导致安全漏洞、不兼容问题、效率低下和其他风险。 要解决问题，可以按照提供的弃用通知中的迁移说明进行操作，或者使用其他依赖项。 可用的快速修复可能会建议您阅读弃用通知。 有关详情，请参阅 go.dev 上的模块弃用。 弃用数据由命令 go list -m -u 提供。",
                  "markdown": "报告已弃用的依赖项。 使用已弃用的版本可能会导致安全漏洞、不兼容问题、效率低下和其他风险。\n\n要解决问题，可以按照提供的弃用通知中的迁移说明进行操作，或者使用其他依赖项。\n\n可用的快速修复可能会建议您阅读弃用通知。\n\n\n有关详情，请参阅 [go.dev 上的模块弃用](https://go.dev/ref/mod#go-mod-file-module-deprecation)。  \n\n弃用数据由命令 [go list -m -u](https://go.dev/ref/mod#go-list-m) 提供。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VgoDependencyDeprecated",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go modules/依赖项问题(go list -m -u)",
                      "index": 68,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnusedExportedFunction",
                "shortDescription": {
                  "text": "未使用的导出函数"
                },
                "fullDescription": {
                  "text": "报告未使用的导出函数。 在 Go 中，如果函数以大写字母开头，则会导出该函数。 已定义但从未使用过的导出函数的名称显示为灰色。 '// 未使用的导出函数\nfunc ExportedUnusedFunc()  {\n\n}\n\nfunc main() {\n fmt.Println(\"Hello\")\n}'",
                  "markdown": "报告未使用的导出函数。\n\n在 Go 中，如果函数以大写字母开头，则会导出该函数。 已定义但从未使用过的导出函数的名称显示为灰色。\n\n    // 未使用的导出函数\n    func ExportedUnusedFunc()  {\n\n    }\n\n    func main() {\n     fmt.Println(\"Hello\")\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnusedExportedFunction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoExportedFuncWithUnexportedType",
                "shortDescription": {
                  "text": "导出函数的未导出返回值类型"
                },
                "fullDescription": {
                  "text": "报告具有未导出的返回类型的导出函数。 在 go doc 下查看文档时，未导出的类型可能难以使用。 示例： 'type hidden struct{}\n\nfunc Exported() hidden { // 具有 `hidden` 未导出返回类型的导出函数\n return hidden{}\n}' 您可以应用导出快速修复来导出类型。 应用快速修复后，类型名称将会大写： 'type Hidden struct{}\n\nfunc Exported() Hidden { // 已修正\n return Hidden{}\n}'",
                  "markdown": "报告具有未导出的返回类型的导出函数。\n\n在 **go doc** 下查看文档时，未导出的类型可能难以使用。\n\n示例：\n\n    type hidden struct{}\n\n    func Exported() hidden { // 具有 `hidden` 未导出返回类型的导出函数\n     return hidden{}\n    }\n\n您可以应用**导出**快速修复来导出类型。 应用快速修复后，类型名称将会大写：\n\n    type Hidden struct{}\n\n    func Exported() Hidden { // 已修正\n     return Hidden{}\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoExportedFuncWithUnexportedType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoInfiniteFor",
                "shortDescription": {
                  "text": "无限的 'for' 循环"
                },
                "fullDescription": {
                  "text": "报告空的 'for' 循环。 运行此代码会使 CPU 保持最大运行状态，从而会使计算机几乎无法使用。 示例： 'func main() {\n for {\n }\n}'",
                  "markdown": "报告空的 `for` 循环。\n\n运行此代码会使 CPU 保持最大运行状态，从而会使计算机几乎无法使用。\n\n示例：\n\n    func main() {\n     for {\n     }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoInfiniteFor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/控制流问题",
                      "index": 59,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnusedFunction",
                "shortDescription": {
                  "text": "未使用的函数"
                },
                "fullDescription": {
                  "text": "报告未使用的未导出函数。 在 Go 中，如果函数以小写字母开头，则不会导出该函数。 已定义但从未使用过的未导出函数的名称显示为灰色。 '// 未使用的未导出函数\nfunc unExportedUnusedFunc()  {\n\n}\n\nfunc main() {\n fmt.Println(\"Hello\")\n}'",
                  "markdown": "报告未使用的未导出函数。\n\n在 Go 中，如果函数以小写字母开头，则不会导出该函数。 已定义但从未使用过的未导出函数的名称显示为灰色。\n\n    // 未使用的未导出函数\n    func unExportedUnusedFunc()  {\n\n    }\n\n    func main() {\n     fmt.Println(\"Hello\")\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnusedFunction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnusedConst",
                "shortDescription": {
                  "text": "未使用的常量"
                },
                "fullDescription": {
                  "text": "报告已定义但从未在代码中使用的常量。 'func main() {\n const i = 100\n}' 与未使用的变量和导入不同，此代码进行编译。 未使用的常量可能会增加代码库并减慢程序编译速度。 要删除未使用的常量，请考虑使用删除常量快速修复。",
                  "markdown": "报告已定义但从未在代码中使用的常量。\n\n    func main() {\n     const i = 100\n    }\n\n与未使用的变量和导入不同，此代码进行编译。 未使用的常量可能会增加代码库并减慢程序编译速度。 要删除未使用的常量，请考虑使用**删除常量**快速修复。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnusedConst",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoMissingTrailingComma",
                "shortDescription": {
                  "text": "复合文字中的换行符前缺少尾随逗号"
                },
                "fullDescription": {
                  "text": "报告在复合文字、函数调用实参和函数形参列表中缺少换行前的尾随逗号。 示例： 'func f(f int) (\n int,\n bool   // 缺少尾随逗号\n){\n println(1, 2  // 缺少尾随逗号\n )\n}'",
                  "markdown": "报告在复合文字、函数调用实参和函数形参列表中缺少换行前的尾随逗号。\n\n示例：\n\n    func f(f int) (\n     int,\n     bool   // 缺少尾随逗号\n    ){\n     println(1, 2  // 缺少尾随逗号\n     )\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GoMissingTrailingComma",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoTypeParameterInLowerCase",
                "shortDescription": {
                  "text": "类型形参以小写声明"
                },
                "fullDescription": {
                  "text": "报告以小写声明的类型形参。 官方 Go 文档中的示例使用大写的类型形参。 此检查遵循类型形参的这种大写规则。 'func PrintSlice[t any](s []t) {\n    for _, v := range s{\n        print(v)\n    }\n}' 类型形参 't' 以小写声明，因此将被报告。",
                  "markdown": "报告以小写声明的类型形参。\n\n官方 Go 文档中的示例使用大写的类型形参。\n此检查遵循类型形参的这种大写规则。\n\n    func PrintSlice[t any](s []t) {\n        for _, v := range s{\n            print(v)\n        }\n    }\n\n类型形参 `t` 以小写声明，因此将被报告。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoTypeParameterInLowerCase",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/代码样式问题",
                      "index": 39,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoStringsReplaceCount",
                "shortDescription": {
                  "text": "不正确的 'strings.Replace' 计数实参"
                },
                "fullDescription": {
                  "text": "报告替换次数为 '0' 而不是 '-1' 的 'strings.Replace' 的调用。 指示替换字符串次数的计数实参不能为 '0'，因为它不会进行任何替换从而使函数调用是冗余的。 请改用 '-1'。 示例： 'a := strings.Replace(\"SSS\", \"S\", \"H\", 0) // 没有替换任何东西\nb := strings.Replace(\"SSS\", \"S\", \"H\", -1) // 用 “H” 替换所有出现的 “S”'",
                  "markdown": "报告替换次数为 `0` 而不是 `-1` 的 ` strings.Replace ` 的调用。\n\n指示替换字符串次数的计数实参不能为 `0`，因为它不会进行任何替换从而使函数调用是冗余的。 请改用 `-1`。\n\n示例：\n\n    a := strings.Replace(\"SSS\", \"S\", \"H\", 0) // 没有替换任何东西\n    b := strings.Replace(\"SSS\", \"S\", \"H\", -1) // 用 \"H\" 替换所有出现的 \"S\"\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoStringsReplaceCount",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnusedCallResult",
                "shortDescription": {
                  "text": "未使用的函数或方法调用结果"
                },
                "fullDescription": {
                  "text": "报告对不处理调用结果的特定函数和方法的调用。 此类函数的 API 意味着用户调用函数的主要目的应该是获取返回值并处理它，而不是因为副作用。 不处理调用结果的调用可能意味着 API 被滥用。 示例： 'fmt.Errorf(\"error: %s\", reason) // 构造的错误将被忽略' 在应用引入局部变量快速修复后： 'err := fmt.Errorf(\"error: %s\", reason)'",
                  "markdown": "报告对不处理调用结果的特定函数和方法的调用。\n\n此类函数的 API 意味着用户调用函数的主要目的应该是获取返回值并处理它，而不是因为副作用。 不处理调用结果的调用可能意味着 API 被滥用。\n\n示例：\n\n    fmt.Errorf(\"error: %s\", reason) // 构造的错误将被忽略\n\n在应用**引入局部变量**快速修复后：\n\n    err := fmt.Errorf(\"error: %s\", reason)\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnusedCallResult",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnusedType",
                "shortDescription": {
                  "text": "未使用的类型"
                },
                "fullDescription": {
                  "text": "报告未使用的类型。 'type user struct {\n FirstName string    `json:\"firstname\"`\n LastName  string    `json:\"lastname\"`\n}\n\nfunc main() {\n \n}' 'user' 类型将显示为灰色，因为它没有在代码中的任何地方使用。",
                  "markdown": "报告未使用的类型。\n\n    type user struct {\n     FirstName string    `json:\"firstname\"`\n     LastName  string    `json:\"lastname\"`\n    }\n\n    func main() {\n     \n    }\n\n`user` 类型将显示为灰色，因为它没有在代码中的任何地方使用。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnusedType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoFuzzingSupport",
                "shortDescription": {
                  "text": "从 Go 1.18 开始支持模糊处理"
                },
                "fullDescription": {
                  "text": "当 Go SDK 版本低于 1.18 时，报告模糊测试 模糊测试是一种自动化测试方法，涉及对可能导致程序崩溃或公开无效行为的输入数据的定向搜索。 Go 从 1.18 开始支持模糊测试。 模糊测试示例： 'func Div(a, b int) int {\n\treturn a / b\n}\n\nfunc FuzzDiv(f *testing.F) {\n\tf.Fuzz(func(t *testing.T, a, b int) {\n\t\tDiv(a, b) // 报告运行时错误：整数除以零\n\t})\n}' 请参阅 Go Fuzzing 获取更多信息。",
                  "markdown": "当 Go SDK 版本低于 1.18 时，报告模糊测试\n\n模糊测试是一种自动化测试方法，涉及对可能导致程序崩溃或公开无效行为的输入数据的定向搜索。 Go 从 1.18 开始支持模糊测试。\n\n模糊测试示例：\n\n\n    func Div(a, b int) int {\n    \treturn a / b\n    }\n\n    func FuzzDiv(f *testing.F) {\n    \tf.Fuzz(func(t *testing.T, a, b int) {\n    \t\tDiv(a, b) // 报告运行时错误：整数除以零\n    \t})\n    }\n\n\n请参阅 [Go Fuzzing](https://go.dev/doc/fuzz/) 获取更多信息。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoFuzzingSupport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/常规",
                      "index": 47,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoBoolExpressions",
                "shortDescription": {
                  "text": "布尔型条件"
                },
                "fullDescription": {
                  "text": "报告布尔表达式中始终为 'true'、始终为 'false' 或冗余的部分。 此类布尔表达式可以被简化，从而使您的代码更易于阅读。 在某些情况下，这还表明存在其他问题。 示例： 'func isNonZero(x, y int) bool {\n  // 第二个比较要么始终为 true，\n  // 要么根本不执行\n  return x > 0 && x > 0\n}' 您可以对 'x > 0 && x > 0' 部分应用 简化表达式 快速修复。 应用快速修复后，表达式如下所示：'x > 0'。",
                  "markdown": "报告布尔表达式中始终为 `true`、始终为 `false` 或冗余的部分。 此类布尔表达式可以被简化，从而使您的代码更易于阅读。 在某些情况下，这还表明存在其他问题。\n\n示例：\n\n    func isNonZero(x, y int) bool {\n      // 第二个比较要么始终为 true，\n      // 要么根本不执行\n      return x > 0 && x > 0\n    }\n\n您可以对 `x > 0 && x > 0` 部分应用 **简化表达式** 快速修复。 应用快速修复后，表达式如下所示：`x > 0`。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoBoolExpressions",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoUnusedGlobalVariable",
                "shortDescription": {
                  "text": "未使用的全局变量"
                },
                "fullDescription": {
                  "text": "报告已定义但从未在代码中使用的全局变量。 如果您有未使用的变量，代码将无法编译。 有关未使用的变量和导入的详细息，请参阅 go.dev 上的 Unused imports and variables。 'func main() {\n a := 422\n}' 示例中的代码将无法编译。 因此，将其高亮显示为错误。 对于此类情况，您可以应用两个快速修复：删除变量 和 重命名为 _。 第一个快速修复删除变量，第二个将变量转换为空白 标识符。 在应用重命名为 _快速修复后： 'func main() {\n _ := 422\n}'",
                  "markdown": "报告已定义但从未在代码中使用的全局变量。\n\n如果您有未使用的变量，代码将无法编译。\n有关未使用的变量和导入的详细息，请参阅 [go.dev 上的 Unused imports and variables](https://go.dev/doc/effective_go#blank_unused)。\n\n    func main() {\n     a := 422\n    }\n\n示例中的代码将无法编译。 因此，将其高亮显示为错误。 对于此类情况，您可以应用两个快速修复：**删除变量** 和 **重命名为 _**。 第一个快速修复删除变量，第二个将变量转换为空白\n标识符。\n\n在应用**重命名为 _**快速修复后：\n\n    func main() {\n     _ := 422\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoUnusedGlobalVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/声明冗余",
                      "index": 5,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoLoopClosure",
                "shortDescription": {
                  "text": "函数文字捕获的循环变量"
                },
                "fullDescription": {
                  "text": "报告在 'defer' 和 'go' 语句中的 'func' 文字内对循环变量的引用。 此类变量可能具有意外值，因为它们没有被复制到 'func' 文字中，并且 'defer' 和 'go' 中的 'func' 文字不会立即执行。 有关闭包和 goroutine 的详细信息，请参阅 go.dev 上的 What happens with closures running as goroutines? 。 示例： 'for _, v := range []string{\"a\", \"b\", \"c\"} {\n  go func() {\n    fmt.Println(v) // 输出可能会是 `c c c`，而不是 `a b c`。\n  }()\n}' 在应用快速修复后： 'for _, v := range []string{\"a\", \"b\", \"c\"} {\n  v := v // `v` 现已被复制\n  go func() {\n    fmt.Println(v)\n  }()\n}' 请注意，仅当 'defer' 和 'go' 语句是循环主体中的最后一个语句时，分析器才会检查它们。 否则，分析可能会产生错误的检测结果。",
                  "markdown": "报告在 `defer` 和 `go` 语句中的 `func` 文字内对循环变量的引用。 此类变量可能具有意外值，因为它们没有被复制到 `func` 文字中，并且 `defer` 和 `go` 中的 `func` 文字不会立即执行。\n\n有关闭包和 goroutine 的详细信息，请参阅 [go.dev 上的 What happens with closures running as goroutines?](https://go.dev/doc/faq#closures_and_goroutines)。\n\n示例：\n\n    for _, v := range []string{\"a\", \"b\", \"c\"} {\n      go func() {\n        fmt.Println(v) // 输出可能会是 `c c c`，而不是 `a b c`。\n      }()\n    }\n\n在应用快速修复后：\n\n    for _, v := range []string{\"a\", \"b\", \"c\"} {\n      v := v // `v` 现已被复制\n      go func() {\n        fmt.Println(v)\n      }()\n    }\n\n请注意，仅当 ` defer` 和 `go` 语句是循环主体中的最后一个语句时，分析器才会检查它们。\n否则，分析可能会产生错误的检测结果。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoLoopClosure",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoAssignmentToReceiver",
                "shortDescription": {
                  "text": "赋值给接收器"
                },
                "fullDescription": {
                  "text": "报告给方法接收器的赋值。 当您将值赋给方法接收器时，该值将不会反映在方法本身之外。 值将反映在来自同一方法的后续调用中。 示例： 'package main\n\nimport \"fmt\"\n\ntype demo struct {\n Val int\n}\n\nfunc (d *demo) change() {\n d = nil // 对方法接收器的分配仅传播给被调用者，而不传播给调用者\n d.myVal()\n}\n\nfunc (d *demo) myVal() {\n fmt.Printf(\"my val: %#v\\n\", d)\n}\n\nfunc (d demo) change2() {\n d = demo{} // 对方法接收器的分配不会传播到其他调用\n d.myVal()\n}\n\nfunc (d *demo) change3() {\n d.Val = 3\n d.myVal()\n}\n\nfunc main() {\n d := &demo{}\n d.myVal()\n d.change()\n d.myVal()\n d.Val = 2\n d.change2()\n d.myVal()\n d.change3()\n d.myVal()\n}'",
                  "markdown": "报告给方法接收器的赋值。\n\n当您将值赋给方法接收器时，该值将不会反映在方法本身之外。\n值将反映在来自同一方法的后续调用中。\n\n示例：\n\n    package main\n\n    import \"fmt\"\n\n    type demo struct {\n     Val int\n    }\n\n    func (d *demo) change() {\n     d = nil // 对方法接收器的分配仅传播给被调用者，而不传播给调用者\n     d.myVal()\n    }\n\n    func (d *demo) myVal() {\n     fmt.Printf(\"my val: %#v\\n\", d)\n    }\n\n    func (d demo) change2() {\n     d = demo{} // 对方法接收器的分配不会传播到其他调用\n     d.myVal()\n    }\n\n    func (d *demo) change3() {\n     d.Val = 3\n     d.myVal()\n    }\n\n    func main() {\n     d := &demo{}\n     d.myVal()\n     d.change()\n     d.myVal()\n     d.Val = 2\n     d.change2()\n     d.myVal()\n     d.change3()\n     d.myVal()\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoAssignmentToReceiver",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/控制流问题",
                      "index": 59,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoBuildTag",
                "shortDescription": {
                  "text": "构建标记的格式错误"
                },
                "fullDescription": {
                  "text": "报告构建标记的格式错误和放置在错误位置的构建标记。 'go' 工具要求将构建标记放置在特定位置并以特殊语法编写。 如果不满足这些要求，则可能会忽略构建标记或可能会意外地从构建中删除文件。 请参阅 go.dev 上的 Build Constraints。 示例： 'package main\n\n// +build ignore\n\nfunc main() {}' '// +build ignore' 部分应该在软件包声明之前。 要解决此问题，您可以应用在软件包前面放置构建标签快速修复。 在应用快速修复后： '// +build ignore\n\npackage main\n\nimport \"fmt\"'",
                  "markdown": "报告构建标记的格式错误和放置在错误位置的构建标记。 `go` 工具要求将构建标记放置在特定位置并以特殊语法编写。 如果不满足这些要求，则可能会忽略构建标记或可能会意外地从构建中删除文件。\n\n请参阅 [go.dev 上的 Build Constraints](https://pkg.go.dev/go/build#hdr-Build_Constraints)。\n\n示例：\n\n    package main\n\n    // +build ignore\n\n    func main() {}\n\n`// +build ignore` 部分应该在软件包声明之前。 要解决此问题，您可以应用**在软件包前面放置构建标签**快速修复。 在应用快速修复后：\n\n    // +build ignore\n\n    package main\n\n    import \"fmt\"\n"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GoBuildTag",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/可能的 bug",
                      "index": 4,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.jetbrains.sh",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "ShellCheck",
                "shortDescription": {
                  "text": "ShellCheck"
                },
                "fullDescription": {
                  "text": "报告由集成的 ShellCheck 静态分析工具检测到的 shell 脚本错误。",
                  "markdown": "报告由集成的 [ShellCheck](https://github.com/koalaman/shellcheck) 静态分析工具检测到的 shell 脚本错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ShellCheck",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Shell 脚本",
                      "index": 6,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "name.kropp.intellij.makefile",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "MakefileUnresolvedPrerequisite",
                "shortDescription": {
                  "text": "未解决的先决条件"
                },
                "fullDescription": {
                  "text": "报告未解决的目标先决条件",
                  "markdown": "报告未解决的目标先决条件"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MakefileUnresolvedPrerequisite",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Makefile",
                      "index": 8,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "JsonSchemaDeprecation",
                "shortDescription": {
                  "text": "弃用的 JSON 属性"
                },
                "fullDescription": {
                  "text": "报告 JSON 文件中弃用的属性。 请注意，JSON 架构规范中尚未定义弃用机制， 并且该检查使用了非标准的扩展 'deprecationMessage'。",
                  "markdown": "报告 JSON 文件中弃用的属性。  \n请注意，JSON 架构规范中尚未定义弃用机制， 并且该检查使用了非标准的扩展 'deprecationMessage'。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JsonSchemaDeprecation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON 和 JSON5",
                      "index": 9,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonSchemaRefReference",
                "shortDescription": {
                  "text": "未解析的 '$ref' 和 '$schema' 引用"
                },
                "fullDescription": {
                  "text": "报告 JSON 架构中未解析的 '$ref' 或 '$schema' 路径。",
                  "markdown": "报告 JSON 架构中未解析的 `$ref` 或 `$schema` 路径。  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsonSchemaRefReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON 和 JSON5",
                      "index": 9,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownBooleanAttribute",
                "shortDescription": {
                  "text": "不正确的布尔特性"
                },
                "fullDescription": {
                  "text": "报告不含值的 HTML 非布尔特性。 建议配置不应报告的特性。",
                  "markdown": "报告不含值的 HTML 非布尔特性。 建议配置不应报告的特性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownBooleanAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicatedCode",
                "shortDescription": {
                  "text": "重复的代码段"
                },
                "fullDescription": {
                  "text": "Reports duplicated blocks of code from the selected scope: the same file or the entire project. The inspection features quick-fixes that help you to set the size of detected duplicates, navigate to repetitive code fragments, and compare them in a tool window. The inspection options allow you to select the scope of the reported duplicated fragments and set the initial size for the duplicated language constructs. You can also configure the constructs that you want to anonymize in 文件 | 设置 | Editor | Duplicates.",
                  "markdown": "Reports duplicated blocks of code from the selected scope: the same file or the entire project.\n\nThe inspection features quick-fixes that help you to set the size of detected duplicates, navigate to repetitive code fragments, and compare them in a tool window.\n\nThe inspection options allow you to select the scope of the reported duplicated fragments and set the initial size for the duplicated language constructs.\n\nYou can also configure the constructs that you want to anonymize in [文件 \\| 设置 \\| Editor \\| Duplicates](settings://duplicates.index)."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "DuplicatedCode",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InconsistentLineSeparators",
                "shortDescription": {
                  "text": "行分隔符不一致"
                },
                "fullDescription": {
                  "text": "报告包含的行分隔符与项目设置中指定的行分隔符不同的文件。 例如，如果在设置 | 编辑器 | 代码样式 | 行分隔符中将行分隔符设置为 '\\n'，而您正在编辑的文件使用 '\\r\\n' 作为行分隔符，就会触发该检查。 该检查还会警告留意文件中的混合行分隔符。",
                  "markdown": "报告包含的行分隔符与项目设置中指定的行分隔符不同的文件。\n\n例如，如果在[设置 \\| 编辑器 \\| 代码样式 \\| 行分隔符](settings://preferences.sourceCode?Line%20separator)中将行分隔符设置为 `\\n`，而您正在编辑的文件使用 `\\r\\n` 作为行分隔符，就会触发该检查。\n\n该检查还会警告留意文件中的混合行分隔符。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InconsistentLineSeparators",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantSuppression",
                "shortDescription": {
                  "text": "冗余禁止"
                },
                "fullDescription": {
                  "text": "报告由于它们所影响的检查在此上下文中不再适用而可以安全移除的下列元素： '@SuppressWarning' 注解或 '// noinspection' 行注释，或 '/** noinspection */' JavaDoc 注释 示例： 'public class C {\n // 符号已经为 private，\n // 但周围仍有注解\n  @SuppressWarnings({\"WeakerAccess\"})\n private boolean CONST = true;\n void f() {\n    CONST = false;\n  }\n}'",
                  "markdown": "报告由于它们所影响的检查在此上下文中不再适用而可以安全移除的下列元素：\n\n* `@SuppressWarning` 注解或\n* `// noinspection` 行注释，或\n* `/** noinspection */` JavaDoc 注释\n\n示例：\n\n\n    public class C {\n     // 符号已经为 private，\n     // 但周围仍有注解\n      @SuppressWarnings({\"WeakerAccess\"})\n     private boolean CONST = true;\n     void f() {\n        CONST = false;\n      }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantSuppression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProblematicWhitespace",
                "shortDescription": {
                  "text": "有问题的空格"
                },
                "fullDescription": {
                  "text": "报告以下问题： 当代码样式配置为只使用空格时使用制表符进行缩进。 当代码样式配置为只使用制表符时使用空格进行缩进。 当代码样式配置为使用智能制表符时，使用空格进行缩进，以及使用制表符进行对齐。",
                  "markdown": "报告以下问题：\n\n* 当代码样式配置为只使用空格时使用制表符进行缩进。\n* 当代码样式配置为只使用制表符时使用空格进行缩进。\n* 当代码样式配置为使用智能制表符时，使用空格进行缩进，以及使用制表符进行对齐。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProblematicWhitespace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownTarget",
                "shortDescription": {
                  "text": "链接中未解析的文件"
                },
                "fullDescription": {
                  "text": "报告链接中未解析的文件。",
                  "markdown": "报告链接中未解析的文件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownTarget",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SSBasedInspection",
                "shortDescription": {
                  "text": "结构搜索检查"
                },
                "fullDescription": {
                  "text": "允许配置可以应用于您正在编辑的文件的结构搜索/结构替换模板。 所有匹配项都将高亮显示并使用您配置的模板名称标记。 如果您还配置了结构替换模式，相应的替换选项将作为快速修复提供。",
                  "markdown": "允许配置可以应用于您正在编辑的文件的**结构搜索/结构替换**模板。\n\n所有匹配项都将高亮显示并使用您配置的模板名称标记。\n如果您还配置了**结构替换**模式，相应的替换选项将作为快速修复提供。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SSBasedInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "结构搜索",
                      "index": 38,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LongLine",
                "shortDescription": {
                  "text": "行长度超出代码样式的允许范围"
                },
                "fullDescription": {
                  "text": "报告比在设置 | 编辑器 | 代码样式 | 常规中指定的强制换行位置参数长的行。",
                  "markdown": "报告比在[设置 \\| 编辑器 \\| 代码样式 \\| 常规](settings://preferences.sourceCode?Hard%20wrap%20at)中指定的**强制换行位置**参数长的行。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LongLine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlWrongRootElement",
                "shortDescription": {
                  "text": "错误的根元素"
                },
                "fullDescription": {
                  "text": "报告与 '<doctype>' 标记中指定的名称不同的根标记名称。",
                  "markdown": "报告与 `<doctype>` 标记中指定的名称不同的根标记名称。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlWrongRootElement",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckValidXmlInScriptTagBody",
                "shortDescription": {
                  "text": "'script' 标记的内容格式错误"
                },
                "fullDescription": {
                  "text": "报告是无效 XML 的 'script' 标记的内容。 示例： '<script type=\"text/javascript\">\n    console.log('<');\n  </script>' 在应用快速修复后： '<script type=\"text/javascript\">\n    console.log('&lt;');\n  </script>'",
                  "markdown": "报告是无效 XML 的 `script` 标记的内容。  \n\n**示例：**\n\n\n      <script type=\"text/javascript\">\n        console.log('<');\n      </script>\n\n在应用快速修复后：\n\n\n      <script type=\"text/javascript\">\n        console.log('&lt;');\n      </script>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CheckValidXmlInScriptTagBody",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpSuspiciousBackref",
                "shortDescription": {
                  "text": "可疑的反向引用"
                },
                "fullDescription": {
                  "text": "报告在运行时无法解析的反向引用。 这意味着反向引用永远无法匹配任何内容。 如果组是在反向引用之后定义的，或者组是在替代项的不同分支中定义的，则反向引用将不可解析。 在其反向引用之后定义的组的示例： '\\1(abc)' 不同分支中的组和反向引用的示例： 'a(b)c|(xy)\\1z' 2022.1 最新变化",
                  "markdown": "报告在运行时无法解析的反向引用。 这意味着反向引用永远无法匹配任何内容。 如果组是在反向引用之后定义的，或者组是在替代项的不同分支中定义的，则反向引用将不可解析。\n\n**在其反向引用之后定义的组的示例：**\n\n\n      \\1(abc)\n\n**不同分支中的组和反向引用的示例：**\n\n\n      a(b)c|(xy)\\1z\n\n2022.1 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpSuspiciousBackref",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpSingleCharAlternation",
                "shortDescription": {
                  "text": "单字符替代项"
                },
                "fullDescription": {
                  "text": "报告正则表达式中的单一字符替换。 改用一个字符类更简单。 这还可能提高匹配性能。 示例： 'a|b|c|d' 在应用快速修复后： '[abcd]' 2017.1 最新变化",
                  "markdown": "报告正则表达式中的单一字符替换。 改用一个字符类更简单。 这还可能提高匹配性能。\n\n**示例：**\n\n\n      a|b|c|d\n\n在应用快速修复后：\n\n\n      [abcd]\n\n\n2017.1 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpSingleCharAlternation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownAttribute",
                "shortDescription": {
                  "text": "未知特性"
                },
                "fullDescription": {
                  "text": "报告未知的 HTML 特性。 建议配置不应报告的特性。",
                  "markdown": "报告未知的 HTML 特性。 建议配置不应报告的特性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckTagEmptyBody",
                "shortDescription": {
                  "text": "空元素内容"
                },
                "fullDescription": {
                  "text": "报告没有内容的 XML 元素。 示例： '<user>\n    <name></name>\n  </user>' 在应用快速修复后： '<user>\n    <name/>\n  </user>'",
                  "markdown": "报告没有内容的 XML 元素。\n\n**示例：**\n\n\n      <user>\n        <name></name>\n      </user>\n\n在应用快速修复后：\n\n\n      <user>\n        <name/>\n      </user>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckTagEmptyBody",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRedundantEscape",
                "shortDescription": {
                  "text": "冗余字符转义"
                },
                "fullDescription": {
                  "text": "报告可以替换为保留其含义的非转义字符的冗余字符转义序列。 许多在字符类外部必需的转义序列在字符类的方括号 '[]' 内部冗余。 尽管某些方言（JavaScript、Python 等）允许在字符类外部使用未转义的左大括号 '{'，但这样可能会导致混乱并降低模式的可移植性，因为某些方言要求将大括号作为字符进行转义。 因此，该检查不会报告转义的左大括号。 示例： '\\-\\;[\\.]' 在应用快速修复后： '-;[.]' 忽略转义的右括号 '}' 和 ']' 选项可以指定当 RegExp 方言允许在字符类外部使用未转义的 '\\}' 和 '\\]' 时是否报告它们。 2017.3 最新变化",
                  "markdown": "报告可以替换为保留其含义的非转义字符的冗余字符转义序列。 许多在字符类外部必需的转义序列在字符类的方括号 `[]` 内部冗余。\n\n\n尽管某些方言（JavaScript、Python 等）允许在字符类外部使用未转义的左大括号 `{`，但这样可能会导致混乱并降低模式的可移植性，因为某些方言要求将大括号作为字符进行转义。\n因此，该检查不会报告转义的左大括号。\n\n**示例：**\n\n\n      \\-\\;[\\.]\n\n在应用快速修复后：\n\n\n      -;[.]\n\n\n**忽略转义的右括号 '}' 和 '\\]'** 选项可以指定当 RegExp 方言允许在字符类外部使用未转义的 `\\}` 和 `\\]` 时是否报告它们。\n\n2017.3 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpRedundantEscape",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnresolvedReference",
                "shortDescription": {
                  "text": "未解析的引用"
                },
                "fullDescription": {
                  "text": "报告使用 XML 语法的 RELAX-NG 文件中对命名模式 ('define') 的未解析引用。 建议创建引用的 'define' 元素。",
                  "markdown": "报告使用 XML 语法的 RELAX-NG 文件中对命名模式 (`define`) 的未解析引用。 建议创建引用的 `define` 元素。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "UnresolvedReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RELAX NG",
                      "index": 52,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlMissingClosingTag",
                "shortDescription": {
                  "text": "缺少结束标记"
                },
                "fullDescription": {
                  "text": "报告不含结束标记的 HTML 元素。 即便在可选的情况下，有些编码样式也要求 HTML 元素包含结束标记。 示例： '<html>\n    <body>\n      <p>Behold!\n    </body>\n  </html>' 在应用快速修复后： '<html>\n    <body>\n      <p>Behold!</p>\n    </body>\n  </html>'",
                  "markdown": "报告不含结束标记的 HTML 元素。 即便在可选的情况下，有些编码样式也要求 HTML 元素包含结束标记。\n\n**示例：**\n\n\n      <html>\n        <body>\n          <p>Behold!\n        </body>\n      </html>\n\n在应用快速修复后：\n\n\n      <html>\n        <body>\n          <p>Behold!</p>\n        </body>\n      </html>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlMissingClosingTag",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CustomRegExpInspection",
                "shortDescription": {
                  "text": "自定义正则表达式检查"
                },
                "fullDescription": {
                  "text": "自定义正则表达式检查",
                  "markdown": "自定义正则表达式检查"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CustomRegExpInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncorrectFormatting",
                "shortDescription": {
                  "text": "格式设置不正确"
                },
                "fullDescription": {
                  "text": "报告代码不遵循项目代码样式设置时出现的格式问题。 此检查与需要第三方格式化程序进行代码格式设置的语言（例如启用了 CLangFormat 的 Go 或 C 语言）不兼容。",
                  "markdown": "报告代码不遵循项目代码样式设置时出现的格式问题。\n\n\n此检查与需要第三方格式化程序进行代码格式设置的语言（例如启用了 CLangFormat 的 Go 或 C 语言）不兼容。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "IncorrectFormatting",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlExtraClosingTag",
                "shortDescription": {
                  "text": "冗余结束标记"
                },
                "fullDescription": {
                  "text": "报告空元素的冗余结束标记，例如 'img' 或 'br'。 示例： '<html>\n    <body>\n      <br></br>\n    </body>\n  </html>' 在应用快速修复后： '<html>\n    <body>\n      <br>\n    </body>\n  </html>'",
                  "markdown": "报告空元素的冗余结束标记，例如 `img` 或 `br`。\n\n**示例：**\n\n\n      <html>\n        <body>\n          <br></br>\n        </body>\n      </html>\n\n在应用快速修复后：\n\n\n      <html>\n        <body>\n          <br>\n        </body>\n      </html>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlExtraClosingTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownAnchorTarget",
                "shortDescription": {
                  "text": "链接中未解析的片段"
                },
                "fullDescription": {
                  "text": "报告 '#' 符号后面的 URL 中未解析的最后部分。",
                  "markdown": "报告 `#` 符号后面的 URL 中未解析的最后部分。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownAnchorTarget",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpUnexpectedAnchor",
                "shortDescription": {
                  "text": "起始或结束定位点在意外位置"
                },
                "fullDescription": {
                  "text": "报告不在模式开头的 '^' 或 '\\A' 定位标记以及不在模式末尾的 '$'、'\\Z' 或 '\\z' 定位标记。 如果这些正则表达式定位标记位于错误的位置，则会阻止模式与任何对象匹配。 对于 '^' 和 '$' 定位标记，则很可能是指文字字符，并且忘记了转义。 示例： '(Price $10)' 2018.1 最新变化",
                  "markdown": "报告不在模式开头的 `^` 或 `\\A` 定位标记以及不在模式末尾的 `$`、`\\Z` 或 `\\z` 定位标记。 如果这些正则表达式定位标记位于错误的位置，则会阻止模式与任何对象匹配。 对于 `^` 和 `$` 定位标记，则很可能是指文字字符，并且忘记了转义。\n\n**示例：**\n\n\n      (Price $10)\n\n\n2018.1 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpUnexpectedAnchor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SpellCheckingInspection",
                "shortDescription": {
                  "text": "拼写错误"
                },
                "fullDescription": {
                  "text": "报告代码、注释和文字中的拼写错误并一键修正。",
                  "markdown": "报告代码、注释和文字中的拼写错误并一键修正。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SpellCheckingInspection",
                    "ideaSeverity": "TYPO",
                    "qodanaSeverity": "Low"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "校对",
                      "index": 61,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckXmlFileWithXercesValidator",
                "shortDescription": {
                  "text": "外部验证失败"
                },
                "fullDescription": {
                  "text": "报告 Xerces 验证程序检测到的 XML 文件和指定 DTD 或架构的差异。",
                  "markdown": "报告 Xerces 验证程序检测到的 XML 文件和指定 DTD 或架构的差异。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CheckXmlFileWithXercesValidator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownTag",
                "shortDescription": {
                  "text": "未知标记"
                },
                "fullDescription": {
                  "text": "报告未知的 HTML 标记。 建议配置不应报告的标记。",
                  "markdown": "报告未知的 HTML 标记。 建议配置不应报告的标记。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpEscapedMetaCharacter",
                "shortDescription": {
                  "text": "转义元字符"
                },
                "fullDescription": {
                  "text": "报告转义元字符。 某些正则表达式代码样式指定应将元字符放在字符类中，从而使正则表达式更易于理解。 此检查不会警告元字符 '[', ']' 和 '^'，因为这些字符可能需要在字符类中进行额外的转义。 示例： '\\d+\\.\\d+' 在应用快速修复后： '\\d+[.]\\d+' 2017.1 最新变化",
                  "markdown": "报告转义元字符。 某些正则表达式代码样式指定应将元字符放在字符类中，从而使正则表达式更易于理解。 此检查不会警告元字符 `[`, `]` 和 `^`，因为这些字符可能需要在字符类中进行额外的转义。\n\n**示例：**\n\n\n      \\d+\\.\\d+\n\n在应用快速修复后：\n\n\n      \\d+[.]\\d+\n\n2017.1 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpEscapedMetaCharacter",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlHighlighting",
                "shortDescription": {
                  "text": "XML 高亮显示"
                },
                "fullDescription": {
                  "text": "报告批量代码检查结果中的 XML 验证问题。",
                  "markdown": "报告批量代码检查结果中的 XML 验证问题。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlHighlighting",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlDuplicatedId",
                "shortDescription": {
                  "text": "重复 'id' 特性"
                },
                "fullDescription": {
                  "text": "报告 XML 中重复的 'id' 特性。",
                  "markdown": "报告 XML 中重复的 `id` 特性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlDuplicatedId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpDuplicateCharacterInClass",
                "shortDescription": {
                  "text": "字符类中存在重复字符"
                },
                "fullDescription": {
                  "text": "报告正则表达式字符类中的重复字符。 重复字符是多余的，可将其移除而不改变正则表达式的语义。 示例： '[aabc]' 在应用快速修复后： '[abc]'",
                  "markdown": "报告正则表达式字符类中的重复字符。 重复字符是多余的，可将其移除而不改变正则表达式的语义。\n\n**示例：**\n\n\n      [aabc]\n\n在应用快速修复后：\n\n\n      [abc]\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpDuplicateCharacterInClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlInvalidId",
                "shortDescription": {
                  "text": "未解析的 'id' 引用"
                },
                "fullDescription": {
                  "text": "报告 XML 中未解析的 'id' 引用。",
                  "markdown": "报告 XML 中未解析的 `id` 引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlInvalidId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlUnboundNsPrefix",
                "shortDescription": {
                  "text": "未绑定的命名空间前缀"
                },
                "fullDescription": {
                  "text": "报告 XML 中未绑定的命名空间前缀。",
                  "markdown": "报告 XML 中未绑定的命名空间前缀。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlUnboundNsPrefix",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RequiredAttributes",
                "shortDescription": {
                  "text": "缺少必要的特性"
                },
                "fullDescription": {
                  "text": "报告 XML/HTML 标记中缺少的强制特性。 建议配置不应报告的特性。",
                  "markdown": "报告 XML/HTML 标记中缺少的强制特性。 建议配置不应报告的特性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RequiredAttributes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReassignedToPlainText",
                "shortDescription": {
                  "text": "重新分配为纯文本"
                },
                "fullDescription": {
                  "text": "报告被显式重新分配为纯文本文件类型的文件。 这种关联是不必要的，因为平台会根据内容自动检测文本文件。 您可以通过在设置 | 编辑器 | 文件类型 | 文本中移除文件类型关联来关闭此警告。",
                  "markdown": "报告被显式重新分配为纯文本文件类型的文件。 这种关联是不必要的，因为平台会根据内容自动检测文本文件。\n\n您可以通过在**设置 \\| 编辑器 \\| 文件类型 \\| 文本**中移除文件类型关联来关闭此警告。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReassignedToPlainText",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlUnusedNamespaceDeclaration",
                "shortDescription": {
                  "text": "未使用的架构声明"
                },
                "fullDescription": {
                  "text": "报告 XML 中未使用的命名空间声明或位置提示。",
                  "markdown": "报告 XML 中未使用的命名空间声明或位置提示。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlUnusedNamespaceDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRedundantClassElement",
                "shortDescription": {
                  "text": "冗余的 '\\d', '[:digit:]'，或 '\\D' 类元素"
                },
                "fullDescription": {
                  "text": "报告在同一个类中与 '\\w' 或 '[:word:]'（带 '\\W' 的 '\\D'）一起使用且可移除的冗余 '\\d' 或 '[:digit:]'。 示例： '[\\w\\d]' 在应用快速修复后： '[\\w]' 2022.2 最新变化",
                  "markdown": "报告在同一个类中与 `\\w` 或 `[:word:]`（带 `\\W` 的 `\\D`）一起使用且可移除的冗余 `\\d` 或 `[:digit:]`。\n\n**示例：**\n\n\n      [\\w\\d]\n\n在应用快速修复后：\n\n\n      [\\w]\n\n2022.2 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpRedundantClassElement",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpSimplifiable",
                "shortDescription": {
                  "text": "正则表达式可以简化"
                },
                "fullDescription": {
                  "text": "报告可以简化的正则表达式。 示例： '[a] xx* [ah-hz]' 在应用快速修复后： 'a x+ [ahz]' 2022.1 最新变化",
                  "markdown": "报告可以简化的正则表达式。\n\n**示例：**\n\n\n      [a] xx* [ah-hz]\n\n在应用快速修复后：\n\n\n      a x+ [ahz]\n\n2022.1 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpSimplifiable",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpEmptyAlternationBranch",
                "shortDescription": {
                  "text": "替代项中存在空分支"
                },
                "fullDescription": {
                  "text": "报告正则表达式替换中的空分支。 空分支只能匹配空字符串，在大多数情况下，这并不是我们的目的。 此检查不会报告位于替换开头或末尾的单个空分支。 示例： '(alpha||bravo)' 在应用快速修复后： '(alpha|bravo)' 2017.2 最新变化",
                  "markdown": "报告正则表达式替换中的空分支。 空分支只能匹配空字符串，在大多数情况下，这并不是我们的目的。 此检查不会报告位于替换开头或末尾的单个空分支。\n\n**示例：**\n\n\n      (alpha||bravo)\n\n在应用快速修复后：\n\n\n      (alpha|bravo)\n\n2017.2 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpEmptyAlternationBranch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Annotator",
                "shortDescription": {
                  "text": "注解器"
                },
                "fullDescription": {
                  "text": "报告批处理代码检查运行结果中对此文件至关重要的问题（例如，语法错误）。 与检查不同，这些问题通常会在编辑器中高亮显示，并且无法配置。 这些选项控制此检查所执行检查的作用域： 选项报告语法错误：报告解析器相关问题。 选项报告来自语言特定注解器的问题：报告由为相关语言配置的注解器发现的问题 请参阅自定义语言支持：注解器以了解详情。 选项报告其他高亮显示问题：报告特定于当前文件语言的问题（例如，类型不匹配或未报告的异常）。 请参阅自定义语言支持：高亮显示以了解详情。",
                  "markdown": "报告批处理代码检查运行结果中对此文件至关重要的问题（例如，语法错误）。 与检查不同，这些问题通常会在编辑器中高亮显示，并且无法配置。 这些选项控制此检查所执行检查的作用域：\n\n* 选项**报告语法错误**：报告解析器相关问题。\n* 选项**报告来自语言特定注解器的问题** ：报告由为相关语言配置的注解器发现的问题 请参阅[自定义语言支持：注解器](https://plugins.jetbrains.com/docs/intellij/annotator.html)以了解详情。\n* 选项**报告其他高亮显示问题** ：报告特定于当前文件语言的问题（例如，类型不匹配或未报告的异常）。 请参阅[自定义语言支持：高亮显示](https://plugins.jetbrains.com/docs/intellij/syntax-highlighting-and-error-highlighting.html#semantic-highlighting)以了解详情。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Annotator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlPathReference",
                "shortDescription": {
                  "text": "未解析的文件引用"
                },
                "fullDescription": {
                  "text": "报告 XML 中未解析的文件引用。",
                  "markdown": "报告 XML 中未解析的文件引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlPathReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpUnnecessaryNonCapturingGroup",
                "shortDescription": {
                  "text": "不必要的非捕获组"
                },
                "fullDescription": {
                  "text": "报告不必要的非捕获组（对匹配结果无影响）。 示例： 'Everybody be cool, (?:this) is a robbery!' 在应用快速修复后： 'Everybody be cool, this is a robbery!' 2021.1 最新变化",
                  "markdown": "报告不必要的非捕获组（对匹配结果无影响）。\n\n**示例：**\n\n\n      Everybody be cool, (?:this) is a robbery!\n\n在应用快速修复后：\n\n\n      Everybody be cool, this is a robbery!\n\n2021.1 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpUnnecessaryNonCapturingGroup",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TodoComment",
                "shortDescription": {
                  "text": "TODO 注释"
                },
                "fullDescription": {
                  "text": "报告代码中的 TODO 注释。 您可以在设置 | 编辑器 | TODO 中配置 TODO 注释的格式。 启用只对没有任何详细信息的 TODO 注释发出警告选项，以仅对不提供有关应完成任务的任何描述的空 TODO 注释发出警告。 禁用可报告所有 TODO 注释。",
                  "markdown": "报告代码中的 **TODO** 注释。\n\n您可以在[设置 \\| 编辑器 \\| TODO](settings://preferences.toDoOptions) 中配置 **TODO** 注释的格式。\n\n启用**只对没有任何详细信息的 TODO 注释发出警告**选项，以仅对不提供有关应完成任务的任何描述的空 TODO 注释发出警告。 禁用可报告所有 TODO 注释。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TodoComment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Json5StandardCompliance",
                "shortDescription": {
                  "text": "符合 JSON5 标准"
                },
                "fullDescription": {
                  "text": "报告 JSON5 文件中语言规范不一致的情况。",
                  "markdown": "报告 JSON5 文件中[语言规范](http://json5.org)不一致的情况。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Json5StandardCompliance",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON 和 JSON5",
                      "index": 9,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonDuplicatePropertyKeys",
                "shortDescription": {
                  "text": "对象文字中的重复键"
                },
                "fullDescription": {
                  "text": "报告对象文字中重复的键。",
                  "markdown": "报告对象文字中重复的键。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsonDuplicatePropertyKeys",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON 和 JSON5",
                      "index": 9,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlDeprecatedElement",
                "shortDescription": {
                  "text": "弃用的符号"
                },
                "fullDescription": {
                  "text": "报告弃用的 XML 元素或特性。 可以通过 XML 注释或带有 'deprecated' 文本的文档标记来标记符号。",
                  "markdown": "报告弃用的 XML 元素或特性。\n\n可以通过 XML 注释或带有 'deprecated' 文本的文档标记来标记符号。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlDeprecatedElement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRedundantNestedCharacterClass",
                "shortDescription": {
                  "text": "冗余嵌套字符类"
                },
                "fullDescription": {
                  "text": "报告非必要的嵌套字符类。 示例： '[a-c[x-z]]' 在应用快速修复后： '[a-cx-z]' 2020.2 最新变化",
                  "markdown": "报告非必要的嵌套字符类。\n\n**示例：**\n\n\n      [a-c[x-z]]\n\n在应用快速修复后：\n\n\n      [a-cx-z]\n\n2020.2 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpRedundantNestedCharacterClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlWrongAttributeValue",
                "shortDescription": {
                  "text": "特性值错误"
                },
                "fullDescription": {
                  "text": "报告不正确的 HTML 特性值。",
                  "markdown": "报告不正确的 HTML 特性值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlWrongAttributeValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlDefaultAttributeValue",
                "shortDescription": {
                  "text": "包含默认值的冗余特性"
                },
                "fullDescription": {
                  "text": "报告对 XML 特性默认值的冗余赋值。",
                  "markdown": "报告对 XML 特性默认值的冗余赋值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlDefaultAttributeValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpOctalEscape",
                "shortDescription": {
                  "text": "八进制转义"
                },
                "fullDescription": {
                  "text": "报告八进制转义（容易与反向引用混淆）。 使用十六进制转义可避免混淆。 示例： '\\07' 在应用快速修复后： '\\x07' 2017.1 最新变化",
                  "markdown": "报告八进制转义（容易与反向引用混淆）。 使用十六进制转义可避免混淆。\n\n**示例：**\n\n\n      \\07\n\n在应用快速修复后：\n\n\n      \\x07\n\n2017.1 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpOctalEscape",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedDefine",
                "shortDescription": {
                  "text": "未使用的定义"
                },
                "fullDescription": {
                  "text": "报告 RELAX-NG 文件 (XML 或 Compact 语法) 中未使用的命名模式 ('define')。 通过另一个文件中的 include 使用的 'define' 元素将被忽略。",
                  "markdown": "报告 RELAX-NG 文件 (XML 或 Compact 语法) 中未使用的命名模式 (`define`)。 通过另一个文件中的 include 使用的 `define` 元素将被忽略。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedDefine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RELAX NG",
                      "index": 52,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonSchemaCompliance",
                "shortDescription": {
                  "text": "符合 JSON 架构"
                },
                "fullDescription": {
                  "text": "报告 JSON 文件与分配给它的 JSON 模式之间的不一致。",
                  "markdown": "报告 JSON 文件与分配给它的 [JSON 模式](https://json-schema.org)之间的不一致。  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsonSchemaCompliance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON 和 JSON5",
                      "index": 9,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyDirectory",
                "shortDescription": {
                  "text": "空目录"
                },
                "fullDescription": {
                  "text": "报告空目录。 仅适用于代码 | 检查代码或代码 | 分析代码 | 通过名称运行检查，并且不会在编辑器中报告。 使用仅报告位于源文件夹下的空目录选项可以仅报告源根下的目录。",
                  "markdown": "报告空目录。\n\n仅适用于**代码 \\| 检查代码** 或**代码 \\| 分析代码 \\| 通过名称运行检查**，并且不会在编辑器中报告。\n\n使用**仅报告位于源文件夹下的空目录**选项可以仅报告源根下的目录。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyDirectory",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpAnonymousGroup",
                "shortDescription": {
                  "text": "匿名捕获组或数字反向引用"
                },
                "fullDescription": {
                  "text": "报告正则表达式中的匿名捕获组和数字反向引用。 只有正则表达式方言支持命名组和命名组引用，才支持这些用法。 命名组和命名反向引用可改进代码可读性，建议改用。 无需捕获时，使用非捕获组，即使用 '(?:xxx)' 而不是 '(xxx)'，可以提高匹配效率和减少需要使用的内存。 示例： '(\\d\\d\\d\\d)\\1' 更好的正则表达式模式如下： '(?<quad>\\d\\d\\d\\d)\\k<quad>' 2017.2 最新变化",
                  "markdown": "报告正则表达式中的匿名捕获组和数字反向引用。 只有正则表达式方言支持命名组和命名组引用，才支持这些用法。 命名组和命名反向引用可改进代码可读性，建议改用。 无需捕获时，使用非捕获组，即使用 `(?:xxx)` 而不是 `(xxx)`，可以提高匹配效率和减少需要使用的内存。\n\n**示例：**\n\n\n      (\\d\\d\\d\\d)\\1\n\n更好的正则表达式模式如下：\n\n\n      (?<quad>\\d\\d\\d\\d)\\k<quad>\n\n2017.2 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpAnonymousGroup",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckDtdRefs",
                "shortDescription": {
                  "text": "未解析的 DTD 引用"
                },
                "fullDescription": {
                  "text": "报告特定于 DTD 的引用（例如，对 XML 实体或 DTD 元素声明的引用）中的不一致。 适用于 DTD 和 XML 文件。",
                  "markdown": "报告特定于 DTD 的引用（例如，对 XML 实体或 DTD 元素声明的引用）中的不一致。 适用于 DTD 和 XML 文件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CheckDtdRefs",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonAsciiCharacters",
                "shortDescription": {
                  "text": "非 ASCII 字符"
                },
                "fullDescription": {
                  "text": "报告在异常上下文中使用非 ASCII 符号的代码元素。 示例： 标识符、字符串或注释中使用的非 ASCII 字符。 使用不同语言编写的标识符，例如带有使用西里尔文编写的字母 'C' 的 'myСollection'。 包含 Unicode 符号（如长划线和箭头）的注释或字符串。",
                  "markdown": "报告在异常上下文中使用非 ASCII 符号的代码元素。\n\n示例：\n\n* 标识符、字符串或注释中使用的非 ASCII 字符。\n* 使用不同语言编写的标识符，例如带有使用西里尔文编写的字母 **C** 的 `my`**С**`ollection`。\n* 包含 Unicode 符号（如长划线和箭头）的注释或字符串。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonAsciiCharacters",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "国际化",
                      "index": 77,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlUnresolvedReference",
                "shortDescription": {
                  "text": "未解析的引用"
                },
                "fullDescription": {
                  "text": "报告 XML 中的未解析引用。",
                  "markdown": "报告 XML 中的未解析引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlUnresolvedReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 41,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LossyEncoding",
                "shortDescription": {
                  "text": "有损编码"
                },
                "fullDescription": {
                  "text": "报告由于当前文档编码而无法显示的字符。 示例： 如果在带有 US-ASCII 字符集的文档中键入国际字符，保存时会丢失某些字符。 如果加载使用 ISO-8859-1 一字节字符集的 UTF-8 编码文件，某些字符将无法正确显示。 要解决此问题，可以直接在文件中指定编码来更改文件编码，例如编辑 XML 文件的 XML prolog 中的 'encoding=' 特性，或者在设置 | 编辑器 | 文件编码中更改相应选项。",
                  "markdown": "报告由于当前文档编码而无法显示的字符。\n\n示例：\n\n* 如果在带有 **US-ASCII** 字符集的文档中键入国际字符，保存时会丢失某些字符。\n* 如果加载使用 **ISO-8859-1** 一字节字符集的 **UTF-8** 编码文件，某些字符将无法正确显示。\n\n要解决此问题，可以直接在文件中指定编码来更改文件编码，例如编辑 XML 文件的 XML prolog 中的 `encoding=` 特性，或者在**设置 \\| 编辑器 \\| 文件编码**中更改相应选项。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LossyEncoding",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "国际化",
                      "index": 77,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRepeatedSpace",
                "shortDescription": {
                  "text": "连续空格"
                },
                "fullDescription": {
                  "text": "报告正则表达式中的多个连续空格。 由于空格默认不可见，因此，很难了解需要的空格数量。 使用单个空格和计数量词来替换连续空格可以让正则表达式更清晰易懂。 示例： '(     )' 在应用快速修复后： '( {5})' 2017.1 最新变化",
                  "markdown": "报告正则表达式中的多个连续空格。 由于空格默认不可见，因此，很难了解需要的空格数量。 使用单个空格和计数量词来替换连续空格可以让正则表达式更清晰易懂。\n\n**示例：**\n\n\n      (     )\n\n在应用快速修复后：\n\n\n      ( {5})\n\n\n2017.1 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpRepeatedSpace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpDuplicateAlternationBranch",
                "shortDescription": {
                  "text": "替代项中存在重复分支"
                },
                "fullDescription": {
                  "text": "报告正则表达式替换中的重复分支。 重复分支会降低匹配速度并导致表达式意图不明。 示例： '(alpha|bravo|charlie|alpha)' 在应用快速修复后： '(alpha|bravo|charlie)' 2017.1 最新变化",
                  "markdown": "报告正则表达式替换中的重复分支。 重复分支会降低匹配速度并导致表达式意图不明。\n\n**示例：**\n\n\n      (alpha|bravo|charlie|alpha)\n\n在应用快速修复后：\n\n\n      (alpha|bravo|charlie)\n\n2017.1 最新变化"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpDuplicateAlternationBranch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "正则表达式",
                      "index": 46,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IgnoreFileDuplicateEntry",
                "shortDescription": {
                  "text": "忽略文件重复项"
                },
                "fullDescription": {
                  "text": "报告忽略文件（例如 .gitignore、.hgignore）中的重复条目（模式）。 这些文件中的重复条目冗余，可以移除。 示例： '# 输出目录\n    /out/\n    /target/\n    /out/'",
                  "markdown": "报告忽略文件（例如 .gitignore、.hgignore）中的重复条目（模式）。 这些文件中的重复条目冗余，可以移除。\n\n示例：\n\n\n        # 输出目录\n        /out/\n        /target/\n        /out/\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IgnoreFileDuplicateEntry",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "版本控制",
                      "index": 79,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonStandardCompliance",
                "shortDescription": {
                  "text": "符合 JSON 标准"
                },
                "fullDescription": {
                  "text": "报告 JSON 文件与语言规范的以下差异： 行或块注释（可配置）。 多个顶层值（用于 JSON Lines 文件，可针对其他文件配置）。 对象或数组中的尾随逗号（可配置）。 用单引号引用的字符串。 属性键不是由双引号引用的字符串。 用 NaN 或正无穷大/负无穷大数值作为浮点文字（可配置）。",
                  "markdown": "报告 JSON 文件与[语言规范](https://tools.ietf.org/html/rfc7159)的以下差异：\n\n* 行或块注释（可配置）。\n* 多个顶层值（用于 JSON Lines 文件，可针对其他文件配置）。\n* 对象或数组中的尾随逗号（可配置）。\n* 用单引号引用的字符串。\n* 属性键不是由双引号引用的字符串。\n* 用 NaN 或正无穷大/负无穷大数值作为浮点文字（可配置）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JsonStandardCompliance",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON 和 JSON5",
                      "index": 9,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckEmptyScriptTag",
                "shortDescription": {
                  "text": "空标记"
                },
                "fullDescription": {
                  "text": "报告在某些浏览器中无法正常运行的空标记。 示例： '<html>\n    <script/>\n  </html>' 在应用快速修复后： '<html>\n    <script></script>\n  </html>'",
                  "markdown": "报告在某些浏览器中无法正常运行的空标记。\n\n**示例：**\n\n\n      <html>\n        <script/>\n      </html>\n\n在应用快速修复后：\n\n\n      <html>\n        <script></script>\n      </html>\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckEmptyScriptTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.database",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "MongoJSSideEffectsInspection",
                "shortDescription": {
                  "text": "具有副作用的语句"
                },
                "fullDescription": {
                  "text": "报告在数据源处于只读模式时可能导致副作用的语句。 有关启用只读模式的详细信息，请参阅 IDE 文档中的“为连接启用只读模式”。 禁用只读模式快速修复会关闭相应数据源的只读模式。 示例： 'db.my_collection.insertOne()'",
                  "markdown": "报告在数据源处于只读模式时可能导致副作用的语句。\n\n有关启用只读模式的详细信息，请参阅 [IDE 文档中的\"为连接启用只读模式\"](https://www.jetbrains.com/help/datagrip/configuring-database-connections.html#enable-read-only-mode-for-a-connection)。\n\n**禁用只读模式**快速修复会关闭相应数据源的只读模式。\n\n示例：\n\n\n    db.my_collection.insertOne()\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MongoJSSideEffects",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "MongoJS",
                      "index": 10,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MysqlLoadDataPathInspection",
                "shortDescription": {
                  "text": "LOAD 语句路径"
                },
                "fullDescription": {
                  "text": "报告 LOAD 语句中以波浪符号开头的路径。 示例（MySQL）： 'CREATE TABLE table_name (id int);\nLOAD DATA LOCAL INFILE '~/Documents/some_file.txt'\nINTO TABLE table_name FIELDS TERMINATED BY ',' LINES TERMINATED BY '\\n'\nIGNORE 1 LINES;' 使用文件的完整路径代替波浪符号。",
                  "markdown": "报告 LOAD 语句中以波浪符号开头的路径。\n\n示例（MySQL）：\n\n    CREATE TABLE table_name (id int);\n    LOAD DATA LOCAL INFILE '~/Documents/some_file.txt'\n    INTO TABLE table_name FIELDS TERMINATED BY ',' LINES TERMINATED BY '\\n'\n    IGNORE 1 LINES;\n\n使用文件的完整路径代替波浪符号。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MysqlLoadDataPath",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "MySQL",
                      "index": 14,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MongoJSExtSideEffectsInspection",
                "shortDescription": {
                  "text": "具有副作用的语句"
                },
                "fullDescription": {
                  "text": "报告在数据源处于只读模式时可能导致副作用的语句。 该快速修复会关闭相应数据源的只读模式。 示例： 'db.my_collection.insertOne()'",
                  "markdown": "报告在数据源处于只读模式时可能导致副作用的语句。\n\n该快速修复会关闭相应数据源的只读模式。\n\n示例：\n\n\n    db.my_collection.insertOne()\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MongoJSSideEffects",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "MongoJS",
                      "index": 10,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MysqlSpaceAfterFunctionNameInspection",
                "shortDescription": {
                  "text": "函数名称和左圆括号之间的空格"
                },
                "fullDescription": {
                  "text": "报告函数调用中函数名称和左圆括号之间的任何空格，这在默认情况下不受支持。 示例（MySQL）： 'SELECT MAX (qty) FROM orders;'",
                  "markdown": "报告函数调用中函数名称和左圆括号之间的任何空格，这在默认情况下不受支持。\n\n示例（MySQL）：\n\n    SELECT MAX (qty) FROM orders;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "MysqlSpaceAfterFunctionName",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "MySQL",
                      "index": 14,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlMissingReturnInspection",
                "shortDescription": {
                  "text": "缺少 return 语句"
                },
                "fullDescription": {
                  "text": "报告没有 RETURN 语句的函数。 示例（Oracle）： 'CREATE FUNCTION foo RETURN int AS\nBEGIN\nEND;' 'foo' 函数必须返回整数值，但函数体不返回任何内容。 要修正错误，请添加 RETURN 语句（例如，'RETURN 1;'）。 'CREATE FUNCTION foo RETURN int AS\nBEGIN\n RETURN 1;\nEND;'",
                  "markdown": "报告没有 RETURN 语句的函数。\n\n示例（Oracle）：\n\n    CREATE FUNCTION foo RETURN int AS\n    BEGIN\n    END;\n\n`foo` 函数必须返回整数值，但函数体不返回任何内容。 要修正错误，请添加 RETURN 语句（例如，`RETURN 1;`）。\n\n    CREATE FUNCTION foo RETURN int AS\n    BEGIN\n     RETURN 1;\n    END;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "SqlMissingReturn",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlUnusedSubqueryItemInspection",
                "shortDescription": {
                  "text": "未使用的子查询项"
                },
                "fullDescription": {
                  "text": "报告外部查询表达式中未引用的列、别名和其他子查询项。 示例（PostgreSQL）： 'CREATE TABLE for_subquery(id INT);\nSELECT a, q FROM (SELECT 1 AS a, 10 AS b, 2 + 3 AS q, id\n      FROM for_subquery) x;' 我们引用子查询中的别名 'a' 和 'q'。 但是 'b' 别名和 'id' 列在外部 SELECT 语句中没有被引用。 因此，'b' 和 'id' 将显示为灰色。",
                  "markdown": "报告外部查询表达式中未引用的列、别名和其他子查询项。\n\n示例（PostgreSQL）：\n\n    CREATE TABLE for_subquery(id INT);\n    SELECT a, q FROM (SELECT 1 AS a, 10 AS b, 2 + 3 AS q, id\n          FROM for_subquery) x;\n\n我们引用子查询中的别名 `a` 和 `q`。 但是 `b` 别名和 `id` 列在外部 SELECT 语句中没有被引用。 因此，`b` 和 `id` 将显示为灰色。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlUnused",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlCaseVsIfInspection",
                "shortDescription": {
                  "text": "使用 CASE 代替条件函数，反之亦然"
                },
                "fullDescription": {
                  "text": "报告 CASE 和 IF 可互换的情况。 示例（MySQL）： 'SELECT CASE\nWHEN C1 IS NULL THEN 1\nELSE 0\nEND\nFROM dual;' 您可以通过用 IF 替换 CASE 结构来缩短代码。 为此，请应用 替换为 'IF' 调用 意图操作。 示例代码如下所示： 'SELECT IF(C1 IS NULL, 1, 0)\nFROM dual;' 要将 IF 恢复为 CASE，请点击 IF 并应用替换为 CASE 表达式 意图操作。",
                  "markdown": "报告 CASE 和 IF 可互换的情况。\n\n示例（MySQL）：\n\n    SELECT CASE\n    WHEN C1 IS NULL THEN 1\n    ELSE 0\n    END\n    FROM dual;\n\n您可以通过用 IF 替换 CASE 结构来缩短代码。 为此，请应用 **替换为 'IF' 调用** 意图操作。 示例代码如下所示：\n\n    SELECT IF(C1 IS NULL, 1, 0)\n    FROM dual;\n\n要将 IF 恢复为 CASE，请点击 IF 并应用**替换为 CASE 表达式** 意图操作。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlCaseVsIf",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlShouldBeInGroupByInspection",
                "shortDescription": {
                  "text": "列应在 group by 子句中"
                },
                "fullDescription": {
                  "text": "报告不在 GROUP BY 子句或聚合函数调用中的列。 示例（Microsoft SQL 服务器）： 'CREATE TABLE t1 (a INT, b INT);\nSELECT a, b FROM t1 GROUP BY a;' 如果您运行 SELECT 查询，您将收到一个错误，因为 Microsoft SQL Server 需要 'b' 列在 GROUP BY 中或在聚合函数内使用。 以下两个示例将修复该错误。 'SELECT a, b FROM t1 GROUP BY a, b;\nSELECT a, max(b) max_b FROM t1 GROUP BY a;'",
                  "markdown": "报告不在 GROUP BY 子句或聚合函数调用中的列。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE TABLE t1 (a INT, b INT);\n    SELECT a, b FROM t1 GROUP BY a;\n\n如果您运行 SELECT 查询，您将收到一个错误，因为 Microsoft SQL Server 需要 `b` 列在 GROUP BY 中或在聚合函数内使用。 以下两个示例将修复该错误。\n\n    SELECT a, b FROM t1 GROUP BY a, b;\n    SELECT a, max(b) max_b FROM t1 GROUP BY a;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlShouldBeInGroupBy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlAutoIncrementDuplicateInspection",
                "shortDescription": {
                  "text": "自动增量重复"
                },
                "fullDescription": {
                  "text": "报告包含两个具有自动增量的列的表。 在 MySQL、Microsoft SQL Server 和 Db2 方言中，一个表只能有一个带有自动增量选项的字段，并且此字段必须是键。 示例（MySQL）： 'CREATE TABLE my_table\n(\n    id INT AUTO_INCREMENT,\n    c2 INT AUTO_INCREMENT,\n);' 'c2' 的 AUTO_INCREMENT 约束将被高亮显示，因为 'c1' 已经具有此约束。 要修正警告，您可以将 'id' 设为主键并删除 'c2' 的 AUTO_INCREMENT。 'CREATE TABLE my_table\n(\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    c2 INT,\n);'",
                  "markdown": "报告包含两个具有自动增量的列的表。 在 MySQL、Microsoft SQL Server 和 Db2 方言中，一个表只能有一个带有自动增量选项的字段，并且此字段必须是键。\n\n示例（MySQL）：\n\n    CREATE TABLE my_table\n    (\n        id INT AUTO_INCREMENT,\n        c2 INT AUTO_INCREMENT,\n    );\n\n`c2` 的 AUTO_INCREMENT 约束将被高亮显示，因为 `c1` 已经具有此约束。 要修正警告，您可以将 `id` 设为主键并删除 `c2` 的 AUTO_INCREMENT。\n\n    CREATE TABLE my_table\n    (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        c2 INT,\n    );\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlAutoIncrementDuplicate",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlStringLengthExceededInspection",
                "shortDescription": {
                  "text": "隐式字符串截断"
                },
                "fullDescription": {
                  "text": "报告超过定义的字符长度的变量。 示例（Microsoft SQL 服务器）： 'CREATE PROCEDURE test() AS\nBEGIN\nDECLARE myVarOk VARCHAR(5) = 'abcde';\nDECLARE myVarExceeded VARCHAR(5) = 'abcde12345';\n\nSET myVarOk = 'xyz';\nSET myVarExceeded = '123456789';\nEND;' 'myVarExceeded' 变量被定义为 'VARCHAR(5)' 但两个分配的值（''abcde12345'' 和 ''123456789'') 都超出了此限制。 您可以截断指定的值或增加定义的长度。 要增加长度，请使用增加类型长度 快速修复。 在应用快速修复后： 'CREATE PROCEDURE test() AS\nBEGIN\nDECLARE myVarOk VARCHAR(5) = 'abcde';\nDECLARE myVarExceeded VARCHAR(10) = 'abcde12345';\n\nSET myVarOk = 'xyz';\nSET myVarExceeded = '123456789';\nEND;'",
                  "markdown": "报告超过定义的字符长度的变量。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE PROCEDURE test() AS\n    BEGIN\n    DECLARE myVarOk VARCHAR(5) = 'abcde';\n    DECLARE myVarExceeded VARCHAR(5) = 'abcde12345';\n\n    SET myVarOk = 'xyz';\n    SET myVarExceeded = '123456789';\n    END;\n\n`myVarExceeded` 变量被定义为 `VARCHAR(5)` 但两个分配的值（`'abcde12345'` 和 `'123456789'`) 都超出了此限制。 您可以截断指定的值或增加定义的长度。\n要增加长度，请使用**增加类型长度** 快速修复。\n\n在应用快速修复后：\n\n    CREATE PROCEDURE test() AS\n    BEGIN\n    DECLARE myVarOk VARCHAR(5) = 'abcde';\n    DECLARE myVarExceeded VARCHAR(10) = 'abcde12345';\n\n    SET myVarOk = 'xyz';\n    SET myVarExceeded = '123456789';\n    END;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlStringLengthExceeded",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlDtInspection",
                "shortDescription": {
                  "text": "格式错误的日期/时间文字"
                },
                "fullDescription": {
                  "text": "报告日期和时间文字中的错误。 此检查在 MySQL、Oracle、Db2 和 H2 中可用。 示例（MySQL）： 'SELECT TIME '10 -12:13:14' FROM dual;\nSELECT TIME ' 12 : 13 : 14 ' FROM dual;\nSELECT TIME '12 13 14' FROM dual;\nSELECT TIME '12-13-14' FROM dual;\nSELECT TIME '12.13.14' FROM dual;\nSELECT TIME '12:13:' FROM dual;\nSELECT TIME '12:13' FROM dual;\nSELECT TIME '12:' FROM dual;' 在此示例中，日期会忽略 MySQL 日期文字和时间文字标准。 因此，这些将高亮显示。 有关 MySQL 中日期和时间文字的详细信息，请参阅 dev.mysql.com 上的 Date and Time Literals。 以下日期和时间文字对 MySQL 有效。 'SELECT TIME '12:13:14' FROM dual;\nSELECT TIME '12:13:14.555' FROM dual;\nSELECT TIME '12:13:14.' FROM dual;\nSELECT TIME '-12:13:14' FROM dual;\nSELECT TIME '10 12:13:14' FROM dual;\nSELECT TIME '-10 12:13:14' FROM dual;'",
                  "markdown": "报告日期和时间文字中的错误。 此检查在 MySQL、Oracle、Db2 和 H2 中可用。\n\n示例（MySQL）：\n\n    SELECT TIME '10 -12:13:14' FROM dual;\n    SELECT TIME ' 12 : 13 : 14 ' FROM dual;\n    SELECT TIME '12 13 14' FROM dual;\n    SELECT TIME '12-13-14' FROM dual;\n    SELECT TIME '12.13.14' FROM dual;\n    SELECT TIME '12:13:' FROM dual;\n    SELECT TIME '12:13' FROM dual;\n    SELECT TIME '12:' FROM dual;\n\n在此示例中，日期会忽略 MySQL 日期文字和时间文字标准。 因此，这些将高亮显示。\n有关 MySQL 中日期和时间文字的详细信息，请参阅 [dev.mysql.com 上的 Date and Time Literals](https://dev.mysql.com/doc/refman/8.0/en/date-and-time-literals.html)。\n\n以下日期和时间文字对 MySQL 有效。\n\n    SELECT TIME '12:13:14' FROM dual;\n    SELECT TIME '12:13:14.555' FROM dual;\n    SELECT TIME '12:13:14.' FROM dual;\n    SELECT TIME '-12:13:14' FROM dual;\n    SELECT TIME '10 12:13:14' FROM dual;\n    SELECT TIME '-10 12:13:14' FROM dual;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlDateTime",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlSideEffectsInspection",
                "shortDescription": {
                  "text": "具有副作用的语句"
                },
                "fullDescription": {
                  "text": "报告在只读连接期间可能会修改数据库的语句。 要为连接启用只读模式，请在数据库工具窗口（视图 | 工具窗口 | 数据库）中右键点击数据源，然后选择属性。 在数据源和驱动程序对话框中，点击选项标签页并选中只读复选框。 示例（MySQL）： 'CREATE TABLE foo(a INT);\nINSERT INTO foo VALUES (1);' 由于 'CREATE TABLE' 和'INSERT INTO' 语句会导致数据库修改，因此这些语句将在只读连接模式中高亮显示。",
                  "markdown": "报告在只读连接期间可能会修改数据库的语句。\n\n要为连接启用只读模式，请在**数据库** 工具窗口（**视图 \\| 工具窗口 \\| 数据库** ）中右键点击数据源，然后选择**属性** 。\n在**数据源和驱动程序** 对话框中，点击**选项** 标签页并选中**只读**复选框。\n\n示例（MySQL）：\n\n    CREATE TABLE foo(a INT);\n    INSERT INTO foo VALUES (1);\n\n由于 `CREATE TABLE` 和`INSERT INTO` 语句会导致数据库修改，因此这些语句将在只读连接模式中高亮显示。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlSideEffects",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlIllegalCursorStateInspection",
                "shortDescription": {
                  "text": "非法光标状态"
                },
                "fullDescription": {
                  "text": "报告 SQL 例程中的非法光标状态。 例程具有 CLOSE 或 FETCH 语句，但光标可能已被关闭。 例程具有 OPEN 语句，但光标可能已被打开。 示例（Microsoft SQL 服务器）： 'CREATE TABLE t(col INT);\n\nCREATE PROCEDURE foo() AS\nBEGIN\nDECLARE my_cursor CURSOR FOR SELECT * FROM t;\nDECLARE a INT;\nFETCH my_cursor INTO a;\nCLOSE my_cursor;\nEND;' 根据 docs.microsoft.com 上的 CLOSE (Transact-SQL)，必须为打开的光标执行 CLOSE，并且不允许对仅声明或已经关闭的光标执行 CLOSE。 因此，我们需要打开光标来修正警告。 'CREATE PROCEDURE foo() AS\nBEGIN\nDECLARE my_cursor CURSOR FOR SELECT * FROM t;\nDECLARE a INT;\nOPEN my_cursor;\nFETCH my_cursor INTO a;\nCLOSE my_cursor;\nEND;'",
                  "markdown": "报告 SQL 例程中的非法光标状态。\n\n* 例程具有 CLOSE 或 FETCH 语句，但光标可能已被关闭。\n* 例程具有 OPEN 语句，但光标可能已被打开。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE TABLE t(col INT);\n\n    CREATE PROCEDURE foo() AS\n    BEGIN\n    DECLARE my_cursor CURSOR FOR SELECT * FROM t;\n    DECLARE a INT;\n    FETCH my_cursor INTO a;\n    CLOSE my_cursor;\n    END;\n\n根据 [docs.microsoft.com 上的 CLOSE (Transact-SQL)](https://docs.microsoft.com/en-us/sql/t-sql/language-elements/close-transact-sql)，必须为打开的光标执行 CLOSE，并且不允许对仅声明或已经关闭的光标执行 CLOSE。 因此，我们需要打开光标来修正警告。\n\n    CREATE PROCEDURE foo() AS\n    BEGIN\n    DECLARE my_cursor CURSOR FOR SELECT * FROM t;\n    DECLARE a INT;\n    OPEN my_cursor;\n    FETCH my_cursor INTO a;\n    CLOSE my_cursor;\n    END;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlIllegalCursorState",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlJoinWithoutOnInspection",
                "shortDescription": {
                  "text": "'delete' 语句中的 'join' 子句不安全"
                },
                "fullDescription": {
                  "text": "报告可能更改整个数据库的语句的缺失条件检查。 例如，在没有 ON 或 WHERE 的 DELETE 语句中使用 JOIN 子句。 如果不对 JOIN 进行条件检查，DELETE 将删除整个表的内容。 示例（MySQL）： 'CREATE TABLE foo (a INT,b INT,c INT);\nCREATE TABLE bar (a INT,b INT,c INT);\n\nDELETE table1 FROM foo table1  INNER JOIN bar table2;'",
                  "markdown": "报告可能更改整个数据库的语句的缺失条件检查。\n\n例如，在没有 ON 或 WHERE 的 DELETE 语句中使用 JOIN 子句。 如果不对 JOIN 进行条件检查，DELETE 将删除整个表的内容。\n\n示例（MySQL）：\n\n    CREATE TABLE foo (a INT,b INT,c INT);\n    CREATE TABLE bar (a INT,b INT,c INT);\n\n    DELETE table1 FROM foo table1  INNER JOIN bar table2;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlJoinWithoutOn",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlDropIndexedColumnInspection",
                "shortDescription": {
                  "text": "索引依赖于列"
                },
                "fullDescription": {
                  "text": "报告尝试从索引表中删除列的情况。 此检查在 Microsoft SQL Server 和 Sybase ASE 中可用。 示例（Microsoft SQL 服务器）： 'CREATE TABLE test_index\n(\ncol  INT NOT NULL,\ncol2 INT NOT NULL,\ncol3 INT NOT NULL UNIQUE,\ncol4 VARCHAR(200)\n);\n\nCREATE UNIQUE INDEX aaaa ON test_index (col, col2);\n\nALTER TABLE test_index\nDROP COLUMN col;' 您不能删除 'col' 列，因为它在索引表中。 要删除该列，您需要先删除 'aaaa' 索引（例如 DROP INDEX aaaa）。",
                  "markdown": "报告尝试从索引表中删除列的情况。 此检查在 Microsoft SQL Server 和 Sybase ASE 中可用。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE TABLE test_index\n    (\n    col  INT NOT NULL,\n    col2 INT NOT NULL,\n    col3 INT NOT NULL UNIQUE,\n    col4 VARCHAR(200)\n    );\n\n    CREATE UNIQUE INDEX aaaa ON test_index (col, col2);\n\n    ALTER TABLE test_index\n    DROP COLUMN col;\n\n您不能删除 `col` 列，因为它在索引表中。 要删除该列，您需要先删除 `aaaa` 索引（例如 DROP INDEX aaaa）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlDropIndexedColumn",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlCheckUsingColumnsInspection",
                "shortDescription": {
                  "text": "检查 using 子句列"
                },
                "fullDescription": {
                  "text": "报告两个表中都不存在的 USING 子句中的列。 示例（MySQL）： 'CREATE TABLE t1 (i INT, j INT);\nCREATE TABLE t2 (k INT, l INT);\nSELECT * FROM t1 JOIN t2 USING (j);' 在 USING 子句中，列名必须存在于两个表中，SELECT 查询将使用给定的列名自动连接这些表。 由于我们在 't2' 中没有 'j' 列，我们可以使用 ON 重写查询。 ON 子句可以连接两个表中列名不匹配的表。 'SELECT * FROM t1 JOIN t2 ON t1.j = t2.l;'",
                  "markdown": "报告两个表中都不存在的 USING 子句中的列。\n\n示例（MySQL）：\n\n    CREATE TABLE t1 (i INT, j INT);\n    CREATE TABLE t2 (k INT, l INT);\n    SELECT * FROM t1 JOIN t2 USING (j);\n\n在 USING 子句中，列名必须存在于两个表中，SELECT 查询将使用给定的列名自动连接这些表。 由于我们在 `t2` 中没有 `j` 列，我们可以使用 ON 重写查询。 ON 子句可以连接两个表中列名不匹配的表。\n\n    SELECT * FROM t1 JOIN t2 ON t1.j = t2.l;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlCheckUsingColumns",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlInsertValuesInspection",
                "shortDescription": {
                  "text": "VALUE 子句基数"
                },
                "fullDescription": {
                  "text": "报告 VALUES 中的形参数目与目标表中的列数不匹配的情况。 示例（MySQL）： 'CREATE TABLE foo(a INT, b INT, c INT);\n\nINSERT INTO foo VALUES (1,2,3,4)' 'foo' 表有三列，但在 INSERT INTO 语句中我们传递了四列。",
                  "markdown": "报告 VALUES 中的形参数目与目标表中的列数不匹配的情况。\n\n示例（MySQL）：\n\n    CREATE TABLE foo(a INT, b INT, c INT);\n\n    INSERT INTO foo VALUES (1,2,3,4)\n\n`foo` 表有三列，但在 INSERT INTO 语句中我们传递了四列。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlInsertValues",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlConstantConditionInspection",
                "shortDescription": {
                  "text": "恒定条件"
                },
                "fullDescription": {
                  "text": "报告 WHERE 或 JOIN 子句中始终为 TRUE 或始终为 FALSE 的条件。 示例（MySQL）： 'CREATE TABLE t1 (a TEXT, b INT, c BOOLEAN);\nSELECT a FROM t1 WHERE 'Cat' = 'Cat';' ''Cat' = 'Cat'' 始终为 true，将被报告。",
                  "markdown": "报告 WHERE 或 JOIN 子句中始终为 TRUE 或始终为 FALSE 的条件。\n\n示例（MySQL）：\n\n    CREATE TABLE t1 (a TEXT, b INT, c BOOLEAN);\n    SELECT a FROM t1 WHERE 'Cat' = 'Cat';\n\n`'Cat' = 'Cat'` 始终为 true，将被报告。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlConstantCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlDialectInspection",
                "shortDescription": {
                  "text": "SQL 方言检测"
                },
                "fullDescription": {
                  "text": "报告未将方言分配给 SQL 文件的情况。 例如，当您打开一个新的 SQL 文件而没有为其分配方言时，您会看到一条通知，其中建议了最匹配的方言。 点击 使用<dialect> 链接以使用建议的方言。 或者，点击将方言更改为链接以选择其他方言。",
                  "markdown": "报告未将方言分配给 SQL 文件的情况。\n\n例如，当您打开一个新的 SQL 文件而没有为其分配方言时，您会看到一条通知，其中建议了最匹配的方言。 点击 **使用\\<dialect\\>** 链接以使用建议的方言。 或者，点击**将方言更改为**链接以选择其他方言。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlDialectInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlRedundantElseNullInspection",
                "shortDescription": {
                  "text": "冗余 ELSE NULL 子句"
                },
                "fullDescription": {
                  "text": "报告冗余的 ELSE NULL 子句。 示例（MySQL）： 'SELECT CASE WHEN 2 > 1 THEN 'OK' ELSE NULL END AS alias FROM foo;' 'ELSE NULL' 部分永远不会被执行，可以省略。",
                  "markdown": "报告冗余的 ELSE NULL 子句。\n\n示例（MySQL）：\n\n    SELECT CASE WHEN 2 > 1 THEN 'OK' ELSE NULL END AS alias FROM foo;\n\n`ELSE NULL` 部分永远不会被执行，可以省略。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlRedundantElseNull",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MysqlParsingInspection",
                "shortDescription": {
                  "text": "8.0 以前的版本中不受支持的语法"
                },
                "fullDescription": {
                  "text": "报告查询中 UNION 的无效用法。 该检查适用于早于 8.0 的 MySQL 版本。 示例（MySQL）： 'SELECT * FROM (SELECT 1 UNION (SELECT 1 UNION SELECT 2)) a;'",
                  "markdown": "报告查询中 UNION 的无效用法。\n\n该检查适用于早于 8.0 的 MySQL 版本。\n\n示例（MySQL）：\n\n\n    SELECT * FROM (SELECT 1 UNION (SELECT 1 UNION SELECT 2)) a;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MysqlParsing",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "MySQL",
                      "index": 14,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlCallNotationInspection",
                "shortDescription": {
                  "text": "使用命名实参和位置实参"
                },
                "fullDescription": {
                  "text": "报告位置实参在命名实参之后的调用。 适用于 PostgreSQL、Oracle 和 Db2。 示例（PostgreSQL 中）： 'CREATE FUNCTION foo(a int, b int, c int) RETURNS int\n    LANGUAGE plpgsql AS\n$$\nBEGIN\n    RETURN a + b + c;\nEND\n$$;\nSELECT foo(a => 1, b => 2, c => 3);\n  -- `3` 在命名实参之后\nSELECT foo(1, b => 2, 3);\n  -- `1` 和 `3` 在命名实参之后\nSELECT foo(b => 2, 1, 3);'",
                  "markdown": "报告位置实参在命名实参之后的调用。 适用于 PostgreSQL、Oracle 和 Db2。\n\n示例（PostgreSQL 中）：\n\n    CREATE FUNCTION foo(a int, b int, c int) RETURNS int\n        LANGUAGE plpgsql AS\n    $$\n    BEGIN\n        RETURN a + b + c;\n    END\n    $$;\n    SELECT foo(a => 1, b => 2, c => 3);\n      -- `3` 在命名实参之后\n    SELECT foo(1, b => 2, 3);\n      -- `1` 和 `3` 在命名实参之后\n    SELECT foo(b => 2, 1, 3);\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "SqlCallNotation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MongoJSExtDeprecationInspection",
                "shortDescription": {
                  "text": "弃用的元素"
                },
                "fullDescription": {
                  "text": "报告 MongoDB 和 JavaScript 代码中已弃用的方法的用法。 快速修复用推荐的替代方法替换了已弃用的方法。 示例： 'db.my_collection.insert()' 在应用快速修复后： 'db.my_collection.insertOne()'",
                  "markdown": "报告 MongoDB 和 JavaScript 代码中已弃用的方法的用法。\n\n快速修复用推荐的替代方法替换了已弃用的方法。\n\n示例：\n\n\n      db.my_collection.insert()\n\n在应用快速修复后：\n\n\n      db.my_collection.insertOne()\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MongoJSDeprecation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "MongoJS",
                      "index": 10,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlDuplicateColumnInspection",
                "shortDescription": {
                  "text": "SELECT 中的重复列名"
                },
                "fullDescription": {
                  "text": "报告 SELECT 列表中列别名的重复名称。 示例（Sybase ASE）： 'CREATE TABLE t1 (a TEXT, b INT, c INT);\n\nSELECT a AS x, b AS x FROM t1;' 'x' 别名用于 'a' 和 'b' 列。 这些分配高亮显示为错误，因为您不能对 Sybase ASE 中的列使用相同的别名。",
                  "markdown": "报告 SELECT 列表中列别名的重复名称。\n\n示例（Sybase ASE）：\n\n    CREATE TABLE t1 (a TEXT, b INT, c INT);\n\n    SELECT a AS x, b AS x FROM t1;\n\n`x` 别名用于 `a` 和 `b` 列。 这些分配高亮显示为错误，因为您不能对 Sybase ASE 中的列使用相同的别名。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlDuplicateColumn",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlShadowingAliasInspection",
                "shortDescription": {
                  "text": "列被别名隐藏"
                },
                "fullDescription": {
                  "text": "报告 SELECT 中别名名称与 FROM 子句中的列名称匹配。 示例（MySQL）： 'CREATE TABLE foo (a INT, b INT, c INT);\nSELECT a b, c FROM foo;' 'a' 列使用 'b' 别名，但 'b' 名称也被 'foo' 表中的列使用。",
                  "markdown": "报告 SELECT 中别名名称与 FROM 子句中的列名称匹配。\n\n示例（MySQL）：\n\n    CREATE TABLE foo (a INT, b INT, c INT);\n    SELECT a b, c FROM foo;\n\n`a` 列使用 `b` 别名，但 `b` 名称也被 `foo` 表中的列使用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlShadowingAlias",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MongoJSDeprecationInspection",
                "shortDescription": {
                  "text": "弃用的元素"
                },
                "fullDescription": {
                  "text": "报告 MongoDB 和 JavaScript 代码中已弃用的方法的用法。 快速修复用推荐的替代方法替换了已弃用的方法。 示例： 'db.my_collection.insert()' 在应用快速修复后： 'db.my_collection.insertOne()'",
                  "markdown": "报告 MongoDB 和 JavaScript 代码中已弃用的方法的用法。\n\n快速修复用推荐的替代方法替换了已弃用的方法。\n\n示例：\n\n    db.my_collection.insert()\n\n在应用快速修复后：\n\n    db.my_collection.insertOne()\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MongoJSDeprecation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "MongoJS",
                      "index": 10,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlTypeInspection",
                "shortDescription": {
                  "text": "类型兼容性"
                },
                "fullDescription": {
                  "text": "报告与类型相关的错误。",
                  "markdown": "报告与类型相关的错误。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlUnreachableCodeInspection",
                "shortDescription": {
                  "text": "不可到达的代码"
                },
                "fullDescription": {
                  "text": "报告 SQL 例程中不可到达的语句。 示例（Microsoft SQL 服务器）： 'CREATE FUNCTION foo() RETURNS INT AS\nBEGIN\n    THROW;\n    RETURN 1;\nEND;' 在 Microsoft SQL Server 中，'THROW' 语句会抛出异常并将执行转移到 TRY...CATCH 结构的 CATCH 块。 因此，'RETURN 1;' 部分将永远不会被执行。",
                  "markdown": "报告 SQL 例程中不可到达的语句。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE FUNCTION foo() RETURNS INT AS\n    BEGIN\n        THROW;\n        RETURN 1;\n    END;\n\n在 Microsoft SQL Server 中，`THROW` 语句会抛出异常并将执行转移到 TRY...CATCH 结构的 CATCH 块。 因此，`RETURN 1;` 部分将永远不会被执行。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlUnreachable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlUnicodeStringLiteralInspection",
                "shortDescription": {
                  "text": "SQL 中的 Unicode 用法"
                },
                "fullDescription": {
                  "text": "报告使用没有 'N' 前缀的国家字符的字符串文字。 如果没有 N 前缀，字符串将被转换为数据库的默认代码页面。 此默认代码页面可能无法识别某些字符。 有关更多信息，请参阅 docs.microsoft.com 上的“nchar 和 nvarchar”(Transact-SQL) 页面。 示例（Microsoft SQL 服务器）： 'SELECT 'abcde' AS a;\nSELECT N'abcde' AS b;\nSELECT 'абвгд' AS c;\nSELECT N'абвгд' AS d;' 'SELECT 'абвгд' AS c;' 没有 'N' 前缀，''абвгд'' 部分将被高亮显示。",
                  "markdown": "报告使用没有 `N` 前缀的国家字符的字符串文字。\n\n如果没有 N 前缀，字符串将被转换为数据库的默认代码页面。 此默认代码页面可能无法识别某些字符。 有关更多信息，请参阅 [docs.microsoft.com 上的\"nchar 和 nvarchar\"(Transact-SQL)](https://docs.microsoft.com/en-us/sql/t-sql/data-types/nchar-and-nvarchar-transact-sql) 页面。\n\n示例（Microsoft SQL 服务器）：\n\n    SELECT 'abcde' AS a;\n    SELECT N'abcde' AS b;\n    SELECT 'абвгд' AS c;\n    SELECT N'абвгд' AS d;\n\n`SELECT 'абвгд' AS c;` 没有 `N` 前缀，`'абвгд'` 部分将被高亮显示。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlUnicodeStringLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlUnusedVariableInspection",
                "shortDescription": {
                  "text": "未使用的变量"
                },
                "fullDescription": {
                  "text": "报告未使用的实参、变量或形参。 示例（PostgreSQL）： 'CREATE FUNCTION foo(PARAMUSED INT, PARAMUNUSED INT) RETURNS INT AS\n$$\nBEGIN\n    RETURN PARAMUSED;\nEND\n$$ LANGUAGE plpgsql;' 'PARAMUNUSED' 形参未在函数中使用，可能会被删除。",
                  "markdown": "报告未使用的实参、变量或形参。\n\n示例（PostgreSQL）：\n\n    CREATE FUNCTION foo(PARAMUSED INT, PARAMUNUSED INT) RETURNS INT AS\n    $$\n    BEGIN\n        RETURN PARAMUSED;\n    END\n    $$ LANGUAGE plpgsql;\n\n`PARAMUNUSED` 形参未在函数中使用，可能会被删除。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlUnused",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlNoDataSourceInspection",
                "shortDescription": {
                  "text": "未配置数据源"
                },
                "fullDescription": {
                  "text": "报告数据库工具窗口中缺少数据源（视图 | 工具窗口 | 数据库）。",
                  "markdown": "报告**数据库** 工具窗口中缺少数据源（**视图 \\| 工具窗口 \\| 数据库**）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlNoDataSourceInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlResolveInspection",
                "shortDescription": {
                  "text": "未解析的引用"
                },
                "fullDescription": {
                  "text": "报告未解析的 SQL 引用。 示例（MySQL）： 'CREATE TABLE users(id INT, name VARCHAR(40));\nCREATE TABLE admins(id INT, col1 INT);\n\nSELECT users.id, admins.id FROM admins WHERE admins.id > 1;' 'users.id' 列未解析，因为 FROM 子句中缺少 'users' 表。",
                  "markdown": "报告未解析的 SQL 引用。\n\n示例（MySQL）：\n\n    CREATE TABLE users(id INT, name VARCHAR(40));\n    CREATE TABLE admins(id INT, col1 INT);\n\n    SELECT users.id, admins.id FROM admins WHERE admins.id > 1;\n\n`users.id` 列未解析，因为 FROM 子句中缺少 `users` 表。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "SqlResolve",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PgSelectFromProcedureInspection",
                "shortDescription": {
                  "text": "Postgres: 从过程调用中 select"
                },
                "fullDescription": {
                  "text": "报告从函数执行 SELECT 或执行没有类型别名的 DBLINK（例如 'AS t1 (s VARCHAR)'）的情况。 此要求不适用于标量函数。 示例（PostgreSQL）： 'CREATE FUNCTION produce_a_table() RETURNS RECORD AS $$\nSELECT 1;\n$$ LANGUAGE sql;\nSELECT * FROM produce_a_table() AS s (c1 INT);\nSELECT * FROM produce_a_table() AS s (c1);\nSELECT * FROM DBLINK('dbname=mydb', 'SELECT proname, prosrc FROM pg_proc') AS t1;' 'AS s (c1 INT)' 具有类型别名，而 'AS s (c1)' 和 'AS t1' 没有。 在这种情况下，将高亮显示 'produce_a_table()' 和 'DBLINK()' 的第二次调用。",
                  "markdown": "报告从函数执行 SELECT 或执行没有类型别名的 DBLINK（例如 ` AS t1 (s VARCHAR) `）的情况。\n\n此要求不适用于标量函数。\n\n示例（PostgreSQL）：\n\n    CREATE FUNCTION produce_a_table() RETURNS RECORD AS $$\n    SELECT 1;\n    $$ LANGUAGE sql;\n    SELECT * FROM produce_a_table() AS s (c1 INT);\n    SELECT * FROM produce_a_table() AS s (c1);\n    SELECT * FROM DBLINK('dbname=mydb', 'SELECT proname, prosrc FROM pg_proc') AS t1;\n\n`AS s (c1 INT)` 具有类型别名，而 `AS s (c1)` 和 `AS t1` 没有。\n在这种情况下，将高亮显示 `produce_a_table()` 和 `DBLINK()` 的第二次调用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PgSelectFromProcedure",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "PostgreSQL",
                      "index": 67,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlCurrentSchemaInspection",
                "shortDescription": {
                  "text": "已内省当前控制台架构"
                },
                "fullDescription": {
                  "text": "报告当前会话中未自省的架构和数据库。 例如，当您尝试在未内省的架构中创建表时，可能会出现此警告。 内省是一种检查数据源的方法。 执行内省时，将从数据库中检索结构信息以检测各种对象及其特性。例如，可能是表、列、函数和其他元素。",
                  "markdown": "报告当前会话中未自省的架构和数据库。\n\n例如，当您尝试在未内省的架构中创建表时，可能会出现此警告。\n\n内省是一种检查数据源的方法。 执行内省时，将从数据库中检索结构信息以检测各种对象及其特性。例如，可能是表、列、函数和其他元素。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlCurrentSchemaInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlMisleadingReferenceInspection",
                "shortDescription": {
                  "text": "误导性引用"
                },
                "fullDescription": {
                  "text": "报告 SQL 代码中不明确的引用。 例如，当名称同时引用表列和例程形参时。 由于违反直观的解析逻辑，此类代码的执行可能会导致错误或意外结果。 通常，范围更局部的名称具有更高的优先级。 示例（PostgreSQL）： 'CREATE TABLE foo\n(\n    id   INT,\n    name VARCHAR(5)\n);\nCREATE FUNCTION func(name VARCHAR(5)) RETURNS INT AS\n$$\nDECLARE\n    b INT;\nBEGIN\n      -- `name` 不明确，因为它被用作列名和形参\n    SELECT COUNT(*) INTO b FROM foo t WHERE t.name = name;\n    RETURN b;\nEND;\n$$ LANGUAGE plpgsql;' 在 PostgreSQL 中，您可以使用 '#variable_conflict' 指令来明确指定正确的引用。 例如，使用 '#variable_conflict use_column' 引用列名，或使用 '#variable_conflict use_variable' 引用形参。 'CREATE TABLE foo\n(\n    id   INT,\n    name VARCHAR(5)\n);\nCREATE FUNCTION func(name VARCHAR(5)) RETURNS INT AS\n$$\n    #variable_conflict use_column\nDECLARE\n    b INT;\nBEGIN\n    SELECT COUNT(*) INTO b FROM foo t WHERE t.name = name;\n    RETURN b;\nEND;\n$$ LANGUAGE plpgsql;'",
                  "markdown": "报告 SQL 代码中不明确的引用。\n\n例如，当名称同时引用表列和例程形参时。 由于违反直观的解析逻辑，此类代码的执行可能会导致错误或意外结果。 通常，范围更局部的名称具有更高的优先级。\n\n示例（PostgreSQL）：\n\n    CREATE TABLE foo\n    (\n        id   INT,\n        name VARCHAR(5)\n    );\n    CREATE FUNCTION func(name VARCHAR(5)) RETURNS INT AS\n    $$\n    DECLARE\n        b INT;\n    BEGIN\n          -- `name` 不明确，因为它被用作列名和形参\n        SELECT COUNT(*) INTO b FROM foo t WHERE t.name = name;\n        RETURN b;\n    END;\n    $$ LANGUAGE plpgsql;\n\n在 PostgreSQL 中，您可以使用 `#variable_conflict` 指令来明确指定正确的引用。 例如，使用 `#variable_conflict use_column` 引用列名，或使用 `#variable_conflict use_variable` 引用形参。\n\n    CREATE TABLE foo\n    (\n        id   INT,\n        name VARCHAR(5)\n    );\n    CREATE FUNCTION func(name VARCHAR(5)) RETURNS INT AS\n    $$\n        #variable_conflict use_column\n    DECLARE\n        b INT;\n    BEGIN\n        SELECT COUNT(*) INTO b FROM foo t WHERE t.name = name;\n        RETURN b;\n    END;\n    $$ LANGUAGE plpgsql;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlMisleadingReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlInsertIntoGeneratedColumnInspection",
                "shortDescription": {
                  "text": "插入到生成的列中"
                },
                "fullDescription": {
                  "text": "报告将值赋给生成的列的 INSERT 语句。 可以读取生成的列，但不能直接写入其值。 示例（PostgreSQL）： 'CREATE TABLE foo\n(\n   col1 INT,\n   col2 INT GENERATED ALWAYS AS (col1 + 1) STORED\n);\nINSERT INTO foo(col1, col2) VALUES (1, 2);'\n 您不能将 '2' 插入到 'col2' 列中，因为此列已生成。 要使此脚本正常工作，您可以将 '2' 更改为 DEFAULT。 'INSERT INTO foo(col1, col2) VALUES (1, DEFAULT);'",
                  "markdown": "报告将值赋给生成的列的 INSERT 语句。 可以读取生成的列，但不能直接写入其值。\n\n示例（PostgreSQL）：\n\n    CREATE TABLE foo\n    (\n       col1 INT,\n       col2 INT GENERATED ALWAYS AS (col1 + 1) STORED\n    );\n    INSERT INTO foo(col1, col2) VALUES (1, 2);\n\n您不能将 `2` 插入到 `col2` 列中，因为此列已生成。\n要使此脚本正常工作，您可以将 `2` 更改为 DEFAULT。\n`INSERT INTO foo(col1, col2) VALUES (1, DEFAULT);`"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlInsertIntoGeneratedColumn",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlRedundantLimitInspection",
                "shortDescription": {
                  "text": "查询中的冗余行限制"
                },
                "fullDescription": {
                  "text": "报告查询中限制行的冗余子句，例如 FETCH 和 LIMIT。 示例（PostgreSQL）： 'CREATE TABLE foo(a INT);\n\nSELECT * FROM foo WHERE EXISTS(SELECT * FROM foo LIMIT 2);\nSELECT * FROM foo WHERE EXISTS(SELECT * FROM foo FETCH FIRST 2 ROWS ONLY);' 要修复警告，您可以将 OFFSET 添加到限制子句。 如果缺少 OFFSET，则 LIMIT 是多余的，因为 LIMIT 的用法不会影响 EXISTS 的运算结果。 在 OFFSET 的情况下，我们跳过前 'N' 行，这将影响输出。 'SELECT * FROM foo WHERE EXISTS(SELECT * FROM foo OFFSET 1 ROW LIMIT 2);\nSELECT * FROM foo WHERE EXISTS(SELECT * FROM foo OFFSET 1 ROW FETCH FIRST 2 ROWS ONLY);'",
                  "markdown": "报告查询中限制行的冗余子句，例如 FETCH 和 LIMIT。\n\n示例（PostgreSQL）：\n\n    CREATE TABLE foo(a INT);\n\n    SELECT * FROM foo WHERE EXISTS(SELECT * FROM foo LIMIT 2);\n    SELECT * FROM foo WHERE EXISTS(SELECT * FROM foo FETCH FIRST 2 ROWS ONLY);\n\n要修复警告，您可以将 OFFSET 添加到限制子句。 如果缺少 OFFSET，则 LIMIT 是多余的，因为 LIMIT 的用法不会影响 EXISTS 的运算结果。 在 OFFSET 的情况下，我们跳过前 `N` 行，这将影响输出。\n\n    SELECT * FROM foo WHERE EXISTS(SELECT * FROM foo OFFSET 1 ROW LIMIT 2);\n    SELECT * FROM foo WHERE EXISTS(SELECT * FROM foo OFFSET 1 ROW FETCH FIRST 2 ROWS ONLY);\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlRedundantLimit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlInsertNullIntoNotNullInspection",
                "shortDescription": {
                  "text": "将 NULL 插入 NOT NULL 列"
                },
                "fullDescription": {
                  "text": "报告将 NULL 值插入仅接受 NOT NULL 值的列的情况。 示例（Microsoft SQL 服务器）： 'CREATE TABLE br2 (\nid INT NOT NULL,\ncol1 NVARCHAR (20) NOT NULL,\ncol2 NVARCHAR (20) NOT NULL,\n);\n--\nINSERT INTO br2 (id, col1, col2)\nVALUES (1, NULL, NULL);' 您不能在 'col1' 和 'col2' 中插入 NULL 值，因为它们被定义为 NOT NULL。 如果按原样运行脚本，则会收到错误消息。 要修复此代码，请将 VALUES 部分中的 NULL 替换为值（例如，'42' 和 ''bird''）。 INSERT INTO br2 (id, col1, col2)\nVALUES (1, 42, 'bird');",
                  "markdown": "报告将 NULL 值插入仅接受 NOT NULL 值的列的情况。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE TABLE br2 (\n    id INT NOT NULL,\n    col1 NVARCHAR (20) NOT NULL,\n    col2 NVARCHAR (20) NOT NULL,\n    );\n    --\n    INSERT INTO br2 (id, col1, col2)\n    VALUES (1, NULL, NULL);\n\n您不能在 `col1` 和 `col2` 中插入 NULL 值，因为它们被定义为 NOT NULL。 如果按原样运行脚本，则会收到错误消息。 要修复此代码，请将 VALUES 部分中的 NULL 替换为值（例如，`42` 和 `'bird'`）。\n\n```\nINSERT INTO br2 (id, col1, col2)\nVALUES (1, 42, 'bird');\n```"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlInsertNullIntoNotNull",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlDerivedTableAliasInspection",
                "shortDescription": {
                  "text": "每个派生表都应具有别名"
                },
                "fullDescription": {
                  "text": "报告没有别名的派生表。 示例（MySQL）： 'CREATE TABLE table1 (id INT, name VARCHAR(20), cats FLOAT);\nCREATE TABLE table2 (id INT, age INTEGER);\n\nSELECT id AS ID, name, cats, age\nFROM (SELECT table1.id, name, cats, age\nFROM table1\nJOIN table2 ON table1.id = table2.id);' 根据 dev.mysql.com 上的 Derived Tables，别名是强制的。 您可以使用引入别名快速修复来添加别名。 在应用快速修复后： 'SELECT id AS ID, name, cats, age\nFROM (SELECT table1.id, name, cats, age\nFROM table1\nJOIN table2 ON table1.id = table2.id);'",
                  "markdown": "报告没有别名的派生表。\n\n示例（MySQL）：\n\n    CREATE TABLE table1 (id INT, name VARCHAR(20), cats FLOAT);\n    CREATE TABLE table2 (id INT, age INTEGER);\n\n    SELECT id AS ID, name, cats, age\n    FROM (SELECT table1.id, name, cats, age\n    FROM table1\n    JOIN table2 ON table1.id = table2.id);\n\n根据 [dev.mysql.com 上的 Derived Tables](https://dev.mysql.com/doc/refman/8.0/en/derived-tables.html)，别名是强制的。 您可以使用**引入别名**快速修复来添加别名。\n\n在应用快速修复后：\n\n    SELECT id AS ID, name, cats, age\n    FROM (SELECT table1.id, name, cats, age\n    FROM table1\n    JOIN table2 ON table1.id = table2.id);\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlDerivedTableAlias",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MsBuiltinInspection",
                "shortDescription": {
                  "text": "内置函数"
                },
                "fullDescription": {
                  "text": "报告 ISNULL 函数中字符串实参的截断。 ISNULL 语法是 'ISNULL(check_expression, replacement_value)'。 根据 docs.microsoft.com 上的 ISNULL，如果 'replacement_value' 比 'check_expression' 长，'replacement_value' 将被截断。 示例（Microsoft SQL 服务器）： 'DECLARE @name1 VARCHAR(2) = NULL;\nDECLARE @name2 VARCHAR(10) = 'Example';\nDECLARE @name3 VARCHAR(2) = 'Hi';\n\n  -- `@name2` 是 VARCHAR(10) 并且将被截断\nSELECT ISNULL(@name1, @name2);\n\n  -- `@name3` 是 VARCHAR(2)（作为 `@name1`）并且不会被截断\nSELECT ISNULL(@name1, @name3);'",
                  "markdown": "报告 ISNULL 函数中字符串实参的截断。\n\nISNULL 语法是 `ISNULL(check_expression, replacement_value)`。\n\n根据 [docs.microsoft.com 上的 ISNULL](https://docs.microsoft.com/en-us/sql/t-sql/functions/isnull-transact-sql)，如果 `replacement_value` 比 `check_expression` 长，`replacement_value` 将被截断。\n\n示例（Microsoft SQL 服务器）：\n\n    DECLARE @name1 VARCHAR(2) = NULL;\n    DECLARE @name2 VARCHAR(10) = 'Example';\n    DECLARE @name3 VARCHAR(2) = 'Hi';\n\n      -- `@name2` 是 VARCHAR(10) 并且将被截断\n    SELECT ISNULL(@name1, @name2);\n\n      -- `@name3` 是 VARCHAR(2)（作为 `@name1`）并且不会被截断\n    SELECT ISNULL(@name1, @name3);\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MssqlBuiltin",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL Server",
                      "index": 69,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlTriggerTransitionInspection",
                "shortDescription": {
                  "text": "触发器中的可疑代码"
                },
                "fullDescription": {
                  "text": "报告触发器中转换表变量的不正确用法。 示例 (HSQLDB)： 'CREATE TABLE foo(a INT);\n\nCREATE TRIGGER trg\n AFTER DELETE ON foo\nBEGIN\n   SELECT * FROM NEW;\nEND;\n\nCREATE TRIGGER trig AFTER INSERT ON foo\n   REFERENCING OLD ROW AS newrow\n   FOR EACH ROW WHEN (a > 1)\n   INSERT INTO foo VALUES (1)' 在 HSQLDB 中，DELETE 触发器只能用于 OLD 状态，而 INSERT 触发器只能用于 NEW 状态。 因此，在前面的示例中，'SELECT * FROM NEW;' 中的 NEW 和 'REFERENCING OLD ROW AS newrow' 中的 OLD 将被高亮显示。",
                  "markdown": "报告触发器中转换表变量的不正确用法。\n\n示例 (HSQLDB)：\n\n    CREATE TABLE foo(a INT);\n\n    CREATE TRIGGER trg\n     AFTER DELETE ON foo\n    BEGIN\n       SELECT * FROM NEW;\n    END;\n\n    CREATE TRIGGER trig AFTER INSERT ON foo\n       REFERENCING OLD ROW AS newrow\n       FOR EACH ROW WHEN (a > 1)\n       INSERT INTO foo VALUES (1)\n\n在 HSQLDB 中，DELETE 触发器只能用于 OLD 状态，而 INSERT 触发器只能用于 NEW 状态。 因此，在前面的示例中，`SELECT * FROM NEW;` 中的 NEW 和 `REFERENCING OLD ROW AS newrow` 中的 OLD 将被高亮显示。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlTriggerTransition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlMultipleLimitClausesInspection",
                "shortDescription": {
                  "text": "查询中的多个行限制/偏移子句"
                },
                "fullDescription": {
                  "text": "报告单个查询中多个行限制子句的使用情况。 示例（Microsoft SQL 服务器）： 'create table foo(a int);\nselect top 1 * from foo order by a offset 10 rows fetch next 20 rows only;' SELECT TOP 子句用于指定必须只返回 1 条记录。 FETCH 子句指定在处理完 OFFSET 子句后要返回的行数。 但是因为我们已经有了 SELECT TOP 限制子句，所以 FETCH 子句可能是冗余的。",
                  "markdown": "报告单个查询中多个行限制子句的使用情况。\n\n示例（Microsoft SQL 服务器）：\n\n    create table foo(a int);\n    select top 1 * from foo order by a offset 10 rows fetch next 20 rows only;\n\nSELECT TOP 子句用于指定必须只返回 1 条记录。 FETCH 子句指定在处理完 OFFSET 子句后要返回的行数。 但是因为我们已经有了 SELECT TOP 限制子句，所以 FETCH 子句可能是冗余的。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlMultipleLimitClauses",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlNamedArgumentsInspection",
                "shortDescription": {
                  "text": "应使用命名实参"
                },
                "fullDescription": {
                  "text": "报告在例程调用中不带名称使用的实参。 默认情况下，此检查处于禁用状态。 有关命名形参和未命名形参之间差异的详细信息，请参阅 docs.microsoft.com 上的 Binding Parameters by Name (Named Parameters) 。 示例（Microsoft SQL 服务器）： 'CREATE FUNCTION foo(n INT, m INT) RETURNS INT AS\nBEGIN\n    RETURN n + m;\nEND;\n\nCREATE PROCEDURE test AS\nBEGIN\n    foo n = 1, m = 2;\n\n--- 以下调用缺少形参名称，会被高亮显示\n    foo 1, 2;\nEND;' 'foo 1, 2;' 调用中的形参 '1, 2' 突出显示，因为它们缺少名称。",
                  "markdown": "报告在例程调用中不带名称使用的实参。 默认情况下，此检查处于禁用状态。\n\n有关命名形参和未命名形参之间差异的详细信息，请参阅 [docs.microsoft.com 上的 Binding Parameters by Name (Named Parameters)](https://docs.microsoft.com/en-us/sql/odbc/reference/develop-app/binding-parameters-by-name-named-parameters)。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE FUNCTION foo(n INT, m INT) RETURNS INT AS\n    BEGIN\n        RETURN n + m;\n    END;\n\n    CREATE PROCEDURE test AS\n    BEGIN\n        foo n = 1, m = 2;\n\n    --- 以下调用缺少形参名称，会被高亮显示\n        foo 1, 2;\n    END;\n\n`foo 1, 2;` 调用中的形参 `1, 2` 突出显示，因为它们缺少名称。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlNamedArguments",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlCaseVsCoalesceInspection",
                "shortDescription": {
                  "text": "使用 CASE 代替 COALESCE 函数，反之亦然"
                },
                "fullDescription": {
                  "text": "报告 CASE 和 COALESCE 调用可以互换的情况。 此检查具有以下意图操作：替换为 'COALESCE' 调用和相反的 替换为 CASE 表达式。 示例（MySQL）： 'SELECT\n  -- this CASE may be replaced by COALESCE\n\tCASE\n\t\tWHEN C1 IS NOT NULL THEN C1\n\t\tELSE 0\n\t\tEND\nFROM dual;' 在该示例中，CASE 语句可以替换为 'SELECT COALESCE(C1, 0)'，这会产生相同的结果。 如果您更喜欢使用 CASE 表达式，请在检查页面上选择 CASE 表达式优先于 COALESCE 函数选项。",
                  "markdown": "报告 CASE 和 COALESCE 调用可以互换的情况。 此检查具有以下意图操作：**替换为 'COALESCE' 调用** 和相反的 **替换为 CASE 表达式** 。\n\n示例（MySQL）：\n\n    SELECT\n      -- this CASE may be replaced by COALESCE\n    \tCASE\n    \t\tWHEN C1 IS NOT NULL THEN C1\n    \t\tELSE 0\n    \t\tEND\n    FROM dual;\n\n在该示例中，CASE 语句可以替换为 `SELECT COALESCE(C1, 0)`，这会产生相同的结果。\n\n如果您更喜欢使用 CASE 表达式，请在检查页面上选择 **CASE 表达式优先于 COALESCE 函数**选项。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlCaseVsCoalesce",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlIdentifierInspection",
                "shortDescription": {
                  "text": "标识符应加引号"
                },
                "fullDescription": {
                  "text": "报告在查询中使用 SQL 预留关键字作为标识符名称时的情况。 示例（Microsoft SQL 服务器）： 'CREATE TABLE select (identity INT IDENTITY NOT NULL, order INT NOT NULL);' 我们使用 'select'、'identity' 和'order' 作为表名和列名。 但它们也是 Microsoft SQL Server 中的保留关键字。 因此，为了将它们用作查询中的对象名称，您必须用引号引用这些标识符。 要用引号引用它们，您可以使用为标识符加引号 快速修复。 在应用快速修复后： 'CREATE TABLE [select] ([identity] INT IDENTITY NOT NULL, [order] INT NOT NULL);'",
                  "markdown": "报告在查询中使用 SQL 预留关键字作为标识符名称时的情况。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE TABLE select (identity INT IDENTITY NOT NULL, order INT NOT NULL);\n\n我们使用 `select`、`identity` 和`order` 作为表名和列名。\n但它们也是 Microsoft SQL Server 中的保留关键字。\n因此，为了将它们用作查询中的对象名称，您必须用引号引用这些标识符。 要用引号引用它们，您可以使用**为标识符加引号** 快速修复。\n\n在应用快速修复后：\n\n    CREATE TABLE [select] ([identity] INT IDENTITY NOT NULL, [order] INT NOT NULL);\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlIdentifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlRedundantAliasInspection",
                "shortDescription": {
                  "text": "冗余别名表达式"
                },
                "fullDescription": {
                  "text": "报告可能与表中的列名重叠并且可能是冗余的别名表达式。 示例（PostgreSQL）： 'CREATE TABLE foo(a INT, b INT);\n\nSELECT * FROM foo foo(a, b);\nSELECT * FROM foo foo(a);\nSELECT * FROM foo foo(x);\nSELECT * FROM foo foo(x, y);' 前两个别名使用与 'foo' 表中相同的列名。 这些被认为是冗余的，因为列具有相同的名称。",
                  "markdown": "报告可能与表中的列名重叠并且可能是冗余的别名表达式。\n\n示例（PostgreSQL）：\n\n    CREATE TABLE foo(a INT, b INT);\n\n    SELECT * FROM foo foo(a, b);\n    SELECT * FROM foo foo(a);\n    SELECT * FROM foo foo(x);\n    SELECT * FROM foo foo(x, y);\n\n前两个别名使用与 `foo` 表中相同的列名。 这些被认为是冗余的，因为列具有相同的名称。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlRedundantAlias",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlTransactionStatementInTriggerInspection",
                "shortDescription": {
                  "text": "在触发器中使用事务管理语句"
                },
                "fullDescription": {
                  "text": "报告触发器主体中事务管理语句（如 COMMIT 或 ROLLBACK）的用法。 在触发器主体中使用 COMMIT 或 ROLLBACK 语句时，触发器将不会编译。 发生错误是因为触发器在事务中间触发。 当触发器启动时，当前事务仍未完成。 因为 COMMIT 会终止事务，这两个语句（COMMIT 和 ROLLBACK）都会导致异常。 在触发器中执行的更改应该由启动触发器的所属事务提交（或回滚）。 示例（Oracle）： 'CREATE TABLE employee_audit\n(\n    id          INT  NOT NULL,\n    update_date DATE NOT NULL,\n    old_name    VARCHAR2(100),\n    new_name    VARCHAR2(100)\n);\n\nCREATE TABLE employees\n(\n    id   INT           NOT NULL,\n    name VARCHAR2(100) NOT NULL\n);\n\nCREATE OR REPLACE TRIGGER trig_commit\n    AFTER UPDATE OF name\n    ON employees\n    FOR EACH ROW\nBEGIN\n    INSERT INTO employee_audit VALUES (:old.id, SYSDATE, :old.name, :new.name);\n    COMMIT;\nEND;\n\nCREATE OR REPLACE TRIGGER trig_rollback\n    AFTER UPDATE OF name\n    ON employees\n    FOR EACH ROW\nBEGIN\n    INSERT INTO employee_audit VALUES (:old.id, SYSDATE, :old.name, :new.name);\n    ROLLBACK;\nEND;'",
                  "markdown": "报告触发器主体中事务管理语句（如 COMMIT 或 ROLLBACK）的用法。\n\n在触发器主体中使用 COMMIT 或 ROLLBACK 语句时，触发器将不会编译。\n发生错误是因为触发器在事务中间触发。 当触发器启动时，当前事务仍未完成。 因为 COMMIT 会终止事务，这两个语句（COMMIT 和 ROLLBACK）都会导致异常。\n在触发器中执行的更改应该由启动触发器的所属事务提交（或回滚）。\n\n示例（Oracle）：\n\n    CREATE TABLE employee_audit\n    (\n        id          INT  NOT NULL,\n        update_date DATE NOT NULL,\n        old_name    VARCHAR2(100),\n        new_name    VARCHAR2(100)\n    );\n\n    CREATE TABLE employees\n    (\n        id   INT           NOT NULL,\n        name VARCHAR2(100) NOT NULL\n    );\n\n    CREATE OR REPLACE TRIGGER trig_commit\n        AFTER UPDATE OF name\n        ON employees\n        FOR EACH ROW\n    BEGIN\n        INSERT INTO employee_audit VALUES (:old.id, SYSDATE, :old.name, :new.name);\n        COMMIT;\n    END;\n\n    CREATE OR REPLACE TRIGGER trig_rollback\n        AFTER UPDATE OF name\n        ON employees\n        FOR EACH ROW\n    BEGIN\n        INSERT INTO employee_audit VALUES (:old.id, SYSDATE, :old.name, :new.name);\n        ROLLBACK;\n    END;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlTransactionStatementInTrigger",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlRedundantCodeInCoalesceInspection",
                "shortDescription": {
                  "text": "COALESCE 调用中的冗余代码"
                },
                "fullDescription": {
                  "text": "报告除 COALESCE 函数中第一个不评估为 NULL 的表达式之外的所有实参。 示例（MySQL）： 'SELECT COALESCE(NULL, NULL, NULL, 42, NULL, 'string') as a;' 第一个 NOT NULL 实参是 '42'，所有其他实参将显示为灰色。",
                  "markdown": "报告除 COALESCE 函数中第一个不评估为 NULL 的表达式之外的所有实参。\n\n示例（MySQL）：\n\n    SELECT COALESCE(NULL, NULL, NULL, 42, NULL, 'string') as a;\n\n第一个 NOT NULL 实参是 `42`，所有其他实参将显示为灰色。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlRedundantCodeInCoalesce",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlStorageInspection",
                "shortDescription": {
                  "text": "SQL 源修改检测"
                },
                "fullDescription": {
                  "text": "报告数据库对象的源代码已更改的情况。 执行数据库或对象内省时会触发检查。 当您打开对象的源代码、运行语句和执行代码重构时，就会运行内省。 此外，您可以通过右键点击对象并选择刷新来运行内省。 检查包括以下几种情况： 数据库中的对象源代码已更改，但编辑器中的代码未更新。 适用于 PostgreSQL、Microsoft SQL Server、Oracle 和 Sybase ASE。 您更改了对象源代码，内省了数据库，但源代码已被其他人更改。 IDE 中的数据库内省器已更新，您需要下载先前内省器版本中缺少的新对象属性。",
                  "markdown": "报告数据库对象的源代码已更改的情况。\n\n执行数据库或对象内省时会触发检查。 当您打开对象的源代码、运行语句和执行代码重构时，就会运行内省。\n此外，您可以通过右键点击对象并选择**刷新**来运行内省。\n\n检查包括以下几种情况：\n\n* 数据库中的对象源代码已更改，但编辑器中的代码未更新。 适用于 PostgreSQL、Microsoft SQL Server、Oracle 和 Sybase ASE。\n* 您更改了对象源代码，内省了数据库，但源代码已被其他人更改。\n* IDE 中的数据库内省器已更新，您需要下载先前内省器版本中缺少的新对象属性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlStorageInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MsOrderByInspection",
                "shortDescription": {
                  "text": "查询中的 ORDER BY"
                },
                "fullDescription": {
                  "text": "报告在视图、内联函数、派生表、子查询和通用表表达式中使用 'ORDER BY' 子句而不使用 'TOP'、'OFFSET' 或 'FOR XML' 的用法。 有关 'ORDER BY' 用法的详细信息，请参阅 docs.microsoft.com 上的 SELECT - ORDER BY 子句 (Transact-SQL)。 示例（Microsoft SQL Server）： 'CREATE TABLE foo (a INT NOT NULL, b  INT NOT NULL);\n\nSELECT *\nFROM (SELECT a, b\nFROM foo A\nWHERE a < 89\nORDER BY b) ALIAS;' 在子查询中，ORDER BY 将被高亮显示为错误。 您可以将 TOP、OFFSET 或 FOR XML 添加到子查询。 或者，使用删除元素快速修复来删除 ORDER BY 部分。 在应用快速修复后： 'SELECT *\nFROM (SELECT a, b\nFROM foo A\nWHERE a < 89) ALIAS;'",
                  "markdown": "报告在视图、内联函数、派生表、子查询和通用表表达式中使用 `ORDER BY` 子句而不使用 `TOP`、`OFFSET` 或 `FOR XML` 的用法。\n\n有关 `ORDER BY` 用法的详细信息，请参阅 [docs.microsoft.com 上的 SELECT - ORDER BY 子句 (Transact-SQL)](https://docs.microsoft.com/en-us/sql/t-sql/queries/select-order-by-clause-transact-sql)。\n\n示例（Microsoft SQL Server）：\n\n    CREATE TABLE foo (a INT NOT NULL, b  INT NOT NULL);\n\n    SELECT *\n    FROM (SELECT a, b\n    FROM foo A\n    WHERE a < 89\n    ORDER BY b) ALIAS;\n\n在子查询中，ORDER BY 将被高亮显示为错误。 您可以将 TOP、OFFSET 或 FOR XML 添加到子查询。\n或者，使用**删除元素**快速修复来删除 ORDER BY 部分。\n\n在应用快速修复后：\n\n    SELECT *\n    FROM (SELECT a, b\n    FROM foo A\n    WHERE a < 89) ALIAS;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "MsOrderBy",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL Server",
                      "index": 69,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlSignatureInspection",
                "shortDescription": {
                  "text": "函数签名"
                },
                "fullDescription": {
                  "text": "报告内置函数的签名问题。 检查将报告错误数量的实参、无效的关键字、错误的数据类型和其他问题。 示例（MySQL）： 'CREATE TABLE foo (a INT, b INT, c INT)\n\nSELECT IFNULL() FROM foo; -- 错误\nSELECT IFNULL(a) FROM foo; -- 错误\nSELECT IFNULL(a, b) FROM foo; -- 正确\nSELECT IFNULL(a, b, c) FROM foo; -- 错误' 在 MySQL 中，'IFNULL()' 函数严格接受两个实参。 因此，只有 'SELECT IFNULL(a, b) FROM foo;' 查询是正确的。",
                  "markdown": "报告内置函数的签名问题。\n\n检查将报告错误数量的实参、无效的关键字、错误的数据类型和其他问题。\n\n示例（MySQL）：\n\n    CREATE TABLE foo (a INT, b INT, c INT)\n\n    SELECT IFNULL() FROM foo; -- 错误\n    SELECT IFNULL(a) FROM foo; -- 错误\n    SELECT IFNULL(a, b) FROM foo; -- 正确\n    SELECT IFNULL(a, b, c) FROM foo; -- 错误\n\n在 MySQL 中，`IFNULL()` 函数严格接受两个实参。 因此，只有 `SELECT IFNULL(a, b) FROM foo;` 查询是正确的。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlSignature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlRedundantOrderingDirectionInspection",
                "shortDescription": {
                  "text": "冗余排序方向"
                },
                "fullDescription": {
                  "text": "在 ORDER BY 子句中报告冗余的排序方向，如 ASC 和 DESC。 示例（MySQL）： 'CREATE TABLE foo(a INT, b INT, c INT);\nSELECT * FROM foo ORDER BY a ASC, b DESC, c ASC;' ORDER BY 关键字默认按升序对记录进行排序。 因此，'a' 和 'c' 列的 'ASC' 关键字是冗余的。",
                  "markdown": "在 ORDER BY 子句中报告冗余的排序方向，如 ASC 和 DESC。\n\n示例（MySQL）：\n\n    CREATE TABLE foo(a INT, b INT, c INT);\n    SELECT * FROM foo ORDER BY a ASC, b DESC, c ASC;\n\nORDER BY 关键字默认按升序对记录进行排序。 因此，`a` 和 `c` 列的 `ASC` 关键字是冗余的。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlRedundantOrderingDirection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlDeprecateTypeInspection",
                "shortDescription": {
                  "text": "弃用的类型"
                },
                "fullDescription": {
                  "text": "报告已弃用并且可能在 DBMS 的未来版本中消失的类型的用法。 报告的类型： Oracle 中的 LONG（请参阅 docs.oracle.com 上的 Deprecated and Desupported Features 页面）。 Microsoft SQL Server 中的 TEXT、NTEXT 和 IMAGE（请参阅 docs.microsoft.com 上的 Deprecated Database Engine Features in SQL Server 2016 页面）。 示例（Oracle）： 'CREATE TABLE ot.foo(\na NUMBER GENERATED BY DEFAULT AS IDENTITY,\nb LONG NOT NULL\n);'",
                  "markdown": "报告已弃用并且可能在 DBMS 的未来版本中消失的类型的用法。\n\n报告的类型：\n\n* Oracle 中的 LONG（请参阅 [docs.oracle.com 上的 Deprecated and Desupported Features](https://docs.oracle.com/cd/A91202_01/901_doc/server.901/a90120/ch4_dep.htm#6690) 页面）。\n* Microsoft SQL Server 中的 TEXT、NTEXT 和 IMAGE（请参阅 [docs.microsoft.com 上的 Deprecated Database Engine Features in SQL Server 2016](https://docs.microsoft.com/en-us/sql/database-engine/deprecated-database-engine-features-in-sql-server-2016?view=sql-server-ver15) 页面）。\n\n示例（Oracle）：\n\n    CREATE TABLE ot.foo(\n    a NUMBER GENERATED BY DEFAULT AS IDENTITY,\n    b LONG NOT NULL\n    );\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlDeprecateType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlAggregatesInspection",
                "shortDescription": {
                  "text": "与聚合相关的问题"
                },
                "fullDescription": {
                  "text": "报告 SQL 聚合函数的无效用法。 即以下情况： 在 HAVING 和 ORDER BY 子句中使用但在 GROUP BY 子句中遗漏的列。 'CREATE TABLE foo(id INT PRIMARY KEY, a INT, b INT);\nSELECT a, MAX(b) FROM foo GROUP BY a HAVING b > 0;\nSELECT * FROM foo GROUP BY a ORDER BY b;' 当按主键进行分组时，此规则不适用。 'SELECT * FROM foo GROUP BY id ORDER BY b;' 在错误的上下文中聚合函数。 通常，您可以在以下上下文中使用聚合函数： SELECT 中的表达式列表； 在 HAVING 和 ORDER BY 部分； 和其他特定于方言的案例。 以下查询将显示错误。 'SELECT a FROM foo WHERE MAX(b) > 0;\nSELECT a FROM foo GROUP BY MAX(a);' 聚合函数的嵌套调用。 'SELECT MAX(SUM(a)) FROM foo GROUP BY a;' 此规则不适用于解析函数。 以下查询有效且正确。 'SELECT MAX(SUM(a) OVER ()) FROM foo;' 没有聚合函数的 HAVING 的用法。 在这种情况下，请考虑使用 WHERE 部分重写您的代码。 'SELECT a, MAX(b) FROM foo GROUP BY a HAVING a > 0;'",
                  "markdown": "报告 SQL 聚合函数的无效用法。\n\n即以下情况：\n\n* 在 HAVING 和 ORDER BY 子句中使用但在 GROUP BY 子句中遗漏的列。\n\n      CREATE TABLE foo(id INT PRIMARY KEY, a INT, b INT);\n      SELECT a, MAX(b) FROM foo GROUP BY a HAVING b > 0;\n      SELECT * FROM foo GROUP BY a ORDER BY b;\n\n  当按主键进行分组时，此规则不适用。\n\n      SELECT * FROM foo GROUP BY id ORDER BY b;\n\n* 在错误的上下文中聚合函数。 通常，您可以在以下上下文中使用聚合函数： SELECT 中的表达式列表； 在 HAVING 和 ORDER BY 部分； 和其他特定于方言的案例。 以下查询将显示错误。\n\n      SELECT a FROM foo WHERE MAX(b) > 0;\n      SELECT a FROM foo GROUP BY MAX(a);\n\n* 聚合函数的嵌套调用。\n\n      SELECT MAX(SUM(a)) FROM foo GROUP BY a;\n\n  此规则不适用于解析函数。 以下查询有效且正确。\n\n      SELECT MAX(SUM(a) OVER ()) FROM foo;\n\n* 没有聚合函数的 HAVING 的用法。 在这种情况下，请考虑使用 WHERE 部分重写您的代码。\n\n      SELECT a, MAX(b) FROM foo GROUP BY a HAVING a > 0;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlAggregates",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlConstantExpressionInspection",
                "shortDescription": {
                  "text": "常量表达式"
                },
                "fullDescription": {
                  "text": "报告始终为 true、false 或 null 的条件和表达式。 示例（MySQL）： 'CREATE TABLE t1 (a TEXT, b INT, c BOOLEAN);\nSELECT a FROM t1 WHERE 'Cat' = 'Cat';\nSELECT a FROM t1 WHERE 'Cat' = null;' ''Cat' = 'Cat'' 始终为 true，将被报告。 ''Cat' = null' 始终为 null，将被报告。",
                  "markdown": "报告始终为 true、false 或 null 的条件和表达式。\n\n示例（MySQL）：\n\n    CREATE TABLE t1 (a TEXT, b INT, c BOOLEAN);\n    SELECT a FROM t1 WHERE 'Cat' = 'Cat';\n    SELECT a FROM t1 WHERE 'Cat' = null;\n\n`'Cat' = 'Cat'` 始终为 true，将被报告。\n\n`'Cat' = null` 始终为 null，将被报告。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlConstantExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlMissingColumnAliasesInspection",
                "shortDescription": {
                  "text": "缺少列别名"
                },
                "fullDescription": {
                  "text": "报告在输出表达式中没有显式别名的查询（例如，在 SELECT 语句中）。 示例（PostgreSQL）： 'CREATE TABLE foo(a INT, b INT);\n\nSELECT 1, a + 1 AS A2, MAX(b) AS M\nFROM foo;'",
                  "markdown": "报告在输出表达式中没有显式别名的查询（例如，在 SELECT 语句中）。\n\n示例（PostgreSQL）：\n\n    CREATE TABLE foo(a INT, b INT);\n\n    SELECT 1, a + 1 AS A2, MAX(b) AS M\n    FROM foo;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlMissingColumnAliases",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlAddNotNullColumnInspection",
                "shortDescription": {
                  "text": "添加没有默认值的非 null 列"
                },
                "fullDescription": {
                  "text": "报告创建没有 DEFAULT 值的 NOT NULL 列的尝试。 示例（Microsoft SQL 服务器）： 'CREATE TABLE foo (a INT, b  INT)\n\nALTER TABLE foo ADD c INT NOT NULL;' 默认情况下，列包含 NULL 值。 在示例中，我们使用 NOT NULL 约束强制列不接受 NULL 值。 如果我们禁止使用 NULL 值，则必须设置 SQL 在创建新记录时可以使用的 DEFAULT 值。 'ALTER TABLE foo ADD c INT NOT NULL DEFAULT 42;' 您可以使用添加 DEFAULT 值快速修复快速添加 DEFAULT 值。",
                  "markdown": "报告创建没有 DEFAULT 值的 NOT NULL 列的尝试。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE TABLE foo (a INT, b  INT)\n\n    ALTER TABLE foo ADD c INT NOT NULL;\n\n默认情况下，列包含 NULL 值。 在示例中，我们使用 NOT NULL 约束强制列不接受 NULL 值。\n如果我们禁止使用 NULL 值，则必须设置 SQL 在创建新记录时可以使用的 DEFAULT 值。\n\n    ALTER TABLE foo ADD c INT NOT NULL DEFAULT 42;\n\n您可以使用**添加 DEFAULT 值**快速修复快速添加 DEFAULT 值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlAddNotNullColumn",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OraOverloadInspection",
                "shortDescription": {
                  "text": "重载错误"
                },
                "fullDescription": {
                  "text": "报告 Oracle 中子程序重载的无效情况。 示例（Oracle）： 'DECLARE\n    SUBTYPE fff IS BINARY_INTEGER;\n    SUBTYPE ggg IS NATURAL;\n    PROCEDURE foo (a IN ggg) IS BEGIN NULL; END;\n    PROCEDURE foo (a IN fff) IS BEGIN NULL; END;\nBEGIN\n    NULL;\nEND;' 您不能重载形参仅在子类型方面不同的子程序。 例如，您不能重载一个接受 BINARY INTEGER 形参而另一个接受 NATURAL 形参的过程。 有关过程重载限制的更多信息，请参阅 docs.oracle.com 上的 Restrictions on Overloading。",
                  "markdown": "报告 Oracle 中子程序重载的无效情况。\n\n示例（Oracle）：\n\n    DECLARE\n        SUBTYPE fff IS BINARY_INTEGER;\n        SUBTYPE ggg IS NATURAL;\n        PROCEDURE foo (a IN ggg) IS BEGIN NULL; END;\n        PROCEDURE foo (a IN fff) IS BEGIN NULL; END;\n    BEGIN\n        NULL;\n    END;\n\n您不能重载形参仅在子类型方面不同的子程序。 例如，您不能重载一个接受 BINARY INTEGER 形参而另一个接受 NATURAL 形参的过程。 有关过程重载限制的更多信息，请参阅 [docs.oracle.com 上的 Restrictions on Overloading](https://docs.oracle.com/cd/B19306_01/appdev.102/b14261/subprograms.htm)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlOverload",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Oracle",
                      "index": 76,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OraMissingBodyInspection",
                "shortDescription": {
                  "text": "缺少软件包/对象类型规范的主体"
                },
                "fullDescription": {
                  "text": "报告缺少主体声明的软件包和对象类型规范。 声明例程的软件包规范和对象类型以及带有光标的软件包规范必须具有实现这些例程和光标的主体声明。 在程序代码中调用例程或光标时，缺少主体会导致运行时错误。 示例（Oracle）： 'CREATE OR REPLACE PACKAGE ppp IS\n    FUNCTION foo(a INT) RETURN INT;\nEND;'",
                  "markdown": "报告缺少主体声明的软件包和对象类型规范。\n\n声明例程的软件包规范和对象类型以及带有光标的软件包规范必须具有实现这些例程和光标的主体声明。 在程序代码中调用例程或光标时，缺少主体会导致运行时错误。\n\n示例（Oracle）：\n\n    CREATE OR REPLACE PACKAGE ppp IS\n        FUNCTION foo(a INT) RETURN INT;\n    END;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlMissingBody",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Oracle",
                      "index": 76,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OraUnmatchedForwardDeclarationInspection",
                "shortDescription": {
                  "text": "不含定义的前向声明"
                },
                "fullDescription": {
                  "text": "报告在代码中缺少实现的过程和函数的声明。 在 Oracle 中，您可以声明一个没有主体的过程或函数，并在稍后的某个时间编写实现。 该检查将报告未实现的此类过程或函数的名称。 示例（Oracle）： 'DECLARE PROCEDURE foo(a int, b varchar2);\nBEGIN\n    NULL;\nEND;' 'foo' 过程已被声明，但缺少实现。 我们可以添加实现来消除错误。 'DECLARE PROCEDURE foo(a int, b varchar2);\n  PROCEDURE foo(a int, b varchar2) IS\nBEGIN\n    NULL;\nEND;\nBEGIN\n    NULL;\nEND;'",
                  "markdown": "报告在代码中缺少实现的过程和函数的声明。\n\n在 Oracle 中，您可以声明一个没有主体的过程或函数，并在稍后的某个时间编写实现。 该检查将报告未实现的此类过程或函数的名称。\n\n示例（Oracle）：\n\n    DECLARE PROCEDURE foo(a int, b varchar2);\n    BEGIN\n        NULL;\n    END;\n\n`foo` 过程已被声明，但缺少实现。 我们可以添加实现来消除错误。\n\n    DECLARE PROCEDURE foo(a int, b varchar2);\n      PROCEDURE foo(a int, b varchar2) IS\n    BEGIN\n        NULL;\n    END;\n    BEGIN\n        NULL;\n    END;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "SqlUnmatchedForwardDeclaration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Oracle",
                      "index": 76,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlGotoInspection",
                "shortDescription": {
                  "text": "使用 GOTO 语句"
                },
                "fullDescription": {
                  "text": "报告后向 GOTO 语句和用于退出循环的 GOTO 语句的用法。 通常不推荐大量使用 GOTO 语句。 有关详细信息，请参阅 ibm.com 上的 GOTO statement in SQL procedures。 考虑使用循环而不是使用 GOTO 返回到上一条语句。 考虑使用另一个流控制语句，例如 RETURN 或 BREAK，而不是使用 GOTO 退出 WHILE 循环。 示例（Oracle）： 'CREATE PROCEDURE test(n INT) AS\nDECLARE\n    x INT;\nBEGIN\n    x := 0;\n    GOTO a;\n    <<a>> x := 1;\n    IF (n = 0) THEN\n        GOTO a;\n    END IF;\n    WHILE TRUE\n        LOOP\n            GOTO b;\n        END LOOP;\n    <<b>> x := 3;\nEND;'",
                  "markdown": "报告后向 GOTO 语句和用于退出循环的 GOTO 语句的用法。\n\n通常不推荐大量使用 GOTO 语句。 有关详细信息，请参阅 [ibm.com 上的 GOTO statement in SQL procedures](https://www.ibm.com/docs/no/db2/11.5?topic=procedures-goto-statement-in-sql)。\n\n考虑使用循环而不是使用 GOTO 返回到上一条语句。\n\n考虑使用另一个流控制语句，例如 RETURN 或 BREAK，而不是使用 GOTO 退出 WHILE 循环。\n\n示例（Oracle）：\n\n    CREATE PROCEDURE test(n INT) AS\n    DECLARE\n        x INT;\n    BEGIN\n        x := 0;\n        GOTO a;\n        <<a>> x := 1;\n        IF (n = 0) THEN\n            GOTO a;\n        END IF;\n        WHILE TRUE\n            LOOP\n                GOTO b;\n            END LOOP;\n        <<b>> x := 3;\n    END;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlGoto",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MongoJSExtResolveInspection",
                "shortDescription": {
                  "text": "解析问题"
                },
                "fullDescription": {
                  "text": "报告 MongoDB 和 JavaScript 代码中未解析的引用。",
                  "markdown": "报告 MongoDB 和 JavaScript 代码中未解析的引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MongoJSResolve",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "MongoJS",
                      "index": 10,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlWithoutWhereInspection",
                "shortDescription": {
                  "text": "不带 where 子句的删除或更新语句"
                },
                "fullDescription": {
                  "text": "报告不带 WHERE 子句的 DELETE 或 UPDATE 语句的用法。 如果没有 WHERE 子句，DELETE 会删除表中的所有数据，而 UPDATE 会覆盖所有表行的值。 示例（MySQL）： 'CREATE TABLE t1 (a TEXT, b INT, c BOOLEAN);\nupdate t1 set  a = 'Smith';\ndelete from t1;'",
                  "markdown": "报告不带 WHERE 子句的 DELETE 或 UPDATE 语句的用法。\n\n如果没有 WHERE 子句，DELETE 会删除表中的所有数据，而 UPDATE 会覆盖所有表行的值。\n\n示例（MySQL）：\n\n    CREATE TABLE t1 (a TEXT, b INT, c BOOLEAN);\n    update t1 set  a = 'Smith';\n    delete from t1;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlWithoutWhere",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlAmbiguousColumnInspection",
                "shortDescription": {
                  "text": "不明确的引用"
                },
                "fullDescription": {
                  "text": "报告名称相同但属于不同表的列。 示例（MySQL）： 'CREATE TABLE foo(id INT PRIMARY KEY);\nCREATE TABLE bar(id INT PRIMARY KEY);\n\nSELECT foo.id, bar.id FROM foo, bar WHERE id > 0;' 'id' 列出现在 'foo' 和 'bar' 表中。 您需要限定列名以使查询正确。 'SELECT foo.id, bar.id FROM foo, bar WHERE foo.id > 0;'",
                  "markdown": "报告名称相同但属于不同表的列。\n\n示例（MySQL）：\n\n    CREATE TABLE foo(id INT PRIMARY KEY);\n    CREATE TABLE bar(id INT PRIMARY KEY);\n\n    SELECT foo.id, bar.id FROM foo, bar WHERE id > 0;\n\n`id` 列出现在 `foo` 和 `bar` 表中。 您需要限定列名以使查询正确。\n\n    SELECT foo.id, bar.id FROM foo, bar WHERE foo.id > 0;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlAmbiguousColumn",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlUnusedCteInspection",
                "shortDescription": {
                  "text": "未使用的通用表表达式"
                },
                "fullDescription": {
                  "text": "报告查询中未使用的通用表表达式 (CTE)。 示例（PostgreSQL）： 'CREATE TABLE foo(a INT);\n\nWITH a AS (SELECT 1 AS x FROM foo)\nSELECT 1 + 2 FROM foo;' 通过使用 WITH，我们创建了一个名为 'a' 的临时命名结果集，也称为通用表表达式 (CTE)。 但是，我们稍后不会在代码中使用此 CTE。 未使用的 CTE 显示为灰色。",
                  "markdown": "报告查询中未使用的通用表表达式 (CTE)。\n\n示例（PostgreSQL）：\n\n    CREATE TABLE foo(a INT);\n\n    WITH a AS (SELECT 1 AS x FROM foo)\n    SELECT 1 + 2 FROM foo;\n\n通过使用 WITH，我们创建了一个名为 `a` 的临时命名结果集，也称为通用表表达式 (CTE)。 但是，我们稍后不会在代码中使用此 CTE。 未使用的 CTE 显示为灰色。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlUnusedCte",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MongoJSResolveInspection",
                "shortDescription": {
                  "text": "解析问题"
                },
                "fullDescription": {
                  "text": "报告 MongoDB 和 JavaScript 代码中未解析的引用。 示例： 'db\nuse foo\n  -- a reference to a non-existing collection\ndb.non_existing_collection\ndb['non_existing_collection']\ndb['non_existing_collection'].find().hasNext()' 'non_existing_collection' 集合在数据库中不存在，将被报告。",
                  "markdown": "报告 MongoDB 和 JavaScript 代码中未解析的引用。\n\n示例：\n\n    db\n    use foo\n      -- a reference to a non-existing collection\n    db.non_existing_collection\n    db['non_existing_collection']\n    db['non_existing_collection'].find().hasNext()\n\n`non_existing_collection` 集合在数据库中不存在，将被报告。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MongoJSResolve",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "MongoJS",
                      "index": 10,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SqlNullComparisonInspection",
                "shortDescription": {
                  "text": "null 比较"
                },
                "fullDescription": {
                  "text": "报告与可以替换为 IS NULL 或 IS NOT NULL 运算符的 NULL 的比较。 示例（Microsoft SQL 服务器）： 'CREATE TABLE foo ( id int );\n\nSELECT * FROM foo WHERE NULL = NULL;\nSELECT * FROM foo WHERE NULL != NULL;' 'NULL = NULL' 可以替换为 'IS NULL'，'NULL != NULL' 比较可以替换为 'IS NOT NULL'。 要进行此替换，您可以使用使用 IS NULL 运算符或使用 IS NOT NULL 运算符快速修复。 'SELECT * FROM foo WHERE NULL IS NULL;\nSELECT * FROM foo WHERE NULL IS NOT NULL;'",
                  "markdown": "报告与可以替换为 IS NULL 或 IS NOT NULL 运算符的 NULL 的比较。\n\n示例（Microsoft SQL 服务器）：\n\n    CREATE TABLE foo ( id int );\n\n    SELECT * FROM foo WHERE NULL = NULL;\n    SELECT * FROM foo WHERE NULL != NULL;\n\n`NULL = NULL` 可以替换为 `IS NULL`，`NULL != NULL` 比较可以替换为 `IS NOT NULL`。 要进行此替换，您可以使用**使用 IS NULL 运算符** 或**使用 IS NOT NULL 运算符**快速修复。\n\n    SELECT * FROM foo WHERE NULL IS NULL;\n    SELECT * FROM foo WHERE NULL IS NOT NULL;\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SqlNullComparison",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "SQL",
                      "index": 34,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.intellij.plugins.markdown",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "MarkdownOutdatedTableOfContents",
                "shortDescription": {
                  "text": "过期的目录部分"
                },
                "fullDescription": {
                  "text": "检查特定目录部分是否与文档的实际结构相对应。",
                  "markdown": "检查特定目录部分是否与文档的实际结构相对应。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownOutdatedTableOfContents",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 17,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownUnresolvedLinkLabel",
                "shortDescription": {
                  "text": "未解析的链接标签"
                },
                "fullDescription": {
                  "text": "报告 Markdown 文件中的未解析链接标签。",
                  "markdown": "报告 Markdown 文件中的未解析链接标签。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownUnresolvedLinkLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 17,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownIncorrectTableFormatting",
                "shortDescription": {
                  "text": "表格式设置不正确"
                },
                "fullDescription": {
                  "text": "检查表的格式是否正确。",
                  "markdown": "检查表的格式是否正确。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MarkdownIncorrectTableFormatting",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 17,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownIncorrectlyNumberedListItem",
                "shortDescription": {
                  "text": "列表项编号错误"
                },
                "fullDescription": {
                  "text": "排序列表项应从 1 开始连续编号。 这背后的动机是，大多数 Markdown 处理器会忽略有序列表的编号。 处理器将为此类列表生成 '<ol>' 元素，该元素将从 1 开始对条目进行连续编号。",
                  "markdown": "排序列表项应从 1 开始连续编号。\n\n这背后的动机是，大多数 Markdown 处理器会忽略有序列表的编号。 处理器将为此类列表生成 `<ol>` 元素，该元素将从 1 开始对条目进行连续编号。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownIncorrectlyNumberedListItem",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 17,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownLinkDestinationWithSpaces",
                "shortDescription": {
                  "text": "链接不应包含空格"
                },
                "fullDescription": {
                  "text": "为确保不同工具之间的一致性，文件链接不应包含空格。 示例： '[Some file link](some file.md)' 快速修复会将空格替换为它们的 URL 编码等效项： '[Some file link](some%20file.md)'",
                  "markdown": "为确保不同工具之间的一致性，文件链接不应包含空格。\n\n**示例：**\n\n\n      [Some file link](some file.md)\n\n快速修复会将空格替换为它们的 URL 编码等效项：\n\n\n      [Some file link](some%20file.md)\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownLinkDestinationWithSpaces",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 17,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownNoTableBorders",
                "shortDescription": {
                  "text": "表没有边框"
                },
                "fullDescription": {
                  "text": "检查表是否有正确的边框。 出于兼容性原因，所有表行的开头和结尾都应该有边框（管道符号）。",
                  "markdown": "检查表是否有正确的边框。 出于兼容性原因，所有表行的开头和结尾都应该有边框（管道符号）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownNoTableBorders",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 17,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownUnresolvedFileReference",
                "shortDescription": {
                  "text": "未解析的文件引用"
                },
                "fullDescription": {
                  "text": "报告 Markdown 文件中的未解析文件引用。",
                  "markdown": "报告 Markdown 文件中的未解析文件引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownUnresolvedFileReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 17,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownUnresolvedHeaderReference",
                "shortDescription": {
                  "text": "未解析的头引用"
                },
                "fullDescription": {
                  "text": "报告 Markdown 文件中的未解析头引用。",
                  "markdown": "报告 Markdown 文件中的未解析头引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownUnresolvedHeaderReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 17,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.jetbrains.restClient",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "HttpRequestRequestSeparatorJsonBodyInspection",
                "shortDescription": {
                  "text": "JSON 正文中缺少请求分隔符"
                },
                "fullDescription": {
                  "text": "报告在缺少请求分隔符 '###' 的注入 JSON 正文中的可能请求。 该快速修复会建议在请求前添加分隔符 '###'。",
                  "markdown": "报告在缺少请求分隔符 `###` 的注入 JSON 正文中的可能请求。 该快速修复会建议在请求前添加分隔符 `###`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HttpRequestRequestSeparatorJsonBodyInspection",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpRequestWhitespaceInsideRequestTargetPath",
                "shortDescription": {
                  "text": "请求 URL 中存在空格"
                },
                "fullDescription": {
                  "text": "高亮显示 URL 路径段内的空格。 HTTP 客户端将忽略它们。 要获得更好的组合，请使用“拆分行”操作。",
                  "markdown": "高亮显示 URL 路径段内的空格。 HTTP 客户端将忽略它们。 要获得更好的组合，请使用\"拆分行\"操作。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HttpRequestWhitespaceInsideRequestTargetPath",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpClientUnresolvedAuthId",
                "shortDescription": {
                  "text": "未解析的身份验证标识符"
                },
                "fullDescription": {
                  "text": "高亮显示对不存在的 Auth 配置的引用。 建议在当前环境中新建一个。",
                  "markdown": "高亮显示对不存在的 Auth 配置的引用。 建议在当前环境中新建一个。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "HttpClientUnresolvedAuthId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpRequestEnvironmentAuthConfigurationValidationInspection",
                "shortDescription": {
                  "text": "身份验证配置验证"
                },
                "fullDescription": {
                  "text": "报告 HTTP 客户端环境文件中有关 Auth 配置的以下问题： Auth 配置中缺少属性 Auth/安全配置放在了私有环境文件中",
                  "markdown": "报告 HTTP 客户端环境文件中有关 Auth 配置的以下问题：\n\n* Auth 配置中缺少属性\n* Auth/安全配置放在了私有环境文件中"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HttpRequestEnvironmentAuthConfigurationValidationInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpRequestContentLengthIsIgnored",
                "shortDescription": {
                  "text": "冗余的 'Content-Length'"
                },
                "fullDescription": {
                  "text": "报告显式设置的 'Content-Length' 标头。 此标头冗余，因为 HTTP 客户端使用实际的请求主体长度。",
                  "markdown": "报告显式设置的 `Content-Length` 标头。 此标头冗余，因为 HTTP 客户端使用实际的请求主体长度。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HttpRequestContentLengthIsIgnored",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpRequestRequestSeparatorXmlBodyInspection",
                "shortDescription": {
                  "text": "HTML/XML 正文中缺少请求分隔符"
                },
                "fullDescription": {
                  "text": "报告在缺少请求分隔符 '###' 的注入 XML/HTML 正文中的可能请求。 该快速修复会建议在请求前添加分隔符 '###'。",
                  "markdown": "报告在缺少请求分隔符 `###` 的注入 XML/HTML 正文中的可能请求。 该快速修复会建议在请求前添加分隔符 `###`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HttpRequestRequestSeparatorXmlBodyInspection",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncorrectHttpHeaderInspection",
                "shortDescription": {
                  "text": "不正确的 HTTP 标头"
                },
                "fullDescription": {
                  "text": "报告与任何公共已知标头不匹配的未知 HTTP 标头。 快速修复建议在启用使用自定义 HTTP 标题选项时，将该标题添加到自定义标题列表中。 自定义标头列表中的 HTTP 标头将不会触发检查。",
                  "markdown": "报告与任何[公共已知标头](https://www.iana.org/assignments/message-headers/message-headers.xml)不匹配的未知 HTTP 标头。 快速修复建议在启用**使用自定义 HTTP 标题**选项时，将该标题添加到自定义标题列表中。 自定义标头列表中的 HTTP 标头将不会触发检查。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IncorrectHttpHeaderInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpClientInappropriateProtocolUsageInspection",
                "shortDescription": {
                  "text": "HTTP 协议使用不当"
                },
                "fullDescription": {
                  "text": "报告在没有非 HTTP 方法请求的情况下 HTTP 协议关键字的不当用法，如 'HTTP/2'。 此类用法将被忽略。",
                  "markdown": "报告在没有非 HTTP 方法请求的情况下 HTTP 协议关键字的不当用法，如 `HTTP/2`。 此类用法将被忽略。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HttpClientInappropriateProtocolUsageInspection",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpRequestPlaceholder",
                "shortDescription": {
                  "text": "HTTP 请求中的 '$placeholder'"
                },
                "fullDescription": {
                  "text": "报告请求内部的 '$placeholder'。 当工具无法识别请求的一部分时，将自动创建要由用户替换的 '$placeholder'。 例如，请求映射 '/aaaa/*/bbb' 将生成为 'GET localhost/aaaa/{{$placeholder}}/bbb'。",
                  "markdown": "报告请求内部的 `$placeholder`。\n\n当工具无法识别请求的一部分时，将自动创建要由用户替换的 `$placeholder`。 例如，请求映射 `/aaaa/*/bbb` 将生成为 `GET localhost/aaaa/{{$placeholder}}/bbb`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HttpRequestPlaceholder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpClientUnresolvedVariable",
                "shortDescription": {
                  "text": "未解析的环境变量"
                },
                "fullDescription": {
                  "text": "报告当前环境中未声明的 HTTP 客户端变量。 使用未声明的变量执行请求可能会失败。 考虑向环境中添加一个变量，或选择具有此变量的环境。 检查不会报告请求正文中的变量，因为它可能是正文的有效语法。 某些变量可能不会被报告为未解析，因为它们是通过 'client.global.set' 或 'request.variables.set' 函数调用在响应或预请求处理程序脚本中声明的。",
                  "markdown": "报告当前环境中未声明的 HTTP 客户端变量。\n\n\n使用未声明的变量执行请求可能会失败。\n考虑向环境中添加一个变量，或选择具有此变量的环境。\n\n检查不会报告请求正文中的变量，因为它可能是正文的有效语法。\n\n\n某些变量可能不会被报告为未解析，因为它们是通过 `client.global.set` 或 `request.variables.set` 函数调用在响应或预请求处理程序脚本中声明的。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HttpClientUnresolvedVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpRequestRequestSeparatorYamlBodyInspection",
                "shortDescription": {
                  "text": "YAML 正文中缺少请求分隔符"
                },
                "fullDescription": {
                  "text": "报告在缺少请求分隔符 '###' 的注入 YAML 正文中的可能请求。 该快速修复会建议在请求前添加分隔符 '###'。",
                  "markdown": "报告在缺少请求分隔符 `###` 的注入 YAML 正文中的可能请求。 该快速修复会建议在请求前添加分隔符 `###`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HttpRequestRequestSeparatorYamlBodyInspection",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTTP 客户端",
                      "index": 19,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HttpUrlsUsage",
                "shortDescription": {
                  "text": "采用未加密协议的链接"
                },
                "fullDescription": {
                  "text": "报告使用未加密协议（如 HTTP）的链接，这些链接可能会使您的数据暴露在中间人的攻击之下。 这些攻击一般是危险的，对工件存储库可能特别有害。 使用加密协议取而代之，例如 HTTPS。 请参阅 HTTPS: 与 HTTP 的区别(wikipedia.org) 。",
                  "markdown": "报告使用未加密协议（如 HTTP）的链接，这些链接可能会使您的数据暴露在中间人的攻击之下。 这些攻击一般是危险的，对工件存储库可能特别有害。 使用加密协议取而代之，例如 HTTPS。\n\n请参阅 [HTTPS: 与 HTTP 的区别(wikipedia.org)](https://en.wikipedia.org/wiki/HTTPS#Difference_from_HTTP)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HttpUrlsUsage",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "安全性",
                      "index": 65,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "HtmlTools",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "HtmlRequiredAltAttribute",
                "shortDescription": {
                  "text": "缺少所需的 'alt' 特性"
                },
                "fullDescription": {
                  "text": "报告 'img' 或 'applet' 标记或图像映射的 'area' 元素中缺少的 'alt' 特性。 建议添加含标签内容替代文本的必要特性。 基于 WCAG 2.0：H24、H35、H36、H37。",
                  "markdown": "报告 `img` 或 `applet` 标记或图像映射的 `area` 元素中缺少的 `alt` 特性。 建议添加含标签内容替代文本的必要特性。 基于 WCAG 2.0：[H24](https://www.w3.org/TR/WCAG20-TECHS/H24.html)、[H35](https://www.w3.org/TR/WCAG20-TECHS/H35.html)、[H36](https://www.w3.org/TR/WCAG20-TECHS/H36.html)、[H37](https://www.w3.org/TR/WCAG20-TECHS/H37.html)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredAltAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/可访问性",
                      "index": 26,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlFormInputWithoutLabel",
                "shortDescription": {
                  "text": "表单输入没有相关的label"
                },
                "fullDescription": {
                  "text": "报告没有关联标签的表单元素 ('input'、'textarea' 或 'select')。 建议创建新标签。 基于 WCAG 2.0：H44。",
                  "markdown": "报告没有关联标签的表单元素 (`input`、`textarea` 或 `select`)。 建议创建新标签。 基于 WCAG 2.0：[H44](https://www.w3.org/TR/WCAG20-TECHS/H44.html)。  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlFormInputWithoutLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/可访问性",
                      "index": 26,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredTitleAttribute",
                "shortDescription": {
                  "text": "缺少所需的 'title' 特性"
                },
                "fullDescription": {
                  "text": "报告缺少的标题特性 'frame'、'iframe'、'dl' 和 'a' 标记。 建议添加标题特性。 基于 WCAG 2.0：H33、H40 和 H64。",
                  "markdown": "报告缺少的标题特性 `frame`、`iframe`、`dl` 和 `a` 标记。 建议添加标题特性。 基于 WCAG 2.0：[H33](https://www.w3.org/TR/WCAG20-TECHS/H33.html)、[H40](https://www.w3.org/TR/WCAG20-TECHS/H40.html) 和 [H64](https://www.w3.org/TR/WCAG20-TECHS/H64.html)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredTitleAttribute",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/可访问性",
                      "index": 26,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlDeprecatedTag",
                "shortDescription": {
                  "text": "废弃的标记"
                },
                "fullDescription": {
                  "text": "报告过时的 HTML5 标记。 建议将过时的标记替换为 CSS 或其他标记。",
                  "markdown": "报告过时的 HTML5 标记。 建议将过时的标记替换为 CSS 或其他标记。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlDeprecatedTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckImageSize",
                "shortDescription": {
                  "text": "不匹配的图像大小"
                },
                "fullDescription": {
                  "text": "报告与所引用图像的实际宽度和高度不同的 'img' 标记的 'width' 和 'height' 特性值。",
                  "markdown": "报告与所引用图像的实际宽度和高度不同的 `img` 标记的 `width` 和 `height` 特性值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckImageSize",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredSummaryAttribute",
                "shortDescription": {
                  "text": "缺少所需的 'summary' 特性"
                },
                "fullDescription": {
                  "text": "报告 'table' 标记中缺少的 'summary' 特性。 建议添加 'summary' 特性。 基于 WCAG 2.0：H73。",
                  "markdown": "报告 `table` 标记中缺少的 `summary` 特性。 建议添加 `summary` 特性。 基于 WCAG 2.0：[H73](https://www.w3.org/TR/WCAG20-TECHS/H73.html)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredSummaryAttribute",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/可访问性",
                      "index": 26,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredLangAttribute",
                "shortDescription": {
                  "text": "缺少所需的 'lang' 特性"
                },
                "fullDescription": {
                  "text": "报告 'html' 标记中缺少的 'lang'（或 'xml:lang'）特性。 建议添加一项必备特性来声明文档的默认语言。 基于 WCAG 2.0：H57。",
                  "markdown": "报告 `html` 标记中缺少的 `lang`（或 `xml:lang`）特性。 建议添加一项必备特性来声明文档的默认语言。 基于 WCAG 2.0：[H57](https://www.w3.org/TR/WCAG20-TECHS/H57.html)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredLangAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/可访问性",
                      "index": 26,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlNonExistentInternetResource",
                "shortDescription": {
                  "text": "未解析的 Web 链接"
                },
                "fullDescription": {
                  "text": "报告未解析的 Web 链接。 通过在后台发出网络请求来发挥作用。",
                  "markdown": "报告未解析的 Web 链接。 通过在后台发出网络请求来发挥作用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlNonExistentInternetResource",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredTitleElement",
                "shortDescription": {
                  "text": "缺少所需的 'title' 元素"
                },
                "fullDescription": {
                  "text": "报告 'head' 部分中缺少的 'title' 元素。 建议添加 'title' 元素。 标题应能说明文档。 基于 WCAG 2.0：H25。",
                  "markdown": "报告 `head` 部分中缺少的 `title` 元素。 建议添加 `title` 元素。 标题应能说明文档。 基于 WCAG 2.0：[H25](https://www.w3.org/TR/WCAG20-TECHS/H25.html)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredTitleElement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/可访问性",
                      "index": 26,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlDeprecatedAttribute",
                "shortDescription": {
                  "text": "废弃的特性"
                },
                "fullDescription": {
                  "text": "报告过时的 HTML5 特性。",
                  "markdown": "报告过时的 HTML5 特性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlDeprecatedAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlPresentationalElement",
                "shortDescription": {
                  "text": "演示标记"
                },
                "fullDescription": {
                  "text": "报告 HTML 表示标记。 建议将表示标记替换为 CSS 或其他标记。",
                  "markdown": "报告 HTML 表示标记。 建议将表示标记替换为 CSS 或其他标记。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlPresentationalElement",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 20,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "Docker",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "ComposeMissingKeys",
                "shortDescription": {
                  "text": "缺少 docker-compose YAML 键"
                },
                "fullDescription": {
                  "text": "报告 Docker Compose 文件中缺少必需键。",
                  "markdown": "报告 Docker Compose 文件中缺少必需键。  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ComposeMissingKeys",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Docker-compose",
                      "index": 30,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DockerFileAssignments",
                "shortDescription": {
                  "text": "'key=value' 对中无效的空格"
                },
                "fullDescription": {
                  "text": "报告 'ARG'、'ENV' 和 'LABEL' 命令中键值对的不正确间距。 尽管 Dockerfile 规范中没有明确指定，但不允许使用键值对的某些间距组合。 到达问题指令后，Docker 构建将失败。 示例： 'ARG' 命令不允许在 '=' 周围有任何空格 'ENV' 和 'LABEL' 在 '=' 后不允许有空格 '# 下面的所有命令都将失败\n  ARG answer = 42\n  ARG version= \"1.0.0\"\n  LABEL \"maintained.by\"= someone@gmail.com\n  ENV JAVA_HOME= \"/docker-java-home\"' 在应用快速修复后： 'ARG answer=2\n  ARG version=\"1.0.0\"\n  LABEL \"maintained.by\"=someone@gmail.com\n  ENV JAVA_HOME=\"/docker-java-home\"'",
                  "markdown": "报告 `ARG`、`ENV` 和 `LABEL` 命令中键值对的不正确间距。\n\n\n尽管 [Dockerfile 规范](https://docs.docker.com/engine/reference/builder/#arg)中没有明确指定，但不允许使用键值对的某些间距组合。\n到达问题指令后，Docker 构建将失败。\n\n**示例：**\n\n* `ARG` 命令不允许在 '=' 周围有任何空格\n* `ENV` 和 `LABEL` 在 '=' 后不允许有空格\n\n\n      # 下面的所有命令都将失败\n      ARG answer = 42\n      ARG version= \"1.0.0\"\n      LABEL \"maintained.by\"= someone@gmail.com\n      ENV JAVA_HOME= \"/docker-java-home\"\n\n在应用快速修复后：\n\n\n      ARG answer=2\n      ARG version=\"1.0.0\"\n      LABEL \"maintained.by\"=someone@gmail.com\n      ENV JAVA_HOME=\"/docker-java-home\"\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "DockerFileAssignments",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Dockerfile",
                      "index": 35,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DockerFileAddOrCopyPaths",
                "shortDescription": {
                  "text": "'ADD'/'COPY' 命令的无效目标"
                },
                "fullDescription": {
                  "text": "报告 'ADD' 和 'COPY' 命令中无效的目标目录。 根据 Dockerfile 规范，如果指定了多个源，则目标必须是目录，并且必须以斜杠 '/' 结尾。 否则，Docker 构建会失败。 示例： '# 下面的所有命令都将失败\n  ADD textA.txt textB.txt relativeDir\n  ADD [\"binaryA.jar\", \"binary2.jar\", \"destination\"]\n  COPY text3.txt text4.txt /absolute/path' 在应用快速修复后： 'ADD textA.txt textB.txt relativeDir/\n  ADD [\"binaryA.jar\", \"binary2.jar\", \"destination/\"]\n  COPY text3.txt text4.txt /absolute/path/'",
                  "markdown": "报告 `ADD` 和 `COPY` 命令中无效的目标目录。\n\n\n根据 [Dockerfile 规范](https://docs.docker.com/engine/reference/builder/#add)，如果指定了多个源，则目标必须是目录，并且必须以斜杠 '/' 结尾。\n否则，Docker 构建会失败。\n\n**示例：**\n\n\n      # 下面的所有命令都将失败\n      ADD textA.txt textB.txt relativeDir\n      ADD [\"binaryA.jar\", \"binary2.jar\", \"destination\"]\n      COPY text3.txt text4.txt /absolute/path\n\n在应用快速修复后：\n\n\n      ADD textA.txt textB.txt relativeDir/\n      ADD [\"binaryA.jar\", \"binary2.jar\", \"destination/\"]\n      COPY text3.txt text4.txt /absolute/path/\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DockerFileAddOrCopyPaths",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Dockerfile",
                      "index": 35,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DockerFileRunCommandMissingContinuation",
                "shortDescription": {
                  "text": "'RUN' 命令缺少连续字符"
                },
                "fullDescription": {
                  "text": "报告 'RUN' 命令中的缺失继续符。 在 shell 形式的 'RUN' 命令中，应使用 '\\'（反斜杠）将单条 'RUN' 指令延续到下一行。 否则，Docker 构建会失败。 示例： '# the command below will fail\n  RUN /bin/bash -c 'source $HOME/.bashrc;\n      echo $HOME'' 在应用快速修复后： 'RUN /bin/bash -c 'source $HOME/.bashrc; \\\n      echo $HOME''",
                  "markdown": "报告 `RUN` 命令中的缺失继续符。\n\n\n在 *shell* 形式的 `RUN` 命令中，应使用 '\\\\'（反斜杠）将单条 `RUN` 指令延续到下一行。\n否则，Docker 构建会失败。\n\n**示例：**\n\n\n      # the command below will fail\n      RUN /bin/bash -c 'source $HOME/.bashrc;\n          echo $HOME'\n\n在应用快速修复后：\n\n\n      RUN /bin/bash -c 'source $HOME/.bashrc; \\\n          echo $HOME'\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "DockerFileRunCommandMissingContinuation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Dockerfile",
                      "index": 35,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DockerJsonFormStringLiterals",
                "shortDescription": {
                  "text": "JSON 数组格式的带单引号的字符串"
                },
                "fullDescription": {
                  "text": "报告 JSON 数组格式的带单引号的字符串。 JSON 数组形式，必须在单词周围使用双引号 (\")，而不是单引号 (')。 否则，Docker 构建会失败。 示例： '# 下面的所有命令都将失败\n  RUN ['/bin/bash', '-c', 'echo hello']\n  ADD ['binaryA.jar', 'binary2.jar', 'destination/']\n  COPY ['binaryA.jar', 'binary2.jar', 'destination/']' 在应用快速修复后： 'RUN [\"/bin/bash\", \"-c\", \"echo hello\"]\n  ADD [\"binaryA.jar\", \"binary2.jar\", \"destination/\"]\n  COPY [\"binaryA.jar\", \"binary2.jar\", \"destination/\"]'",
                  "markdown": "报告 JSON 数组格式的带单引号的字符串。\n\n\nJSON 数组形式，必须在单词周围使用双引号 (\")，而不是单引号 (')。 否则，Docker 构建会失败。\n\n**示例：**\n\n\n      # 下面的所有命令都将失败\n      RUN ['/bin/bash', '-c', 'echo hello']\n      ADD ['binaryA.jar', 'binary2.jar', 'destination/']\n      COPY ['binaryA.jar', 'binary2.jar', 'destination/']\n\n在应用快速修复后：\n\n\n      RUN [\"/bin/bash\", \"-c\", \"echo hello\"]\n      ADD [\"binaryA.jar\", \"binary2.jar\", \"destination/\"]\n      COPY [\"binaryA.jar\", \"binary2.jar\", \"destination/\"]\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DockerJsonFormStringLiterals",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Dockerfile",
                      "index": 35,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComposeUnknownValues",
                "shortDescription": {
                  "text": "未知 docker-compose YAML 值"
                },
                "fullDescription": {
                  "text": "报告 Docker Compose 文件中无法识别的值。",
                  "markdown": "报告 Docker Compose 文件中无法识别的值。  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ComposeUnknownValues",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Docker-compose",
                      "index": 30,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComposeUnknownKeys",
                "shortDescription": {
                  "text": "未知 docker-compose YAML 键"
                },
                "fullDescription": {
                  "text": "报告 Docker Compose 文件中无法识别的键。",
                  "markdown": "报告 Docker Compose 文件中无法识别的键。  "
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ComposeUnknownKeys",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Docker-compose",
                      "index": 30,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComposeUnquotedPorts",
                "shortDescription": {
                  "text": "未加引号的端口映射"
                },
                "fullDescription": {
                  "text": "报告 Docker Compose 文件中未加引号的端口映射。 根据 Compose 文件规范，'HOST:CONTAINER' 格式的映射端口在使用小于 60 的容器端口时可能会导致错误的结果，因为 YAML 会将格式为 'xx:yy' 的数字解析为六十进制值。 因此，我们建议始终将端口映射明确指定为字符串。 示例： 'ports:\n    - 3000\n    - 3000-3005\n    - 22:22\n    - 8080:8080' 在应用快速修复后： 'ports:\n    - \"3000\"\n    - \"3000-3005\"\n    - \"22:22\"\n    - \"8080:8080\"'",
                  "markdown": "报告 Docker Compose 文件中未加引号的端口映射。\n\n\n根据 [Compose 文件规范](https://docs.docker.com/compose/compose-file/compose-file-v3/#short-syntax-1)，`HOST:CONTAINER` 格式的映射端口在使用小于 60 的容器端口时可能会导致错误的结果，因为 YAML 会将格式为 `xx:yy` 的数字解析为六十进制值。\n因此，我们建议始终将端口映射明确指定为字符串。\n\n**示例：**\n\n\n      ports:\n        - 3000\n        - 3000-3005\n        - 22:22\n        - 8080:8080\n\n在应用快速修复后：\n\n\n      ports:\n        - \"3000\"\n        - \"3000-3005\"\n        - \"22:22\"\n        - \"8080:8080\"\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ComposeUnquotedPorts",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Docker-compose",
                      "index": 30,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DockerFileArgumentCount",
                "shortDescription": {
                  "text": "实参数量错误"
                },
                "fullDescription": {
                  "text": "报告 Dockerfile 命令的无效实参数量。 到达带有无效实参数量的指令后，Docker 构建将失败。",
                  "markdown": "报告 Dockerfile 命令的无效实参数量。\n\n\n到达带有无效实参数量的指令后，Docker 构建将失败。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "DockerFileArgumentCount",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Dockerfile",
                      "index": 35,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.css",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "CssInvalidHtmlTagReference",
                "shortDescription": {
                  "text": "无效类型选择器"
                },
                "fullDescription": {
                  "text": "报告与未知 HTML 元素匹配的 CSS 类型选择器。",
                  "markdown": "报告与未知 HTML 元素匹配的 CSS [类型选择器](https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssInvalidHtmlTagReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidCustomPropertyAtRuleDeclaration",
                "shortDescription": {
                  "text": "@property 声明无效"
                },
                "fullDescription": {
                  "text": "报告自定义属性的声明中缺少的必需语法、继承或 initial-value 属性。",
                  "markdown": "报告自定义属性的声明中缺少的必需[语法](https://developer.mozilla.org/en-US/docs/web/css/@property/syntax)、[继承](https://developer.mozilla.org/en-US/docs/web/css/@property/inherits)或 [initial-value](https://developer.mozilla.org/en-US/docs/web/css/@property/initial-value) 属性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidCustomPropertyAtRuleDeclaration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidFunction",
                "shortDescription": {
                  "text": "无效函数"
                },
                "fullDescription": {
                  "text": "报告未知的 CSS 函数或不正确的函数形参。",
                  "markdown": "报告未知的 [CSS 函数](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Functions)或不正确的函数形参。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidFunction",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssMissingSemicolon",
                "shortDescription": {
                  "text": "缺少分号"
                },
                "fullDescription": {
                  "text": "报告声明末尾处缺少的分号。",
                  "markdown": "报告声明末尾处缺少的分号。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssMissingSemicolon",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/代码样式问题",
                      "index": 44,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssRedundantUnit",
                "shortDescription": {
                  "text": "冗余度量单位"
                },
                "fullDescription": {
                  "text": "在规范不要求提供单位的情况下，报告值为零的度量单位。 示例： 'width: 0px'",
                  "markdown": "在规范不要求提供单位的情况下，报告值为零的度量单位。\n\n**示例：**\n\n    width: 0px\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssRedundantUnit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/代码样式问题",
                      "index": 44,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssMissingComma",
                "shortDescription": {
                  "text": "选择器列表中缺少逗号"
                },
                "fullDescription": {
                  "text": "报告多行选择器。 这很可能表明实际上要使用多个单行选择器，但有一行或几行的末尾缺少逗号。 示例： 'input /* comma has probably been forgotten */\n.button {\n  margin: 1px;\n}'",
                  "markdown": "报告多行选择器。 这很可能表明实际上要使用多个单行选择器，但有一行或几行的末尾缺少逗号。\n\n**示例：**\n\n\n    input /* comma has probably been forgotten */\n    .button {\n      margin: 1px;\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssMissingComma",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/可能的 bug",
                      "index": 54,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidPropertyValue",
                "shortDescription": {
                  "text": "无效的属性值"
                },
                "fullDescription": {
                  "text": "报告不正确的 CSS 属性值。",
                  "markdown": "报告不正确的 CSS 属性值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidPropertyValue",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssBrowserCompatibilityForProperties",
                "shortDescription": {
                  "text": "属性与所选浏览器不兼容"
                },
                "fullDescription": {
                  "text": "报告不受指定浏览器支持的 CSS 属性。 基于 MDN 兼容性数据。",
                  "markdown": "报告不受指定浏览器支持的 CSS 属性。 基于 [MDN 兼容性数据](https://github.com/mdn/browser-compat-data)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssBrowserCompatibilityForProperties",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 32,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidCustomPropertyAtRuleName",
                "shortDescription": {
                  "text": "@property 名称无效"
                },
                "fullDescription": {
                  "text": "报告无效的自定义属性名称。 自定义属性名称应以两个短划线作为前缀。 示例： '@property invalid-property-name {\n  ...\n}\n\n@property --valid-property-name {\n  ...\n}'",
                  "markdown": "报告无效的自定义属性名称。 自定义属性名称应以两个短划线作为前缀。\n\n**示例：**\n\n\n    @property invalid-property-name {\n      ...\n    }\n\n    @property --valid-property-name {\n      ...\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidCustomPropertyAtRuleName",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssConvertColorToHexInspection",
                "shortDescription": {
                  "text": "颜色可被替换为 #-hex"
                },
                "fullDescription": {
                  "text": "报告 'rgb()'、'hsl()' 或其他颜色函数。 建议用等效的十六进制表示法代替颜色函数。 示例： 'rgb(12, 15, 255)' 在应用快速修复后： '#0c0fff'.",
                  "markdown": "报告 `rgb()`、`hsl()` 或其他颜色函数。\n\n建议用等效的十六进制表示法代替颜色函数。\n\n**示例：**\n\n    rgb(12, 15, 255)\n\n在应用快速修复后：\n\n    #0c0fff.\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssConvertColorToHexInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 32,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssReplaceWithShorthandUnsafely",
                "shortDescription": {
                  "text": "属性或许可被替换为速记形式"
                },
                "fullDescription": {
                  "text": "报告一组 CSS 常规属性，并建议将不完整的一组 CSS 常规属性替换为速记形式，但在本例中，速记形式并非 100% 等效。 例如，'outline-color' 和 'outline-style' 这 2 个属性可以替换为单个 'outline'。 此类替换不是 100% 等效，因为速记形式会将所有忽略的子值重置为其初始状态。 在本例中，切换到 'outling' 简写形式意味着 'outling-width' 也将设置为其初始值，即 'medium'。 此检查不会处理整组常规属性（在切换到速记形式 100% 安全时）。 对于此类情况，请参阅“属性可以安全替换为速记形式”检查。",
                  "markdown": "报告一组 CSS 常规属性，并建议将不完整的一组 CSS 常规属性替换为速记形式，但在本例中，速记形式并非 100% 等效。\n\n\n例如，`outline-color` 和 `outline-style` 这 2 个属性可以替换为单个 `outline`。\n此类替换不是 100% 等效，因为速记形式会将所有忽略的子值重置为其初始状态。\n在本例中，切换到 `outling` 简写形式意味着 `outling-width` 也将设置为其初始值，即 `medium`。\n\n\n此检查不会处理整组常规属性（在切换到速记形式 100% 安全时）。\n对于此类情况，请参阅\"属性可以安全替换为速记形式\"检查。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CssReplaceWithShorthandUnsafely",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 32,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnknownUnit",
                "shortDescription": {
                  "text": "未知单位"
                },
                "fullDescription": {
                  "text": "报告未知单元.",
                  "markdown": "报告未知单元."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssUnknownUnit",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidMediaFeature",
                "shortDescription": {
                  "text": "无效媒体特性"
                },
                "fullDescription": {
                  "text": "报告未知 CSS 媒体特性或不正确的媒体特性值。",
                  "markdown": "报告未知 [CSS 媒体特性](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries)或不正确的媒体特性值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidMediaFeature",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssConvertColorToRgbInspection",
                "shortDescription": {
                  "text": "颜色可被替换为 rgb()"
                },
                "fullDescription": {
                  "text": "报告 'hsl()' 或 'hwb()' 颜色函数或十六进制的颜色表示法。 建议将此类颜色值替换为等效的 'rgb()' 或 'rgba()' 颜色函数。 示例： '#0c0fff' 在应用快速修复后： 'rgb(12, 15, 255)'.",
                  "markdown": "报告 `hsl()` 或 `hwb()` 颜色函数或十六进制的颜色表示法。\n\n建议将此类颜色值替换为等效的 `rgb()` 或 `rgba()` 颜色函数。\n\n**示例：**\n\n    #0c0fff\n\n在应用快速修复后：\n\n    rgb(12, 15, 255).\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssConvertColorToRgbInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 32,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnusedSymbol",
                "shortDescription": {
                  "text": "未使用的选择器"
                },
                "fullDescription": {
                  "text": "报告出现在选择器中但未在 HTML 中使用的 CSS 类或元素 ID。 请注意，只有通过代码 | 检查代码或代码 | 分析代码 | 按名称运行检查运行时，才能获得完整的检查结果。 由于性能原因，不实时检查样式表文件。",
                  "markdown": "报告出现在选择器中但未在 HTML 中使用的 CSS 类或元素 ID。\n\n\n请注意，只有通过**代码 \\| 检查代码** 或**代码 \\| 分析代码 \\| 按名称运行检查**运行时，才能获得完整的检查结果。\n由于性能原因，不实时检查样式表文件。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssUnusedSymbol",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 32,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssDeprecatedValue",
                "shortDescription": {
                  "text": "弃用的值"
                },
                "fullDescription": {
                  "text": "报告已弃用的 CSS 值。 建议将已弃用的值替换为其有效的等效值。",
                  "markdown": "报告已弃用的 CSS 值。 建议将已弃用的值替换为其有效的等效值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssDeprecatedValue",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 32,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssNonIntegerLengthInPixels",
                "shortDescription": {
                  "text": "非整数长度(像素)"
                },
                "fullDescription": {
                  "text": "报告以像素为单位的非整数长度。 示例： 'width: 3.14px'",
                  "markdown": "报告以像素为单位的非整数长度。\n\n**示例：**\n\n     width: 3.14px\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CssNonIntegerLengthInPixels",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/可能的 bug",
                      "index": 54,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidImport",
                "shortDescription": {
                  "text": "@import 位置错误"
                },
                "fullDescription": {
                  "text": "报告位置错误的 '@import' 语句。 根据规范， '@import' 规则必须优先于其他所有类型的规则，但 '@charset' 规则除外。",
                  "markdown": "报告位置错误的 `@import` 语句。\n\n\n根据[规范](https://developer.mozilla.org/en-US/docs/Web/CSS/@import)，\n`@import` 规则必须优先于其他所有类型的规则，但 `@charset` 规则除外。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssInvalidImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidAtRule",
                "shortDescription": {
                  "text": "未知 @ 规则"
                },
                "fullDescription": {
                  "text": "报告未知的 CSS @ 规则。",
                  "markdown": "报告未知的 [CSS @ 规则](https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidAtRule",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnresolvedCustomProperty",
                "shortDescription": {
                  "text": "未解析的自定义属性"
                },
                "fullDescription": {
                  "text": "报告对 'var()' 函数实参中的自定义属性的未解析引用。",
                  "markdown": "报告对 `var()` 函数实参中的[自定义属性](https://developer.mozilla.org/en-US/docs/Web/CSS/--*)的未解析引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssUnresolvedCustomProperty",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssOverwrittenProperties",
                "shortDescription": {
                  "text": "覆盖的属性"
                },
                "fullDescription": {
                  "text": "报告规则集中重复的 CSS 属性。 遵循速记属性。 示例： '.foo {\n  margin-bottom: 1px;\n  margin-bottom: 1px; /* duplicates margin-bottom */\n  margin: 0; /* overrides margin-bottom */\n}'",
                  "markdown": "报告规则集中重复的 CSS 属性。 遵循速记属性。\n\n**示例：**\n\n\n    .foo {\n      margin-bottom: 1px;\n      margin-bottom: 1px; /* duplicates margin-bottom */\n      margin: 0; /* overrides margin-bottom */\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssOverwrittenProperties",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 32,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnknownTarget",
                "shortDescription": {
                  "text": "未解析的文件引用"
                },
                "fullDescription": {
                  "text": "报告未解析的文件引用，例如 '@import' 语句中的不正确路径。",
                  "markdown": "报告未解析的文件引用，例如 `@import` 语句中的不正确路径。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssUnknownTarget",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssNegativeValue",
                "shortDescription": {
                  "text": "负属性值"
                },
                "fullDescription": {
                  "text": "报告应不小于零的 CSS 负值属性（例如对象的宽度或高度）。",
                  "markdown": "报告应不小于零的 CSS 负值属性（例如对象的宽度或高度）。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssNegativeValue",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssNoGenericFontName",
                "shortDescription": {
                  "text": "缺少通用字体系列名称"
                },
                "fullDescription": {
                  "text": "验证 'font-family' 属性是否包含通用的字体系列名称作为回退备选项。 通用字体系列名称包括：'serif'、'sans-serif'、'cursive'、'fantasy' 和 'monospace'。",
                  "markdown": "验证 [font-family](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family) 属性是否包含通用的字体系列名称作为回退备选项。\n\n\n通用字体系列名称包括：`serif`、`sans-serif`、`cursive`、`fantasy` 和 `monospace`。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssNoGenericFontName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/可能的 bug",
                      "index": 54,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnresolvedClassInComposesRule",
                "shortDescription": {
                  "text": "'composes' 规则中的未解析类"
                },
                "fullDescription": {
                  "text": "报告 'composes' 规则中无法解析为任何有效目标的 CSS 类引用。 示例： '.className {/* ... */}\n\n  .otherClassName {\n    composes: className;\n  }'",
                  "markdown": "报告 ['composes'](https://github.com/css-modules/css-modules#composition) 规则中无法解析为任何有效目标的 CSS 类引用。\n\n**示例：**\n\n\n      .className {/* ... */}\n\n      .otherClassName {\n        composes: className;\n      }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssUnresolvedClassInComposesRule",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidCharsetRule",
                "shortDescription": {
                  "text": "@charset 位置错误或不正确"
                },
                "fullDescription": {
                  "text": "报告位置错误的 '@charset' @ 规则或不正确的字符集值。",
                  "markdown": "报告位置错误的 `@charset` @ 规则或不正确的字符集值。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssInvalidCharsetRule",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssReplaceWithShorthandSafely",
                "shortDescription": {
                  "text": "属性可以安全地替换为速记形式"
                },
                "fullDescription": {
                  "text": "报告一组普通属性。 建议将整组 CSS 常规属性替换为等效的速记形式。 例如，'padding-top'、'padding-right'、'padding-bottom' 和 'padding-left' 这 4 个属性可以安全地替换为单个 'padding' 属性。 注意，如果这组常规属性不完整（例如，规则集中只有 3 个 'padding-xxx' 属性），则不会显示此检查，因为切换到速记形式可能会改变结果。 对于此类情况，可以考虑执行“属性可能已被替换为速记形式”检查。",
                  "markdown": "报告一组普通属性。 建议将整组 CSS 常规属性替换为等效的速记形式。\n\n\n例如，`padding-top`、`padding-right`、`padding-bottom` 和 `padding-left`\n这 4 个属性可以安全地替换为单个 `padding` 属性。\n\n\n注意，如果这组常规属性不完整（例如，规则集中只有 3 个 `padding-xxx` 属性），则不会显示此检查，因为切换到速记形式可能会改变结果。\n对于此类情况，可以考虑执行\"属性可能已被替换为速记形式\"检查。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CssReplaceWithShorthandSafely",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS",
                      "index": 32,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssUnknownProperty",
                "shortDescription": {
                  "text": "未知属性"
                },
                "fullDescription": {
                  "text": "报告未知的 CSS 属性或在错误的上下文中使用的属性。 将未知属性添加到“自定义 CSS 属性”列表以跳过验证。",
                  "markdown": "报告未知的 CSS 属性或在错误的上下文中使用的属性。\n\n将未知属性添加到\"自定义 CSS 属性\"列表以跳过验证。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssUnknownProperty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidPseudoSelector",
                "shortDescription": {
                  "text": "无效的伪选择器"
                },
                "fullDescription": {
                  "text": "报告不正确的 CSS pseudo-class pseudo-element。",
                  "markdown": "报告不正确的 CSS [pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes) [pseudo-element](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CssInvalidPseudoSelector",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CssInvalidNestedSelector",
                "shortDescription": {
                  "text": "嵌套选择器无效"
                },
                "fullDescription": {
                  "text": "报告以标识符或函数表示法开头的嵌套选择器。",
                  "markdown": "报告以标识符或函数表示法开头的嵌套选择器。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CssInvalidNestedSelector",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/无效元素",
                      "index": 33,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.yaml",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "YAMLSchemaValidation",
                "shortDescription": {
                  "text": "由 JSON 架构验证"
                },
                "fullDescription": {
                  "text": "如果指定了架构，则报告 YAML 文件和 JSON 架构之间的不一致。 方案示例： '{\n    \"properties\": {\n      \"SomeNumberProperty\": {\n        \"type\": \"number\"\n      }\n    }\n  }' 以下是带有相应警告的示例： 'SomeNumberProperty: hello world'",
                  "markdown": "如果指定了架构，则报告 YAML 文件和 JSON 架构之间的不一致。\n\n**方案示例：**\n\n\n      {\n        \"properties\": {\n          \"SomeNumberProperty\": {\n            \"type\": \"number\"\n          }\n        }\n      }\n\n**以下是带有相应警告的示例：**\n\n\n      SomeNumberProperty: hello world\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "YAMLSchemaValidation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 40,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLIncompatibleTypes",
                "shortDescription": {
                  "text": "可疑的类型不匹配"
                },
                "fullDescription": {
                  "text": "报告 YAML 文件中的标量值类型与相似位置中的值类型不匹配。 示例： 'myElements:\n  - value1\n  - value2\n  - false # <- 已报告，因为它是布尔值，而其他值是字符串'",
                  "markdown": "报告 YAML 文件中的标量值类型与相似位置中的值类型不匹配。\n\n**示例：**\n\n\n    myElements:\n      - value1\n      - value2\n      - false # <- 已报告，因为它是布尔值，而其他值是字符串\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "YAMLIncompatibleTypes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 40,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLUnresolvedAlias",
                "shortDescription": {
                  "text": "未解析的别名"
                },
                "fullDescription": {
                  "text": "报告 YAML 文件中的未解析别名。 示例： 'some_key: *unknown_alias'",
                  "markdown": "报告 YAML 文件中的未解析别名。\n\n**示例：**\n\n\n      some_key: *unknown_alias\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "YAMLUnresolvedAlias",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 40,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLSchemaDeprecation",
                "shortDescription": {
                  "text": "弃用的 YAML 键"
                },
                "fullDescription": {
                  "text": "报告 YAML 文件中已弃用的键。 仅当存在与相应 YAML 文件关联的 JSON 架构时，才会检查是否弃用。 请注意，JSON 架构规范中尚未定义弃用机制，并且此检查使用非标准的 'deprecationMessage' 扩展。 方案弃用示例： '{\n    \"properties\": {\n      \"SomeDeprecatedProperty\": {\n        \"deprecationMessage\": \"Baz\",\n        \"description\": \"Foo bar\"\n      }\n    }\n  }' 以下是带有相应警告的示例： 'SomeDeprecatedProperty: some value'",
                  "markdown": "报告 YAML 文件中已弃用的键。\n\n仅当存在与相应 YAML 文件关联的 JSON 架构时，才会检查是否弃用。\n\n请注意，JSON 架构规范中尚未定义弃用机制，并且此检查使用非标准的 `deprecationMessage` 扩展。\n\n**方案弃用示例：**\n\n\n      {\n        \"properties\": {\n          \"SomeDeprecatedProperty\": {\n            \"deprecationMessage\": \"Baz\",\n            \"description\": \"Foo bar\"\n          }\n        }\n      }\n\n**以下是带有相应警告的示例：**\n\n\n      SomeDeprecatedProperty: some value\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "YAMLSchemaDeprecation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 40,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLRecursiveAlias",
                "shortDescription": {
                  "text": "递归别名"
                },
                "fullDescription": {
                  "text": "报告 YAML 别名中的递归。 别名不能递归并在相应定位标记引用的数据中使用。 示例： 'some_key: &some_anchor\n    sub_key1: value1\n    sub_key2: *some_anchor'",
                  "markdown": "报告 YAML 别名中的递归。\n\n别名不能递归并在相应定位标记引用的数据中使用。\n\n**示例：**\n\n\n      some_key: &some_anchor\n        sub_key1: value1\n        sub_key2: *some_anchor\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "YAMLRecursiveAlias",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 40,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLDuplicatedKeys",
                "shortDescription": {
                  "text": "重复的 YAML 键"
                },
                "fullDescription": {
                  "text": "报告 YAML 文件中的重复键。 示例： 'same_key: some value\n  same_key: another value'",
                  "markdown": "报告 YAML 文件中的重复键。\n\n**示例：**\n\n\n      same_key: some value\n      same_key: another value\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "YAMLDuplicatedKeys",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 40,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLUnusedAnchor",
                "shortDescription": {
                  "text": "未使用的定位标记"
                },
                "fullDescription": {
                  "text": "报告未使用的定位标记。 示例： 'some_key: &some_anchor\n    key1: value1'",
                  "markdown": "报告未使用的定位标记。\n\n**示例：**\n\n\n      some_key: &some_anchor\n        key1: value1\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "YAMLUnusedAnchor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 40,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.swagger",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "SwJsonUnresolvedReferencesInspection",
                "shortDescription": {
                  "text": "未解析的引用"
                },
                "fullDescription": {
                  "text": "检测 JSON 规范文件中的未解析引用。",
                  "markdown": "检测 JSON 规范文件中的未解析引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "SwJsonUnresolvedReferencesInspection",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "OpenAPI 规范",
                      "index": 43,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwYamlUnresolvedReferencesInspection",
                "shortDescription": {
                  "text": "未解析的引用"
                },
                "fullDescription": {
                  "text": "检测 YAML 规范文件中的未解析引用。",
                  "markdown": "检测 YAML 规范文件中的未解析引用。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "SwYamlUnresolvedReferencesInspection",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "OpenAPI 规范",
                      "index": 43,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwYamlMaybeSpecificationInspection",
                "shortDescription": {
                  "text": "可能的 OpenAPI/Swagger 规范候选项"
                },
                "fullDescription": {
                  "text": "检测可解释为 OpenAPI/Swagger 规范一部分的 YAML 文件。 此类文件不包含显式规范特性，但它们引用自附近的主规范文件。 下面的示例包含位于同一目录中的两个文件。 第一个是一个普通的主规范文件。 第二个引用自第一个，因此建议将其视为一个规范。 主规范文件 'openapi.yaml'： 'openapi: 3.1.0\ncomponents:\n  schemas:\n    CustomSchema:\n      description: Custom schema object\n      properties:\n        foo:\n          $ref: 'common.components.yaml#/components/schemas/CommonSchema'' 规范文件候选项 'common.components.yaml'： 'components: # 'Mark file as OpenAPI specification' highlighting\n  schemas:\n    CommonSchema:\n      description: Common schema object reused in several specifications'",
                  "markdown": "检测可解释为 OpenAPI/Swagger 规范一部分的 YAML 文件。\n\n\n此类文件不包含显式规范特性，但它们引用自附近的主规范文件。\n\n\n下面的示例包含位于同一目录中的两个文件。 第一个是一个普通的主规范文件。\n第二个引用自第一个，因此建议将其视为一个规范。\n\n**主规范文件 `openapi.yaml`：**\n\n\n    openapi: 3.1.0\n    components:\n      schemas:\n        CustomSchema:\n          description: Custom schema object\n          properties:\n            foo:\n              $ref: 'common.components.yaml#/components/schemas/CommonSchema'\n\n**规范文件候选项 `common.components.yaml`：**\n\n\n    components: # 'Mark file as OpenAPI specification' highlighting\n      schemas:\n        CommonSchema:\n          description: Common schema object reused in several specifications\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SwYamlMaybeSpecificationInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "OpenAPI 规范",
                      "index": 43,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwJsonMaybeSpecificationInspection",
                "shortDescription": {
                  "text": "可能的 OpenAPI/Swagger 规范候选项"
                },
                "fullDescription": {
                  "text": "检测可解释为 OpenAPI/Swagger 规范一部分的 JSON 文件。 此类文件不包含显式规范特性，但它们引用自附近的主规范文件。 下面的示例包含位于同一目录中的两个文件。 第一个是一个普通的主规范文件。 第二个引用自第一个，因此建议将其视为一个规范。 主规范文件 'openapi.yaml'： 'openapi: 3.1.0\ncomponents:\n  schemas:\n    CustomSchema:\n      description: Custom schema object\n      properties:\n        foo:\n          $ref: 'common.components.json#/components/schemas/CommonSchema'' 规范文件候选项 'common.components.json'： '{\n  \"components\": { // 'Mark file as OpenAPI specification' highlighting\n    \"schemas\": {\n      \"CommonSchema\": {\n        \"description\": \"Common schema object reused in several specifications\"\n      }\n    }\n  }\n}'",
                  "markdown": "检测可解释为 OpenAPI/Swagger 规范一部分的 JSON 文件。\n\n\n此类文件不包含显式规范特性，但它们引用自附近的主规范文件。\n\n\n下面的示例包含位于同一目录中的两个文件。 第一个是一个普通的主规范文件。\n第二个引用自第一个，因此建议将其视为一个规范。\n\n**主规范文件 `openapi.yaml`：**\n\n\n    openapi: 3.1.0\n    components:\n      schemas:\n        CustomSchema:\n          description: Custom schema object\n          properties:\n            foo:\n              $ref: 'common.components.json#/components/schemas/CommonSchema'\n\n**规范文件候选项 `common.components.json`：**\n\n\n    {\n      \"components\": { // 'Mark file as OpenAPI specification' highlighting\n        \"schemas\": {\n          \"CommonSchema\": {\n            \"description\": \"Common schema object reused in several specifications\"\n          }\n        }\n      }\n    }\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SwJsonMaybeSpecificationInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "OpenAPI 规范",
                      "index": 43,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.security.package-checker",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "GoVulnerableCodeUsages",
                "shortDescription": {
                  "text": "易受攻击的 API 用法"
                },
                "fullDescription": {
                  "text": "报告导入依赖项的脆弱 API 的用法。 修正报告的问题有助于防止您的软件受到攻击者的破坏。 要解决问题，您可以更新到漏洞已修正的版本（如果可用）或切换到没有漏洞的依赖项。 由 Checkmarx (c) 提供的脆弱性数据。",
                  "markdown": "报告导入依赖项的脆弱 API 的用法。\n\n修正报告的问题有助于防止您的软件受到攻击者的破坏。\n\n要解决问题，您可以更新到漏洞已修正的版本（如果可用）或切换到没有漏洞的依赖项。\n\n由 [Checkmarx](https://checkmarx.com/) (c) 提供的脆弱性数据。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoVulnerableCodeUsages",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go/安全性",
                      "index": 45,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VulnerableLibrariesLocal",
                "shortDescription": {
                  "text": "易受攻击的声明依赖项"
                },
                "fullDescription": {
                  "text": "报告在项目中声明的 Gradle、Maven、NPM 和 PyPI 依赖项中的漏洞。 Gradle 和 Maven 依赖项的完整列表显示在“项目”工具窗口的“外部库”下。 修正报告的问题有助于防止您的软件受到攻击者的破坏。 要解决问题，您可以更新到漏洞已修正的版本（如果可用）或切换到没有漏洞的依赖项。 可用的快速修复可能会建议更新到安全版本或访问 Checkmarx 网站以详细了解特定漏洞。 由 Checkmarx (c) 提供的脆弱性数据。",
                  "markdown": "报告在项目中声明的 Gradle、Maven、NPM 和 PyPI 依赖项中的漏洞。\nGradle 和 Maven 依赖项的完整列表显示在\"项目\"工具窗口的\"外部库\"下。\n\n修正报告的问题有助于防止您的软件受到攻击者的破坏。\n\n要解决问题，您可以更新到漏洞已修正的版本（如果可用）或切换到没有漏洞的依赖项。\n\n可用的快速修复可能会建议更新到安全版本或访问 Checkmarx 网站以详细了解特定漏洞。\n\n由 [Checkmarx](https://checkmarx.com/) (c) 提供的脆弱性数据。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VulnerableLibrariesLocal",
                    "cweIds": [
                      1395
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "安全性",
                      "index": 65,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NpmVulnerableApiCode",
                "shortDescription": {
                  "text": "易受攻击的 API 用法"
                },
                "fullDescription": {
                  "text": "报告导入依赖项的脆弱 API 的用法。 修正报告的问题有助于防止您的软件受到攻击者的破坏。 要解决问题，您可以更新到漏洞已修正的版本（如果可用）或切换到没有漏洞的依赖项。 由 Checkmarx (c) 提供的脆弱性数据。",
                  "markdown": "报告导入依赖项的脆弱 API 的用法。\n\n修正报告的问题有助于防止您的软件受到攻击者的破坏。\n\n要解决问题，您可以更新到漏洞已修正的版本（如果可用）或切换到没有漏洞的依赖项。\n\n由 [Checkmarx](https://checkmarx.com/) (c) 提供的脆弱性数据。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NpmVulnerableApiCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript and TypeScript/安全性",
                      "index": 75,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.intellij.intelliLang",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "InjectedReferences",
                "shortDescription": {
                  "text": "已注入的引用"
                },
                "fullDescription": {
                  "text": "报告语言注入所注入的未解析引用。 示例： '@Language(\"file-reference\")\n    String fileName = \"/home/user/nonexistent.file\"; // 文件不存在时高亮显示'",
                  "markdown": "报告[语言注入](https://www.jetbrains.com/help/idea/using-language-injections.html)所注入的未解析引用。\n\n示例：\n\n\n        @Language(\"file-reference\")\n        String fileName = \"/home/user/nonexistent.file\"; // 文件不存在时高亮显示\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "InjectedReferences",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "常规",
                      "index": 25,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.go-template",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "GoTemplateUnknownVariable",
                "shortDescription": {
                  "text": "未知变量"
                },
                "fullDescription": {
                  "text": "报告 Go 模板中未知变量的用法。 解析此类模板将导致 panic，因为必须在使用前声明变量。 示例： '{{$v}} 为零。 {{/* 不良，$v 未知 */}}\n{{$v := 0}}{{$v}} 为零。 {{/* 优良 */}}'",
                  "markdown": "报告 Go 模板中未知变量的用法。\n\n解析此类模板将导致 panic，因为必须在使用前声明变量。\n\n示例：\n\n    {{$v}} 为零。 {{/* 不良，$v 未知 */}}\n    {{$v := 0}}{{$v}} 为零。 {{/* 优良 */}}\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GoTemplateUnknownVariable",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go Template/常规",
                      "index": 50,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GoTemplateDuplicateVariable",
                "shortDescription": {
                  "text": "重复变量"
                },
                "fullDescription": {
                  "text": "报告在同一范围内声明的重复 Go 模板变量。 复制变量会重新赋值具有相同名称的现有变量。 此操作可能会导致不同的不可预测的问题。 示例： '{{$v := 0}}{{$v := 1}}{{$v}} 为 0。 {{/* 评估为 '1 为 0' */}}\n{{$v := 0}}{{$w := 1}}{{$v}} 为 0。 {{/* 按预期工作 */}}'",
                  "markdown": "报告在同一范围内声明的重复 Go 模板变量。\n\n复制变量会重新赋值具有相同名称的现有变量。 此操作可能会导致不同的不可预测的问题。\n\n示例：\n\n    {{$v := 0}}{{$v := 1}}{{$v}} 为 0。 {{/* 评估为 '1 为 0' */}}\n    {{$v := 0}}{{$w := 1}}{{$v}} 为 0。 {{/* 按预期工作 */}}\n"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GoTemplateDuplicateVariable",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Go Template/常规",
                      "index": 50,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.intellij.qodana",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "GoCoverageInspection",
                "shortDescription": {
                  "text": "检查 GO 源代码覆盖率"
                },
                "fullDescription": {
                  "text": "报告覆盖率低于某个阈值的方法和文件。",
                  "markdown": "报告覆盖率低于某个阈值的方法和文件。"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GoCoverageInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "代码覆盖率",
                      "index": 53,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "QodanaSanity",
                "shortDescription": {
                  "text": "健全性"
                },
                "fullDescription": {
                  "text": "报告对此文件至关重要的问题，如语法错误、未解析的方法和变量等…",
                  "markdown": "报告对此文件至关重要的问题，如语法错误、未解析的方法和变量等..."
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "QodanaSanity",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Qodana",
                      "index": 71,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.github",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "GithubFunctionSignatureValidation",
                "shortDescription": {
                  "text": "标准库函数验证"
                },
                "fullDescription": {
                  "text": "报告无效的 GitHub Actions 表达式语言标准库函数调用 有关 GitHub Actions 表达式语言的详细信息，请参阅 GitHub 文档。",
                  "markdown": "报告无效的 GitHub Actions 表达式语言标准库函数调用\n\n\n有关 GitHub Actions 表达式语言的详细信息，请参阅 [GitHub 文档](https://docs.github.com/en/actions/learn-github-actions/expressions)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GithubFunctionSignatureValidation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "GitHub 操作",
                      "index": 62,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UndefinedParamsPresent",
                "shortDescription": {
                  "text": "未定义的操作形参"
                },
                "fullDescription": {
                  "text": "报告是否存在未在操作中定义的形参。 它还通过移除未定义的形参提供快速修复。 有关操作形参的详细信息，请参阅 GitHub 文档。",
                  "markdown": "报告是否存在未在操作中定义的形参。 它还通过移除未定义的形参提供快速修复。\n\n\n有关操作形参的详细信息，请参阅 [GitHub 文档](https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runsstepswith)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UndefinedParamsPresent",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "GitHub 操作",
                      "index": 62,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MandatoryParamsAbsent",
                "shortDescription": {
                  "text": "无效的操作形参"
                },
                "fullDescription": {
                  "text": "报告缺少无操作默认值的强制形参的情况。 它还通过用空值添加缺少的形参来提供快速修复。 有关操作形参的详细信息，请参阅 GitHub 文档。",
                  "markdown": "报告缺少无操作默认值的强制形参的情况。 它还通过用空值添加缺少的形参来提供快速修复。\n\n\n有关操作形参的详细信息，请参阅 [GitHub 文档](https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runsstepswith)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "MandatoryParamsAbsent",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "GitHub 操作",
                      "index": 62,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UndefinedAction",
                "shortDescription": {
                  "text": "未定义的操作引用"
                },
                "fullDescription": {
                  "text": "检测 GitHub 操作和工作流文件中未解析的操作引用。 有关操作引用的详细信息，请参阅 GitHub文档。",
                  "markdown": "检测 GitHub 操作和工作流文件中未解析的操作引用。\n\n\n有关操作引用的详细信息，请参阅 [GitHub文档](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsuses)。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UndefinedAction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "GitHub 操作",
                      "index": 62,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.stylelint",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "Stylelint",
                "shortDescription": {
                  "text": "Stylelint"
                },
                "fullDescription": {
                  "text": "报告 Stylelint linter 检测到的差异。 高亮显示基于 Stylelint 配置文件中为每条规则指定的规则严重性。",
                  "markdown": "报告 [Stylelint](http://stylelint.io) linter 检测到的差异。   \n\n高亮显示基于 [Stylelint 配置文件](https://stylelint.io/user-guide/configure)中为每条规则指定的规则严重性。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Stylelint",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "CSS/代码质量工具",
                      "index": 66,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "intellij.webpack",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "WebpackConfigHighlighting",
                "shortDescription": {
                  "text": "Webpack 配置符合 JSON 架构"
                },
                "fullDescription": {
                  "text": "根据 webpack 选项架构验证 webpack 配置文件中的选项（名称应以 `webpack` 开头，例如 `webpack.config.js`）。 禁用此检查以关闭配置对象内部的验证和代码补全。",
                  "markdown": "根据 [webpack 选项架构](https://github.com/webpack/webpack/blob/master/schemas/WebpackOptions.json)验证 webpack 配置文件中的选项（名称应以 \\`webpack\\` 开头，例如 \\`webpack.config.js\\`）。   \n\n禁用此检查以关闭配置对象内部的验证和代码补全。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WebpackConfigHighlighting",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaScript 和 TypeScript/常规",
                      "index": 13,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.grpc",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "GrpcSchemes",
                "shortDescription": {
                  "text": "可以替换或省略 GRPC 请求架构"
                },
                "fullDescription": {
                  "text": "报告 gRPC 请求中不必要的 `grpc` 或标准的 `http[s]` 方案用法 示例请求： '# `grpc` 方案可以省略，因为默认情况下假定连接不安全\nGRPC grpc://localhost/TestService/testRpc' '# `http` 方案可以省略：对于不安全的连接首选空架构，对于安全的连接首选专用的 `grpcs` 方案\nGRPC http://localhost/TestService/testRpc' '# `https` 方案应被替换为 `grpcs`：首选专用的 `grpcs` 方案，表示需要启用传输层安全才能执行请求\nGRPC https://localhost/TestService/testRpc' 为避免混淆，建议在 gRPC 请求中使用专用的 `grpcs` 方案，此时请求应使用底层的安全通道。 否则，方案可能会被完全省略",
                  "markdown": "报告 gRPC 请求中不必要的 \\`grpc\\` 或标准的 \\`http\\[s\\]\\` 方案用法\n\n\n示例请求：\n\n\n    # `grpc` 方案可以省略，因为默认情况下假定连接不安全\n    GRPC grpc://localhost/TestService/testRpc\n\n\n    # `http` 方案可以省略：对于不安全的连接首选空架构，对于安全的连接首选专用的 `grpcs` 方案\n    GRPC http://localhost/TestService/testRpc\n\n\n    # `https` 方案应被替换为 `grpcs`：首选专用的 `grpcs` 方案，表示需要启用传输层安全才能执行请求\n    GRPC https://localhost/TestService/testRpc\n\n\n为避免混淆，建议在 gRPC 请求中使用专用的 \\`grpcs\\` 方案，此时请求应使用底层的安全通道。 否则，方案可能会被完全省略"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GrpcSchemes",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "不适当的 gRPC 请求架构",
                      "index": 72,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "tanvd.grazi",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "LanguageDetectionInspection",
                "shortDescription": {
                  "text": "自然语言检测"
                },
                "fullDescription": {
                  "text": "检测自然语言并建议启用相应的语法和拼写检查。",
                  "markdown": "检测自然语言并建议启用相应的语法和拼写检查。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LanguageDetectionInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "校对",
                      "index": 61,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrazieInspection",
                "shortDescription": {
                  "text": "语法"
                },
                "fullDescription": {
                  "text": "报告文本中的语法错误。 您可以在设置 | 编辑器 | 自然语言 | 语法中配置检查。",
                  "markdown": "报告文本中的语法错误。 您可以在[设置 \\| 编辑器 \\| 自然语言 \\| 语法](settings://reference.settingsdialog.project.grazie)中配置检查。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GrazieInspection",
                    "ideaSeverity": "GRAMMAR_ERROR",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "校对",
                      "index": 61,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "idea.plugin.protoeditor",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "PbDuplicatedImports",
                "shortDescription": {
                  "text": "重复的 import 语句"
                },
                "fullDescription": {
                  "text": "报告有效对等的 import 语句。",
                  "markdown": "报告有效对等的 import 语句。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PbDuplicatedImports",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "协议缓冲区",
                      "index": 73,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.plugins.watcher",
            "version": "241.15989.157",
            "rules": [
              {
                "id": "TaskProblemsInspection",
                "shortDescription": {
                  "text": "File Watcher 问题"
                },
                "fullDescription": {
                  "text": "报告 File Watcher 中的输出筛选器检测到的错误。 File Watcher 跟踪文件中的更改，并在检测到更改时执行配置的命令。",
                  "markdown": "报告 File Watcher 中的输出筛选器检测到的错误。\n\n\nFile Watcher 跟踪文件中的更改，并在检测到更改时执行配置的命令。"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TaskProblemsInspection",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "File Watcher",
                      "index": 78,
                      "toolComponent": {
                        "name": "GO"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          }
        ]
      },
      "invocations": [
        {
          "startTimeUtc": "2024-08-30T01:38:49.3846034Z",
          "exitCode": 0,
          "executionSuccessful": true
        }
      ],
      "language": "en-US",
      "versionControlProvenance": [
        {
          "properties": {
            "repoUrl": "",
            "vcsType": "Git"
          }
        }
      ],
      "results": [],
      "automationDetails": {
        "id": "test/qodana/2024-08-30",
        "guid": "76c4ef56-4b50-4316-a11a-ccbf1408c4cc",
        "properties": {
          "jobUrl": ""
        }
      },
      "newlineSequences": [
        "\r\n",
        "\n"
      ],
      "properties": {
        "configProfile": "starter",
        "deviceId": "1409221feb13798-f83e-4920-9d6d-fbe19efe0ff1",
        "qodanaNewResultSummary": {
          "moderate": 1,
          "high": 15,
          "total": 16
        }
      }
    }
  ],
  "properties": {
    "runTimestamp": "1724981931205"
  }
}